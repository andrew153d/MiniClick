
MiniClick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000025b0  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000025b0  000025b0  000125b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000854  20000000  000025b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000001a0  20000854  00002e0c  00020854  2**2
                  ALLOC
  4 .stack        00000404  200009f4  00002fac  00020854  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00020854  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002087c  2**0
                  CONTENTS, READONLY
  7 .debug_info   0002742c  00000000  00000000  000208d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004323  00000000  00000000  00047d01  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000471e  00000000  00000000  0004c024  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000005c8  00000000  00000000  00050742  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000590  00000000  00000000  00050d0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001620c  00000000  00000000  0005129a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000c3e1  00000000  00000000  000674a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00060b03  00000000  00000000  00073887  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001094  00000000  00000000  000d438c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	f8 0d 00 20 dd 16 00 00 d9 16 00 00 d9 16 00 00     ... ............
	...
      2c:	d9 16 00 00 00 00 00 00 00 00 00 00 d9 16 00 00     ................
      3c:	d9 16 00 00 d9 16 00 00 d9 16 00 00 55 0c 00 00     ............U...
      4c:	d9 16 00 00 5d 0e 00 00 d9 16 00 00 d9 16 00 00     ....]...........
      5c:	00 00 00 00 d9 16 00 00 3d 0e 00 00 4d 0e 00 00     ........=...M...
	...
      74:	d5 0c 00 00 e5 0c 00 00 d9 16 00 00 00 00 00 00     ................
      84:	00 00 00 00 d9 16 00 00                             ........

0000008c <__do_global_dtors_aux>:
      8c:	b510      	push	{r4, lr}
      8e:	4c06      	ldr	r4, [pc, #24]	; (a8 <__do_global_dtors_aux+0x1c>)
      90:	7823      	ldrb	r3, [r4, #0]
      92:	2b00      	cmp	r3, #0
      94:	d107      	bne.n	a6 <__do_global_dtors_aux+0x1a>
      96:	4b05      	ldr	r3, [pc, #20]	; (ac <__do_global_dtors_aux+0x20>)
      98:	2b00      	cmp	r3, #0
      9a:	d002      	beq.n	a2 <__do_global_dtors_aux+0x16>
      9c:	4804      	ldr	r0, [pc, #16]	; (b0 <__do_global_dtors_aux+0x24>)
      9e:	e000      	b.n	a2 <__do_global_dtors_aux+0x16>
      a0:	bf00      	nop
      a2:	2301      	movs	r3, #1
      a4:	7023      	strb	r3, [r4, #0]
      a6:	bd10      	pop	{r4, pc}
      a8:	20000854 	.word	0x20000854
      ac:	00000000 	.word	0x00000000
      b0:	000025b8 	.word	0x000025b8

000000b4 <frame_dummy>:
      b4:	4b08      	ldr	r3, [pc, #32]	; (d8 <frame_dummy+0x24>)
      b6:	b510      	push	{r4, lr}
      b8:	2b00      	cmp	r3, #0
      ba:	d003      	beq.n	c4 <frame_dummy+0x10>
      bc:	4907      	ldr	r1, [pc, #28]	; (dc <frame_dummy+0x28>)
      be:	4808      	ldr	r0, [pc, #32]	; (e0 <frame_dummy+0x2c>)
      c0:	e000      	b.n	c4 <frame_dummy+0x10>
      c2:	bf00      	nop
      c4:	4807      	ldr	r0, [pc, #28]	; (e4 <frame_dummy+0x30>)
      c6:	6803      	ldr	r3, [r0, #0]
      c8:	2b00      	cmp	r3, #0
      ca:	d100      	bne.n	ce <frame_dummy+0x1a>
      cc:	bd10      	pop	{r4, pc}
      ce:	4b06      	ldr	r3, [pc, #24]	; (e8 <frame_dummy+0x34>)
      d0:	2b00      	cmp	r3, #0
      d2:	d0fb      	beq.n	cc <frame_dummy+0x18>
      d4:	4798      	blx	r3
      d6:	e7f9      	b.n	cc <frame_dummy+0x18>
      d8:	00000000 	.word	0x00000000
      dc:	20000858 	.word	0x20000858
      e0:	000025b8 	.word	0x000025b8
      e4:	000025b8 	.word	0x000025b8
      e8:	00000000 	.word	0x00000000

000000ec <_i2c_slave_wait_for_sync>:
{
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	SercomI2cs *const i2c_hw = &(module->hw->I2CS);
      ec:	6803      	ldr	r3, [r0, #0]

	/* Return sync status */
#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CS_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CS_SYNCBUSY_MASK);
      ee:	69db      	ldr	r3, [r3, #28]
		const struct i2c_slave_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (i2c_slave_is_syncing(module)) {
      f0:	079b      	lsls	r3, r3, #30
      f2:	d1fb      	bne.n	ec <_i2c_slave_wait_for_sync>
		/* Wait for I<SUP>2</SUP>C module to sync */
	}
}
      f4:	4770      	bx	lr
	...

000000f8 <_Z25i2c_read_request_callbackP16i2c_slave_module>:
	i2c_slave_enable(&i2c_slave_instance);
}

void i2c_read_request_callback(
struct i2c_slave_module *const module)
{
      f8:	b5f0      	push	{r4, r5, r6, r7, lr}
      fa:	b083      	sub	sp, #12
      fc:	0004      	movs	r4, r0
	volatile uint8_t read_address = packet.data[0] & 0x0F;
      fe:	491a      	ldr	r1, [pc, #104]	; (168 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x70>)
     100:	684b      	ldr	r3, [r1, #4]
     102:	781a      	ldrb	r2, [r3, #0]
     104:	230f      	movs	r3, #15
     106:	4013      	ands	r3, r2
     108:	466a      	mov	r2, sp
     10a:	71d3      	strb	r3, [r2, #7]
	 packet.data_length = 1;
     10c:	2301      	movs	r3, #1
     10e:	800b      	strh	r3, [r1, #0]
	switch(read_address){
     110:	79d3      	ldrb	r3, [r2, #7]
     112:	b2db      	uxtb	r3, r3
     114:	2b00      	cmp	r3, #0
     116:	d007      	beq.n	128 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x30>
     118:	2b01      	cmp	r3, #1
     11a:	d016      	beq.n	14a <_Z25i2c_read_request_callbackP16i2c_slave_module+0x52>
		 buffer.read(device_registers[read_address]);
		 packet.data = &device_registers[read_address];
		break;
	}	
	/* Write buffer to master */
	i2c_slave_write_packet_job(module, &packet);
     11c:	4912      	ldr	r1, [pc, #72]	; (168 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x70>)
     11e:	0020      	movs	r0, r4
     120:	4b12      	ldr	r3, [pc, #72]	; (16c <_Z25i2c_read_request_callbackP16i2c_slave_module+0x74>)
     122:	4798      	blx	r3
}
     124:	b003      	add	sp, #12
     126:	bdf0      	pop	{r4, r5, r6, r7, pc}
		device_registers[read_address] = buffer.size();
     128:	466b      	mov	r3, sp
     12a:	1dde      	adds	r6, r3, #7
     12c:	79dd      	ldrb	r5, [r3, #7]
     12e:	b2ed      	uxtb	r5, r5
     130:	4f0d      	ldr	r7, [pc, #52]	; (168 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x70>)
     132:	0038      	movs	r0, r7
     134:	3008      	adds	r0, #8
     136:	4b0e      	ldr	r3, [pc, #56]	; (170 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x78>)
     138:	4798      	blx	r3
     13a:	197d      	adds	r5, r7, r5
     13c:	7628      	strb	r0, [r5, #24]
		 packet.data = &device_registers[read_address];
     13e:	7832      	ldrb	r2, [r6, #0]
     140:	003b      	movs	r3, r7
     142:	3318      	adds	r3, #24
     144:	189b      	adds	r3, r3, r2
     146:	607b      	str	r3, [r7, #4]
		break;
     148:	e7e8      	b.n	11c <_Z25i2c_read_request_callbackP16i2c_slave_module+0x24>
		 buffer.read(device_registers[read_address]);
     14a:	466b      	mov	r3, sp
     14c:	1ddf      	adds	r7, r3, #7
     14e:	79d9      	ldrb	r1, [r3, #7]
     150:	4e05      	ldr	r6, [pc, #20]	; (168 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x70>)
     152:	0035      	movs	r5, r6
     154:	3518      	adds	r5, #24
     156:	1869      	adds	r1, r5, r1
     158:	0030      	movs	r0, r6
     15a:	3008      	adds	r0, #8
     15c:	4b05      	ldr	r3, [pc, #20]	; (174 <_Z25i2c_read_request_callbackP16i2c_slave_module+0x7c>)
     15e:	4798      	blx	r3
		 packet.data = &device_registers[read_address];
     160:	783b      	ldrb	r3, [r7, #0]
     162:	18ed      	adds	r5, r5, r3
     164:	6075      	str	r5, [r6, #4]
		break;
     166:	e7d9      	b.n	11c <_Z25i2c_read_request_callbackP16i2c_slave_module+0x24>
     168:	20000870 	.word	0x20000870
     16c:	000007b7 	.word	0x000007b7
     170:	00000a6d 	.word	0x00000a6d
     174:	00000ae1 	.word	0x00000ae1

00000178 <_Z26i2c_write_request_callbackP16i2c_slave_module>:

void i2c_write_request_callback(struct i2c_slave_module *const module)
{
     178:	b510      	push	{r4, lr}
	/* Init i2c packet */
	packet.data_length = 1;
     17a:	4904      	ldr	r1, [pc, #16]	; (18c <_Z26i2c_write_request_callbackP16i2c_slave_module+0x14>)
     17c:	2301      	movs	r3, #1
     17e:	800b      	strh	r3, [r1, #0]
	packet.data        = read_buffer;
     180:	000b      	movs	r3, r1
     182:	3324      	adds	r3, #36	; 0x24
     184:	604b      	str	r3, [r1, #4]
	/* Read buffer from master */
	if (i2c_slave_read_packet_job(module, &packet) != STATUS_OK) {
     186:	4b02      	ldr	r3, [pc, #8]	; (190 <_Z26i2c_write_request_callbackP16i2c_slave_module+0x18>)
     188:	4798      	blx	r3
		//packet.data        = read_buffer;
	}
}
     18a:	bd10      	pop	{r4, pc}
     18c:	20000870 	.word	0x20000870
     190:	0000078f 	.word	0x0000078f

00000194 <_Z41__static_initialization_and_destruction_0ii>:
		delay_cycles_ms(10);
		ledStrip.write();
		
		
	}
}
     194:	b510      	push	{r4, lr}
     196:	2801      	cmp	r0, #1
     198:	d000      	beq.n	19c <_Z41__static_initialization_and_destruction_0ii+0x8>
     19a:	bd10      	pop	{r4, pc}
     19c:	4b07      	ldr	r3, [pc, #28]	; (1bc <_Z41__static_initialization_and_destruction_0ii+0x28>)
     19e:	4299      	cmp	r1, r3
     1a0:	d1fb      	bne.n	19a <_Z41__static_initialization_and_destruction_0ii+0x6>
CircularBuffer buffer(10);
     1a2:	4c07      	ldr	r4, [pc, #28]	; (1c0 <_Z41__static_initialization_and_destruction_0ii+0x2c>)
     1a4:	3408      	adds	r4, #8
     1a6:	210a      	movs	r1, #10
     1a8:	0020      	movs	r0, r4
     1aa:	4b06      	ldr	r3, [pc, #24]	; (1c4 <_Z41__static_initialization_and_destruction_0ii+0x30>)
     1ac:	4798      	blx	r3
     1ae:	4a06      	ldr	r2, [pc, #24]	; (1c8 <_Z41__static_initialization_and_destruction_0ii+0x34>)
     1b0:	4906      	ldr	r1, [pc, #24]	; (1cc <_Z41__static_initialization_and_destruction_0ii+0x38>)
     1b2:	0020      	movs	r0, r4
     1b4:	4b06      	ldr	r3, [pc, #24]	; (1d0 <_Z41__static_initialization_and_destruction_0ii+0x3c>)
     1b6:	4798      	blx	r3
}
     1b8:	e7ef      	b.n	19a <_Z41__static_initialization_and_destruction_0ii+0x6>
     1ba:	46c0      	nop			; (mov r8, r8)
     1bc:	0000ffff 	.word	0x0000ffff
     1c0:	20000870 	.word	0x20000870
     1c4:	00000a61 	.word	0x00000a61
     1c8:	20000000 	.word	0x20000000
     1cc:	00000a6b 	.word	0x00000a6b
     1d0:	000017e1 	.word	0x000017e1

000001d4 <_Z19configure_i2c_slavev>:
{
     1d4:	b530      	push	{r4, r5, lr}
     1d6:	b08d      	sub	sp, #52	; 0x34
static inline void i2c_slave_get_config_defaults(
		struct i2c_slave_config *const config)
{
	/*Sanity check argument */
	Assert(config);
	config->enable_scl_low_timeout = false;
     1d8:	aa02      	add	r2, sp, #8
     1da:	2100      	movs	r1, #0
     1dc:	7011      	strb	r1, [r2, #0]
	config->sda_hold_time = I2C_SLAVE_SDA_HOLD_TIME_300NS_600NS;
     1de:	2380      	movs	r3, #128	; 0x80
     1e0:	039b      	lsls	r3, r3, #14
     1e2:	6053      	str	r3, [r2, #4]
	config->buffer_timeout = 65535;
     1e4:	2301      	movs	r3, #1
     1e6:	425b      	negs	r3, r3
     1e8:	8113      	strh	r3, [r2, #8]
	config->address_mode = I2C_SLAVE_ADDRESS_MODE_MASK;
     1ea:	2300      	movs	r3, #0
     1ec:	8151      	strh	r1, [r2, #10]
	config->address = 0;
	config->address_mask = 0;
     1ee:	81d1      	strh	r1, [r2, #14]
#ifdef FEATURE_I2C_10_BIT_ADDRESS
	config->ten_bit_address = false;
     1f0:	7413      	strb	r3, [r2, #16]
#endif
	config->enable_general_call_address = false;
     1f2:	7453      	strb	r3, [r2, #17]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->transfer_speed = I2C_SLAVE_SPEED_STANDARD_AND_FAST;
     1f4:	6151      	str	r1, [r2, #20]
#endif
#if I2C_SLAVE_CALLBACK_MODE == true
	config->enable_nack_on_address = false;
     1f6:	7613      	strb	r3, [r2, #24]
#endif
	config->generator_source = GCLK_GENERATOR_0;
     1f8:	7653      	strb	r3, [r2, #25]
	config->run_in_standby = false;
     1fa:	7693      	strb	r3, [r2, #26]
	config->pinmux_pad0 = PINMUX_DEFAULT;
     1fc:	61d1      	str	r1, [r2, #28]
	config->pinmux_pad1 = PINMUX_DEFAULT;
     1fe:	6211      	str	r1, [r2, #32]
	config->scl_low_timeout  = false;
     200:	3124      	adds	r1, #36	; 0x24
     202:	5453      	strb	r3, [r2, r1]
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
     204:	3101      	adds	r1, #1
     206:	5453      	strb	r3, [r2, r1]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
     208:	3101      	adds	r1, #1
     20a:	5453      	strb	r3, [r2, r1]
	config_i2c_slave.address      = SLAVE_ADDRESS;
     20c:	2312      	movs	r3, #18
     20e:	8193      	strh	r3, [r2, #12]
	volatile status_code code = i2c_slave_init(&i2c_slave_instance, SERCOM0, &config_i2c_slave);
     210:	4c0d      	ldr	r4, [pc, #52]	; (248 <_Z19configure_i2c_slavev+0x74>)
     212:	0025      	movs	r5, r4
     214:	3528      	adds	r5, #40	; 0x28
     216:	490d      	ldr	r1, [pc, #52]	; (24c <_Z19configure_i2c_slavev+0x78>)
     218:	0028      	movs	r0, r5
     21a:	4b0d      	ldr	r3, [pc, #52]	; (250 <_Z19configure_i2c_slavev+0x7c>)
     21c:	4798      	blx	r3
     21e:	466b      	mov	r3, sp
     220:	71d8      	strb	r0, [r3, #7]
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cs *const i2c_hw = &(module->hw->I2CS);
     222:	6aa4      	ldr	r4, [r4, #40]	; 0x28

#if I2C_SLAVE_CALLBACK_MODE == true
	/* Enable global interrupt for module */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
     224:	0020      	movs	r0, r4
     226:	4b0b      	ldr	r3, [pc, #44]	; (254 <_Z19configure_i2c_slavev+0x80>)
     228:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
     22a:	231f      	movs	r3, #31
     22c:	4018      	ands	r0, r3
     22e:	3b1e      	subs	r3, #30
     230:	4083      	lsls	r3, r0
     232:	4a09      	ldr	r2, [pc, #36]	; (258 <_Z19configure_i2c_slavev+0x84>)
     234:	6013      	str	r3, [r2, #0]
#endif

	/* Wait for module to sync */
	_i2c_slave_wait_for_sync(module);
     236:	0028      	movs	r0, r5
     238:	4b08      	ldr	r3, [pc, #32]	; (25c <_Z19configure_i2c_slavev+0x88>)
     23a:	4798      	blx	r3

	/* Enable module */
	i2c_hw->CTRLA.reg |= SERCOM_I2CS_CTRLA_ENABLE;
     23c:	6823      	ldr	r3, [r4, #0]
     23e:	2202      	movs	r2, #2
     240:	4313      	orrs	r3, r2
     242:	6023      	str	r3, [r4, #0]
}
     244:	b00d      	add	sp, #52	; 0x34
     246:	bd30      	pop	{r4, r5, pc}
     248:	20000870 	.word	0x20000870
     24c:	42000800 	.word	0x42000800
     250:	000005e5 	.word	0x000005e5
     254:	00000e21 	.word	0x00000e21
     258:	e000e100 	.word	0xe000e100
     25c:	000000ed 	.word	0x000000ed

00000260 <_Z29configure_i2c_slave_callbacksv>:
{
     260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	I2C_SLAVE_CALLBACK_READ_REQUEST);
     262:	4c0e      	ldr	r4, [pc, #56]	; (29c <_Z29configure_i2c_slave_callbacksv+0x3c>)
     264:	2202      	movs	r2, #2
     266:	490e      	ldr	r1, [pc, #56]	; (2a0 <_Z29configure_i2c_slave_callbacksv+0x40>)
     268:	480e      	ldr	r0, [pc, #56]	; (2a4 <_Z29configure_i2c_slave_callbacksv+0x44>)
     26a:	4d0f      	ldr	r5, [pc, #60]	; (2a8 <_Z29configure_i2c_slave_callbacksv+0x48>)
     26c:	47a8      	blx	r5
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	/* Mark callback as enabled */
	module->enabled_callback |= (1 << callback_type);
     26e:	0026      	movs	r6, r4
     270:	364d      	adds	r6, #77	; 0x4d
     272:	7833      	ldrb	r3, [r6, #0]
     274:	2204      	movs	r2, #4
     276:	4313      	orrs	r3, r2
     278:	b2db      	uxtb	r3, r3
     27a:	7033      	strb	r3, [r6, #0]

	/* Enable address callback */
	SercomI2cs *const i2c_hw = &(module->hw->I2CS);
	if (callback_type == I2C_SLAVE_CALLBACK_READ_REQUEST ||
			callback_type == I2C_SLAVE_CALLBACK_WRITE_REQUEST) {
		i2c_hw->INTENSET.reg = SERCOM_I2CS_INTFLAG_AMATCH;
     27c:	2702      	movs	r7, #2
     27e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     280:	759f      	strb	r7, [r3, #22]
	I2C_SLAVE_CALLBACK_WRITE_REQUEST);
     282:	2203      	movs	r2, #3
     284:	4909      	ldr	r1, [pc, #36]	; (2ac <_Z29configure_i2c_slave_callbacksv+0x4c>)
     286:	4807      	ldr	r0, [pc, #28]	; (2a4 <_Z29configure_i2c_slave_callbacksv+0x44>)
     288:	47a8      	blx	r5
	module->enabled_callback |= (1 << callback_type);
     28a:	7833      	ldrb	r3, [r6, #0]
     28c:	2208      	movs	r2, #8
     28e:	4313      	orrs	r3, r2
     290:	b2db      	uxtb	r3, r3
     292:	7033      	strb	r3, [r6, #0]
	SercomI2cs *const i2c_hw = &(module->hw->I2CS);
     294:	6aa3      	ldr	r3, [r4, #40]	; 0x28
		i2c_hw->INTENSET.reg = SERCOM_I2CS_INTFLAG_AMATCH;
     296:	759f      	strb	r7, [r3, #22]
}
     298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     29a:	46c0      	nop			; (mov r8, r8)
     29c:	20000870 	.word	0x20000870
     2a0:	000000f9 	.word	0x000000f9
     2a4:	20000898 	.word	0x20000898
     2a8:	00000775 	.word	0x00000775
     2ac:	00000179 	.word	0x00000179

000002b0 <_Z19configure_gpio_pinsv>:
{
     2b0:	b570      	push	{r4, r5, r6, lr}
     2b2:	b082      	sub	sp, #8
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
     2b4:	ac01      	add	r4, sp, #4
     2b6:	2300      	movs	r3, #0
     2b8:	7023      	strb	r3, [r4, #0]
	config->input_pull = PORT_PIN_PULL_UP;
     2ba:	2601      	movs	r6, #1
     2bc:	7066      	strb	r6, [r4, #1]
	config->powersave  = false;
     2be:	70a3      	strb	r3, [r4, #2]
	port_pin_set_config(BUTTON_PIN_1, &config_port_pin);
     2c0:	0021      	movs	r1, r4
     2c2:	2010      	movs	r0, #16
     2c4:	4d08      	ldr	r5, [pc, #32]	; (2e8 <_Z19configure_gpio_pinsv+0x38>)
     2c6:	47a8      	blx	r5
	port_pin_set_config(BUTTON_PIN_2, &config_port_pin);
     2c8:	0021      	movs	r1, r4
     2ca:	2011      	movs	r0, #17
     2cc:	47a8      	blx	r5
	port_pin_set_config(BUTTON_PIN_3, &config_port_pin);
     2ce:	0021      	movs	r1, r4
     2d0:	2016      	movs	r0, #22
     2d2:	47a8      	blx	r5
	port_pin_set_config(BUTTON_PIN_4, &config_port_pin);
     2d4:	0021      	movs	r1, r4
     2d6:	2017      	movs	r0, #23
     2d8:	47a8      	blx	r5
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     2da:	7026      	strb	r6, [r4, #0]
	port_pin_set_config(LED_PIN, &config_port_pin);
     2dc:	0021      	movs	r1, r4
     2de:	201b      	movs	r0, #27
     2e0:	47a8      	blx	r5
}
     2e2:	b002      	add	sp, #8
     2e4:	bd70      	pop	{r4, r5, r6, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	00000f1d 	.word	0x00000f1d

000002ec <_Z20configure_i2c_pinmuxv>:
{
     2ec:	b530      	push	{r4, r5, lr}
     2ee:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     2f0:	ac01      	add	r4, sp, #4
     2f2:	2300      	movs	r3, #0
     2f4:	7063      	strb	r3, [r4, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     2f6:	2201      	movs	r2, #1
     2f8:	70a2      	strb	r2, [r4, #2]
	config->powersave    = false;
     2fa:	70e3      	strb	r3, [r4, #3]
	config_pinmux.mux_position = 1 << 1;
     2fc:	3302      	adds	r3, #2
     2fe:	7023      	strb	r3, [r4, #0]
	system_pinmux_pin_set_config(14, &config_pinmux);
     300:	0021      	movs	r1, r4
     302:	200e      	movs	r0, #14
     304:	4d03      	ldr	r5, [pc, #12]	; (314 <_Z20configure_i2c_pinmuxv+0x28>)
     306:	47a8      	blx	r5
	system_pinmux_pin_set_config(15, &config_pinmux);
     308:	0021      	movs	r1, r4
     30a:	200f      	movs	r0, #15
     30c:	47a8      	blx	r5
}
     30e:	b003      	add	sp, #12
     310:	bd30      	pop	{r4, r5, pc}
     312:	46c0      	nop			; (mov r8, r8)
     314:	000016a9 	.word	0x000016a9

00000318 <main>:
{
     318:	b510      	push	{r4, lr}
     31a:	b090      	sub	sp, #64	; 0x40
	SystemInit();
     31c:	4b9a      	ldr	r3, [pc, #616]	; (588 <STACK_SIZE+0x188>)
     31e:	4798      	blx	r3
	system_clock_init();
     320:	4b9a      	ldr	r3, [pc, #616]	; (58c <STACK_SIZE+0x18c>)
     322:	4798      	blx	r3
	delay_init();
     324:	4b9a      	ldr	r3, [pc, #616]	; (590 <STACK_SIZE+0x190>)
     326:	4798      	blx	r3
	configure_gpio_pins();
     328:	4b9a      	ldr	r3, [pc, #616]	; (594 <STACK_SIZE+0x194>)
     32a:	4798      	blx	r3
	 configure_i2c_pinmux();
     32c:	4b9a      	ldr	r3, [pc, #616]	; (598 <STACK_SIZE+0x198>)
     32e:	4798      	blx	r3
	configure_i2c_slave();
     330:	4b9a      	ldr	r3, [pc, #616]	; (59c <STACK_SIZE+0x19c>)
     332:	4798      	blx	r3
	configure_i2c_slave_callbacks();
     334:	4b9a      	ldr	r3, [pc, #616]	; (5a0 <STACK_SIZE+0x1a0>)
     336:	4798      	blx	r3
	memset(pixels, 0, sizeof(pixels));
     338:	220c      	movs	r2, #12
     33a:	2100      	movs	r1, #0
     33c:	a805      	add	r0, sp, #20
     33e:	4b99      	ldr	r3, [pc, #612]	; (5a4 <STACK_SIZE+0x1a4>)
     340:	4798      	blx	r3
	ws2812b ledStrip(&pixels[0], 4, NEO_PIN);
     342:	230a      	movs	r3, #10
     344:	2204      	movs	r2, #4
     346:	a905      	add	r1, sp, #20
     348:	a801      	add	r0, sp, #4
     34a:	4c97      	ldr	r4, [pc, #604]	; (5a8 <STACK_SIZE+0x1a8>)
     34c:	47a0      	blx	r4
	ledStrip.write();
     34e:	a801      	add	r0, sp, #4
     350:	4b96      	ldr	r3, [pc, #600]	; (5ac <STACK_SIZE+0x1ac>)
     352:	4798      	blx	r3
     354:	e08a      	b.n	46c <STACK_SIZE+0x6c>
			buffer.write(0x01 | BUTTON_PRESSED);
     356:	2181      	movs	r1, #129	; 0x81
     358:	0010      	movs	r0, r2
     35a:	3008      	adds	r0, #8
     35c:	4b94      	ldr	r3, [pc, #592]	; (5b0 <STACK_SIZE+0x1b0>)
     35e:	4798      	blx	r3
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
     360:	2280      	movs	r2, #128	; 0x80
     362:	0512      	lsls	r2, r2, #20
     364:	4b93      	ldr	r3, [pc, #588]	; (5b4 <STACK_SIZE+0x1b4>)
     366:	619a      	str	r2, [r3, #24]
			ledStrip.setLEDColor(0, colorRGB(0xFF8000));
     368:	4993      	ldr	r1, [pc, #588]	; (5b8 <STACK_SIZE+0x1b8>)
     36a:	a808      	add	r0, sp, #32
     36c:	4b93      	ldr	r3, [pc, #588]	; (5bc <STACK_SIZE+0x1bc>)
     36e:	4798      	blx	r3
     370:	9a08      	ldr	r2, [sp, #32]
     372:	2100      	movs	r1, #0
     374:	a801      	add	r0, sp, #4
     376:	4b92      	ldr	r3, [pc, #584]	; (5c0 <STACK_SIZE+0x1c0>)
     378:	4798      	blx	r3
     37a:	e0a6      	b.n	4ca <STACK_SIZE+0xca>
			buffer.write(0x02 | BUTTON_PRESSED);
     37c:	2182      	movs	r1, #130	; 0x82
     37e:	4891      	ldr	r0, [pc, #580]	; (5c4 <STACK_SIZE+0x1c4>)
     380:	3008      	adds	r0, #8
     382:	4b8b      	ldr	r3, [pc, #556]	; (5b0 <STACK_SIZE+0x1b0>)
     384:	4798      	blx	r3
     386:	2280      	movs	r2, #128	; 0x80
     388:	0512      	lsls	r2, r2, #20
     38a:	4b8a      	ldr	r3, [pc, #552]	; (5b4 <STACK_SIZE+0x1b4>)
     38c:	619a      	str	r2, [r3, #24]
			ledStrip.setLEDColor(1, colorRGB(0xFF8000));
     38e:	498a      	ldr	r1, [pc, #552]	; (5b8 <STACK_SIZE+0x1b8>)
     390:	a809      	add	r0, sp, #36	; 0x24
     392:	4b8a      	ldr	r3, [pc, #552]	; (5bc <STACK_SIZE+0x1bc>)
     394:	4798      	blx	r3
     396:	9a09      	ldr	r2, [sp, #36]	; 0x24
     398:	2101      	movs	r1, #1
     39a:	a801      	add	r0, sp, #4
     39c:	4b88      	ldr	r3, [pc, #544]	; (5c0 <STACK_SIZE+0x1c0>)
     39e:	4798      	blx	r3
     3a0:	e09e      	b.n	4e0 <STACK_SIZE+0xe0>
			buffer.write(0x03 | BUTTON_PRESSED);
     3a2:	2183      	movs	r1, #131	; 0x83
     3a4:	4887      	ldr	r0, [pc, #540]	; (5c4 <STACK_SIZE+0x1c4>)
     3a6:	3008      	adds	r0, #8
     3a8:	4b81      	ldr	r3, [pc, #516]	; (5b0 <STACK_SIZE+0x1b0>)
     3aa:	4798      	blx	r3
     3ac:	2280      	movs	r2, #128	; 0x80
     3ae:	0512      	lsls	r2, r2, #20
     3b0:	4b80      	ldr	r3, [pc, #512]	; (5b4 <STACK_SIZE+0x1b4>)
     3b2:	619a      	str	r2, [r3, #24]
			ledStrip.setLEDColor(2, colorRGB(0xFF8000));
     3b4:	4980      	ldr	r1, [pc, #512]	; (5b8 <STACK_SIZE+0x1b8>)
     3b6:	a80a      	add	r0, sp, #40	; 0x28
     3b8:	4b80      	ldr	r3, [pc, #512]	; (5bc <STACK_SIZE+0x1bc>)
     3ba:	4798      	blx	r3
     3bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
     3be:	2102      	movs	r1, #2
     3c0:	a801      	add	r0, sp, #4
     3c2:	4b7f      	ldr	r3, [pc, #508]	; (5c0 <STACK_SIZE+0x1c0>)
     3c4:	4798      	blx	r3
     3c6:	e096      	b.n	4f6 <STACK_SIZE+0xf6>
			buffer.write(0x04 | BUTTON_PRESSED);
     3c8:	2184      	movs	r1, #132	; 0x84
     3ca:	487e      	ldr	r0, [pc, #504]	; (5c4 <STACK_SIZE+0x1c4>)
     3cc:	3008      	adds	r0, #8
     3ce:	4b78      	ldr	r3, [pc, #480]	; (5b0 <STACK_SIZE+0x1b0>)
     3d0:	4798      	blx	r3
     3d2:	2280      	movs	r2, #128	; 0x80
     3d4:	0512      	lsls	r2, r2, #20
     3d6:	4b77      	ldr	r3, [pc, #476]	; (5b4 <STACK_SIZE+0x1b4>)
     3d8:	619a      	str	r2, [r3, #24]
			ledStrip.setLEDColor(3, colorRGB(0xFF8000));
     3da:	4977      	ldr	r1, [pc, #476]	; (5b8 <STACK_SIZE+0x1b8>)
     3dc:	a80b      	add	r0, sp, #44	; 0x2c
     3de:	4b77      	ldr	r3, [pc, #476]	; (5bc <STACK_SIZE+0x1bc>)
     3e0:	4798      	blx	r3
     3e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
     3e4:	2103      	movs	r1, #3
     3e6:	a801      	add	r0, sp, #4
     3e8:	4b75      	ldr	r3, [pc, #468]	; (5c0 <STACK_SIZE+0x1c0>)
     3ea:	4798      	blx	r3
     3ec:	e08e      	b.n	50c <STACK_SIZE+0x10c>
			buffer.write(0x01 | BUTTON_RELEASED);
     3ee:	2141      	movs	r1, #65	; 0x41
     3f0:	0010      	movs	r0, r2
     3f2:	3008      	adds	r0, #8
     3f4:	4b6e      	ldr	r3, [pc, #440]	; (5b0 <STACK_SIZE+0x1b0>)
     3f6:	4798      	blx	r3
	} else {
		port_base->OUTCLR.reg = pin_mask;
     3f8:	2280      	movs	r2, #128	; 0x80
     3fa:	0512      	lsls	r2, r2, #20
     3fc:	4b6d      	ldr	r3, [pc, #436]	; (5b4 <STACK_SIZE+0x1b4>)
     3fe:	615a      	str	r2, [r3, #20]
			ledStrip.setLEDColor(0, colorRGB(0x000000));
     400:	2100      	movs	r1, #0
     402:	a80c      	add	r0, sp, #48	; 0x30
     404:	4b6d      	ldr	r3, [pc, #436]	; (5bc <STACK_SIZE+0x1bc>)
     406:	4798      	blx	r3
     408:	9a0c      	ldr	r2, [sp, #48]	; 0x30
     40a:	2100      	movs	r1, #0
     40c:	a801      	add	r0, sp, #4
     40e:	4b6c      	ldr	r3, [pc, #432]	; (5c0 <STACK_SIZE+0x1c0>)
     410:	4798      	blx	r3
     412:	e085      	b.n	520 <STACK_SIZE+0x120>
			buffer.write(0x02 | BUTTON_RELEASED);
     414:	2142      	movs	r1, #66	; 0x42
     416:	486b      	ldr	r0, [pc, #428]	; (5c4 <STACK_SIZE+0x1c4>)
     418:	3008      	adds	r0, #8
     41a:	4b65      	ldr	r3, [pc, #404]	; (5b0 <STACK_SIZE+0x1b0>)
     41c:	4798      	blx	r3
     41e:	2280      	movs	r2, #128	; 0x80
     420:	0512      	lsls	r2, r2, #20
     422:	4b64      	ldr	r3, [pc, #400]	; (5b4 <STACK_SIZE+0x1b4>)
     424:	615a      	str	r2, [r3, #20]
			ledStrip.setLEDColor(1, colorRGB(0x000000));
     426:	2100      	movs	r1, #0
     428:	a80d      	add	r0, sp, #52	; 0x34
     42a:	4b64      	ldr	r3, [pc, #400]	; (5bc <STACK_SIZE+0x1bc>)
     42c:	4798      	blx	r3
     42e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
     430:	2101      	movs	r1, #1
     432:	a801      	add	r0, sp, #4
     434:	4b62      	ldr	r3, [pc, #392]	; (5c0 <STACK_SIZE+0x1c0>)
     436:	4798      	blx	r3
     438:	e07d      	b.n	536 <STACK_SIZE+0x136>
			buffer.write(0x03 | BUTTON_RELEASED);
     43a:	2143      	movs	r1, #67	; 0x43
     43c:	4861      	ldr	r0, [pc, #388]	; (5c4 <STACK_SIZE+0x1c4>)
     43e:	3008      	adds	r0, #8
     440:	4b5b      	ldr	r3, [pc, #364]	; (5b0 <STACK_SIZE+0x1b0>)
     442:	4798      	blx	r3
     444:	2280      	movs	r2, #128	; 0x80
     446:	0512      	lsls	r2, r2, #20
     448:	4b5a      	ldr	r3, [pc, #360]	; (5b4 <STACK_SIZE+0x1b4>)
     44a:	615a      	str	r2, [r3, #20]
			ledStrip.setLEDColor(2, colorRGB(0x000000));
     44c:	2100      	movs	r1, #0
     44e:	a80e      	add	r0, sp, #56	; 0x38
     450:	4b5a      	ldr	r3, [pc, #360]	; (5bc <STACK_SIZE+0x1bc>)
     452:	4798      	blx	r3
     454:	9a0e      	ldr	r2, [sp, #56]	; 0x38
     456:	2102      	movs	r1, #2
     458:	a801      	add	r0, sp, #4
     45a:	4b59      	ldr	r3, [pc, #356]	; (5c0 <STACK_SIZE+0x1c0>)
     45c:	4798      	blx	r3
     45e:	e075      	b.n	54c <STACK_SIZE+0x14c>
		delay_cycles_ms(10);
     460:	200a      	movs	r0, #10
     462:	4b59      	ldr	r3, [pc, #356]	; (5c8 <STACK_SIZE+0x1c8>)
     464:	4798      	blx	r3
		ledStrip.write();
     466:	a801      	add	r0, sp, #4
     468:	4b50      	ldr	r3, [pc, #320]	; (5ac <STACK_SIZE+0x1ac>)
     46a:	4798      	blx	r3
		volatile uint32_t clk_speed = system_gclk_gen_get_hz(0);
     46c:	2000      	movs	r0, #0
     46e:	4b57      	ldr	r3, [pc, #348]	; (5cc <STACK_SIZE+0x1cc>)
     470:	4798      	blx	r3
     472:	9000      	str	r0, [sp, #0]
		last_button_level = current_button_level;
     474:	4953      	ldr	r1, [pc, #332]	; (5c4 <STACK_SIZE+0x1c4>)
     476:	6e0b      	ldr	r3, [r1, #96]	; 0x60
     478:	65cb      	str	r3, [r1, #92]	; 0x5c
	return (port_base->IN.reg & pin_mask);
     47a:	484e      	ldr	r0, [pc, #312]	; (5b4 <STACK_SIZE+0x1b4>)
     47c:	6a03      	ldr	r3, [r0, #32]
     47e:	2280      	movs	r2, #128	; 0x80
     480:	0252      	lsls	r2, r2, #9
     482:	4013      	ands	r3, r2
     484:	1e5a      	subs	r2, r3, #1
     486:	4193      	sbcs	r3, r2
     488:	b2db      	uxtb	r3, r3
		current_button_level.button_1 = port_pin_get_input_level(BUTTON_PIN_1);
     48a:	2260      	movs	r2, #96	; 0x60
     48c:	548b      	strb	r3, [r1, r2]
     48e:	6a02      	ldr	r2, [r0, #32]
     490:	2480      	movs	r4, #128	; 0x80
     492:	02a4      	lsls	r4, r4, #10
     494:	4022      	ands	r2, r4
     496:	1e54      	subs	r4, r2, #1
     498:	41a2      	sbcs	r2, r4
		current_button_level.button_2 = port_pin_get_input_level(BUTTON_PIN_2);
     49a:	3160      	adds	r1, #96	; 0x60
     49c:	704a      	strb	r2, [r1, #1]
     49e:	6a02      	ldr	r2, [r0, #32]
     4a0:	2480      	movs	r4, #128	; 0x80
     4a2:	03e4      	lsls	r4, r4, #15
     4a4:	4022      	ands	r2, r4
     4a6:	1e54      	subs	r4, r2, #1
     4a8:	41a2      	sbcs	r2, r4
		current_button_level.button_3 = port_pin_get_input_level(BUTTON_PIN_3);
     4aa:	708a      	strb	r2, [r1, #2]
     4ac:	6a02      	ldr	r2, [r0, #32]
     4ae:	2080      	movs	r0, #128	; 0x80
     4b0:	0400      	lsls	r0, r0, #16
     4b2:	4002      	ands	r2, r0
     4b4:	1e50      	subs	r0, r2, #1
     4b6:	4182      	sbcs	r2, r0
		current_button_level.button_4 = port_pin_get_input_level(BUTTON_PIN_4);
     4b8:	70ca      	strb	r2, [r1, #3]
		if(!current_button_level.button_1 && last_button_level.button_1){
     4ba:	2b00      	cmp	r3, #0
     4bc:	d105      	bne.n	4ca <STACK_SIZE+0xca>
     4be:	335c      	adds	r3, #92	; 0x5c
     4c0:	4a40      	ldr	r2, [pc, #256]	; (5c4 <STACK_SIZE+0x1c4>)
     4c2:	5cd3      	ldrb	r3, [r2, r3]
     4c4:	2b00      	cmp	r3, #0
     4c6:	d000      	beq.n	4ca <STACK_SIZE+0xca>
     4c8:	e745      	b.n	356 <main+0x3e>
		if(!current_button_level.button_2 && last_button_level.button_2){
     4ca:	4b3e      	ldr	r3, [pc, #248]	; (5c4 <STACK_SIZE+0x1c4>)
     4cc:	3360      	adds	r3, #96	; 0x60
     4ce:	785b      	ldrb	r3, [r3, #1]
     4d0:	2b00      	cmp	r3, #0
     4d2:	d105      	bne.n	4e0 <STACK_SIZE+0xe0>
     4d4:	4b3b      	ldr	r3, [pc, #236]	; (5c4 <STACK_SIZE+0x1c4>)
     4d6:	335c      	adds	r3, #92	; 0x5c
     4d8:	785b      	ldrb	r3, [r3, #1]
     4da:	2b00      	cmp	r3, #0
     4dc:	d000      	beq.n	4e0 <STACK_SIZE+0xe0>
     4de:	e74d      	b.n	37c <main+0x64>
		if(!current_button_level.button_3 && last_button_level.button_3){
     4e0:	4b38      	ldr	r3, [pc, #224]	; (5c4 <STACK_SIZE+0x1c4>)
     4e2:	3360      	adds	r3, #96	; 0x60
     4e4:	789b      	ldrb	r3, [r3, #2]
     4e6:	2b00      	cmp	r3, #0
     4e8:	d105      	bne.n	4f6 <STACK_SIZE+0xf6>
     4ea:	4b36      	ldr	r3, [pc, #216]	; (5c4 <STACK_SIZE+0x1c4>)
     4ec:	335c      	adds	r3, #92	; 0x5c
     4ee:	789b      	ldrb	r3, [r3, #2]
     4f0:	2b00      	cmp	r3, #0
     4f2:	d000      	beq.n	4f6 <STACK_SIZE+0xf6>
     4f4:	e755      	b.n	3a2 <main+0x8a>
		if(!current_button_level.button_4 && last_button_level.button_4){
     4f6:	4b33      	ldr	r3, [pc, #204]	; (5c4 <STACK_SIZE+0x1c4>)
     4f8:	3360      	adds	r3, #96	; 0x60
     4fa:	78db      	ldrb	r3, [r3, #3]
     4fc:	2b00      	cmp	r3, #0
     4fe:	d105      	bne.n	50c <STACK_SIZE+0x10c>
     500:	4b30      	ldr	r3, [pc, #192]	; (5c4 <STACK_SIZE+0x1c4>)
     502:	335c      	adds	r3, #92	; 0x5c
     504:	78db      	ldrb	r3, [r3, #3]
     506:	2b00      	cmp	r3, #0
     508:	d000      	beq.n	50c <STACK_SIZE+0x10c>
     50a:	e75d      	b.n	3c8 <main+0xb0>
		if(current_button_level.button_1 && !last_button_level.button_1){
     50c:	2360      	movs	r3, #96	; 0x60
     50e:	4a2d      	ldr	r2, [pc, #180]	; (5c4 <STACK_SIZE+0x1c4>)
     510:	5cd3      	ldrb	r3, [r2, r3]
     512:	2b00      	cmp	r3, #0
     514:	d004      	beq.n	520 <STACK_SIZE+0x120>
     516:	235c      	movs	r3, #92	; 0x5c
     518:	5cd3      	ldrb	r3, [r2, r3]
     51a:	2b00      	cmp	r3, #0
     51c:	d100      	bne.n	520 <STACK_SIZE+0x120>
     51e:	e766      	b.n	3ee <main+0xd6>
		if(current_button_level.button_2 && !last_button_level.button_2){
     520:	4b28      	ldr	r3, [pc, #160]	; (5c4 <STACK_SIZE+0x1c4>)
     522:	3360      	adds	r3, #96	; 0x60
     524:	785b      	ldrb	r3, [r3, #1]
     526:	2b00      	cmp	r3, #0
     528:	d005      	beq.n	536 <STACK_SIZE+0x136>
     52a:	4b26      	ldr	r3, [pc, #152]	; (5c4 <STACK_SIZE+0x1c4>)
     52c:	335c      	adds	r3, #92	; 0x5c
     52e:	785b      	ldrb	r3, [r3, #1]
     530:	2b00      	cmp	r3, #0
     532:	d100      	bne.n	536 <STACK_SIZE+0x136>
     534:	e76e      	b.n	414 <STACK_SIZE+0x14>
		if(current_button_level.button_3 && !last_button_level.button_3){
     536:	4b23      	ldr	r3, [pc, #140]	; (5c4 <STACK_SIZE+0x1c4>)
     538:	3360      	adds	r3, #96	; 0x60
     53a:	789b      	ldrb	r3, [r3, #2]
     53c:	2b00      	cmp	r3, #0
     53e:	d005      	beq.n	54c <STACK_SIZE+0x14c>
     540:	4b20      	ldr	r3, [pc, #128]	; (5c4 <STACK_SIZE+0x1c4>)
     542:	335c      	adds	r3, #92	; 0x5c
     544:	789b      	ldrb	r3, [r3, #2]
     546:	2b00      	cmp	r3, #0
     548:	d100      	bne.n	54c <STACK_SIZE+0x14c>
     54a:	e776      	b.n	43a <STACK_SIZE+0x3a>
		if(current_button_level.button_4 && !last_button_level.button_4){
     54c:	4b1d      	ldr	r3, [pc, #116]	; (5c4 <STACK_SIZE+0x1c4>)
     54e:	3360      	adds	r3, #96	; 0x60
     550:	78db      	ldrb	r3, [r3, #3]
     552:	2b00      	cmp	r3, #0
     554:	d084      	beq.n	460 <STACK_SIZE+0x60>
     556:	4b1b      	ldr	r3, [pc, #108]	; (5c4 <STACK_SIZE+0x1c4>)
     558:	335c      	adds	r3, #92	; 0x5c
     55a:	78db      	ldrb	r3, [r3, #3]
     55c:	2b00      	cmp	r3, #0
     55e:	d000      	beq.n	562 <STACK_SIZE+0x162>
     560:	e77e      	b.n	460 <STACK_SIZE+0x60>
			buffer.write(0x04 | BUTTON_RELEASED);
     562:	2144      	movs	r1, #68	; 0x44
     564:	4817      	ldr	r0, [pc, #92]	; (5c4 <STACK_SIZE+0x1c4>)
     566:	3008      	adds	r0, #8
     568:	4b11      	ldr	r3, [pc, #68]	; (5b0 <STACK_SIZE+0x1b0>)
     56a:	4798      	blx	r3
		port_base->OUTCLR.reg = pin_mask;
     56c:	2280      	movs	r2, #128	; 0x80
     56e:	0512      	lsls	r2, r2, #20
     570:	4b10      	ldr	r3, [pc, #64]	; (5b4 <STACK_SIZE+0x1b4>)
     572:	615a      	str	r2, [r3, #20]
			ledStrip.setLEDColor(3, colorRGB(0x000000));
     574:	2100      	movs	r1, #0
     576:	a80f      	add	r0, sp, #60	; 0x3c
     578:	4b10      	ldr	r3, [pc, #64]	; (5bc <STACK_SIZE+0x1bc>)
     57a:	4798      	blx	r3
     57c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
     57e:	2103      	movs	r1, #3
     580:	a801      	add	r0, sp, #4
     582:	4b0f      	ldr	r3, [pc, #60]	; (5c0 <STACK_SIZE+0x1c0>)
     584:	4798      	blx	r3
     586:	e76b      	b.n	460 <STACK_SIZE+0x60>
     588:	000017ad 	.word	0x000017ad
     58c:	00001225 	.word	0x00001225
     590:	00000eb1 	.word	0x00000eb1
     594:	000002b1 	.word	0x000002b1
     598:	000002ed 	.word	0x000002ed
     59c:	000001d5 	.word	0x000001d5
     5a0:	00000261 	.word	0x00000261
     5a4:	000020b1 	.word	0x000020b1
     5a8:	00000b69 	.word	0x00000b69
     5ac:	00000c49 	.word	0x00000c49
     5b0:	00000ab5 	.word	0x00000ab5
     5b4:	41004400 	.word	0x41004400
     5b8:	00ff8000 	.word	0x00ff8000
     5bc:	00000b11 	.word	0x00000b11
     5c0:	00000b1d 	.word	0x00000b1d
     5c4:	20000870 	.word	0x20000870
     5c8:	00000ef1 	.word	0x00000ef1
     5cc:	00001499 	.word	0x00001499

000005d0 <_GLOBAL__sub_I_last_button_level>:
}
     5d0:	b510      	push	{r4, lr}
     5d2:	4902      	ldr	r1, [pc, #8]	; (5dc <_GLOBAL__sub_I_last_button_level+0xc>)
     5d4:	2001      	movs	r0, #1
     5d6:	4b02      	ldr	r3, [pc, #8]	; (5e0 <_GLOBAL__sub_I_last_button_level+0x10>)
     5d8:	4798      	blx	r3
     5da:	bd10      	pop	{r4, pc}
     5dc:	0000ffff 	.word	0x0000ffff
     5e0:	00000195 	.word	0x00000195

000005e4 <i2c_slave_init>:
     5e4:	b5f0      	push	{r4, r5, r6, r7, lr}
     5e6:	46ce      	mov	lr, r9
     5e8:	4647      	mov	r7, r8
     5ea:	b580      	push	{r7, lr}
     5ec:	b083      	sub	sp, #12
     5ee:	0005      	movs	r5, r0
     5f0:	000c      	movs	r4, r1
     5f2:	0016      	movs	r6, r2
     5f4:	6029      	str	r1, [r5, #0]
     5f6:	680b      	ldr	r3, [r1, #0]
     5f8:	201c      	movs	r0, #28
     5fa:	079b      	lsls	r3, r3, #30
     5fc:	d504      	bpl.n	608 <i2c_slave_init+0x24>
     5fe:	b003      	add	sp, #12
     600:	bc0c      	pop	{r2, r3}
     602:	4690      	mov	r8, r2
     604:	4699      	mov	r9, r3
     606:	bdf0      	pop	{r4, r5, r6, r7, pc}
     608:	680b      	ldr	r3, [r1, #0]
     60a:	3817      	subs	r0, #23
     60c:	07db      	lsls	r3, r3, #31
     60e:	d4f6      	bmi.n	5fe <i2c_slave_init+0x1a>
     610:	0008      	movs	r0, r1
     612:	4b4d      	ldr	r3, [pc, #308]	; (748 <i2c_slave_init+0x164>)
     614:	4699      	mov	r9, r3
     616:	4798      	blx	r3
     618:	4a4c      	ldr	r2, [pc, #304]	; (74c <i2c_slave_init+0x168>)
     61a:	6a11      	ldr	r1, [r2, #32]
     61c:	1c83      	adds	r3, r0, #2
     61e:	2701      	movs	r7, #1
     620:	46b8      	mov	r8, r7
     622:	409f      	lsls	r7, r3
     624:	003b      	movs	r3, r7
     626:	430b      	orrs	r3, r1
     628:	6213      	str	r3, [r2, #32]
     62a:	a901      	add	r1, sp, #4
     62c:	7e73      	ldrb	r3, [r6, #25]
     62e:	700b      	strb	r3, [r1, #0]
     630:	300e      	adds	r0, #14
     632:	b2c3      	uxtb	r3, r0
     634:	001f      	movs	r7, r3
     636:	0018      	movs	r0, r3
     638:	4b45      	ldr	r3, [pc, #276]	; (750 <i2c_slave_init+0x16c>)
     63a:	4798      	blx	r3
     63c:	0038      	movs	r0, r7
     63e:	4b45      	ldr	r3, [pc, #276]	; (754 <i2c_slave_init+0x170>)
     640:	4798      	blx	r3
     642:	7e70      	ldrb	r0, [r6, #25]
     644:	2100      	movs	r1, #0
     646:	4b44      	ldr	r3, [pc, #272]	; (758 <i2c_slave_init+0x174>)
     648:	4798      	blx	r3
     64a:	6828      	ldr	r0, [r5, #0]
     64c:	47c8      	blx	r9
     64e:	0007      	movs	r7, r0
     650:	4942      	ldr	r1, [pc, #264]	; (75c <i2c_slave_init+0x178>)
     652:	4b43      	ldr	r3, [pc, #268]	; (760 <i2c_slave_init+0x17c>)
     654:	4798      	blx	r3
     656:	00bf      	lsls	r7, r7, #2
     658:	4b42      	ldr	r3, [pc, #264]	; (764 <i2c_slave_init+0x180>)
     65a:	50fd      	str	r5, [r7, r3]
     65c:	2300      	movs	r3, #0
     65e:	2224      	movs	r2, #36	; 0x24
     660:	54ab      	strb	r3, [r5, r2]
     662:	3201      	adds	r2, #1
     664:	54ab      	strb	r3, [r5, r2]
     666:	84eb      	strh	r3, [r5, #38]	; 0x26
     668:	7e33      	ldrb	r3, [r6, #24]
     66a:	726b      	strb	r3, [r5, #9]
     66c:	2310      	movs	r3, #16
     66e:	6023      	str	r3, [r4, #0]
     670:	682c      	ldr	r4, [r5, #0]
     672:	8933      	ldrh	r3, [r6, #8]
     674:	80eb      	strh	r3, [r5, #6]
     676:	7c33      	ldrb	r3, [r6, #16]
     678:	722b      	strb	r3, [r5, #8]
     67a:	2380      	movs	r3, #128	; 0x80
     67c:	466a      	mov	r2, sp
     67e:	7013      	strb	r3, [r2, #0]
     680:	2300      	movs	r3, #0
     682:	7053      	strb	r3, [r2, #1]
     684:	466b      	mov	r3, sp
     686:	4642      	mov	r2, r8
     688:	709a      	strb	r2, [r3, #2]
     68a:	2300      	movs	r3, #0
     68c:	466a      	mov	r2, sp
     68e:	70d3      	strb	r3, [r2, #3]
     690:	69f0      	ldr	r0, [r6, #28]
     692:	6a35      	ldr	r5, [r6, #32]
     694:	2800      	cmp	r0, #0
     696:	d04b      	beq.n	730 <i2c_slave_init+0x14c>
     698:	466b      	mov	r3, sp
     69a:	7018      	strb	r0, [r3, #0]
     69c:	2302      	movs	r3, #2
     69e:	466a      	mov	r2, sp
     6a0:	7053      	strb	r3, [r2, #1]
     6a2:	0c00      	lsrs	r0, r0, #16
     6a4:	b2c0      	uxtb	r0, r0
     6a6:	4669      	mov	r1, sp
     6a8:	4b2f      	ldr	r3, [pc, #188]	; (768 <i2c_slave_init+0x184>)
     6aa:	4798      	blx	r3
     6ac:	2d00      	cmp	r5, #0
     6ae:	d044      	beq.n	73a <i2c_slave_init+0x156>
     6b0:	466b      	mov	r3, sp
     6b2:	701d      	strb	r5, [r3, #0]
     6b4:	2302      	movs	r3, #2
     6b6:	466a      	mov	r2, sp
     6b8:	7053      	strb	r3, [r2, #1]
     6ba:	0c2d      	lsrs	r5, r5, #16
     6bc:	b2e8      	uxtb	r0, r5
     6be:	4669      	mov	r1, sp
     6c0:	4b29      	ldr	r3, [pc, #164]	; (768 <i2c_slave_init+0x184>)
     6c2:	4798      	blx	r3
     6c4:	7eb3      	ldrb	r3, [r6, #26]
     6c6:	2280      	movs	r2, #128	; 0x80
     6c8:	2b00      	cmp	r3, #0
     6ca:	d104      	bne.n	6d6 <i2c_slave_init+0xf2>
     6cc:	4b27      	ldr	r3, [pc, #156]	; (76c <i2c_slave_init+0x188>)
     6ce:	789b      	ldrb	r3, [r3, #2]
     6d0:	079b      	lsls	r3, r3, #30
     6d2:	0fdb      	lsrs	r3, r3, #31
     6d4:	01da      	lsls	r2, r3, #7
     6d6:	2325      	movs	r3, #37	; 0x25
     6d8:	5cf3      	ldrb	r3, [r6, r3]
     6da:	2b00      	cmp	r3, #0
     6dc:	d104      	bne.n	6e8 <i2c_slave_init+0x104>
     6de:	2380      	movs	r3, #128	; 0x80
     6e0:	049b      	lsls	r3, r3, #18
     6e2:	6971      	ldr	r1, [r6, #20]
     6e4:	4299      	cmp	r1, r3
     6e6:	d102      	bne.n	6ee <i2c_slave_init+0x10a>
     6e8:	2380      	movs	r3, #128	; 0x80
     6ea:	051b      	lsls	r3, r3, #20
     6ec:	431a      	orrs	r2, r3
     6ee:	6820      	ldr	r0, [r4, #0]
     6f0:	6873      	ldr	r3, [r6, #4]
     6f2:	6971      	ldr	r1, [r6, #20]
     6f4:	430b      	orrs	r3, r1
     6f6:	2124      	movs	r1, #36	; 0x24
     6f8:	5c71      	ldrb	r1, [r6, r1]
     6fa:	0789      	lsls	r1, r1, #30
     6fc:	430b      	orrs	r3, r1
     6fe:	2126      	movs	r1, #38	; 0x26
     700:	5c71      	ldrb	r1, [r6, r1]
     702:	05c9      	lsls	r1, r1, #23
     704:	430b      	orrs	r3, r1
     706:	4303      	orrs	r3, r0
     708:	4313      	orrs	r3, r2
     70a:	6023      	str	r3, [r4, #0]
     70c:	8972      	ldrh	r2, [r6, #10]
     70e:	2380      	movs	r3, #128	; 0x80
     710:	005b      	lsls	r3, r3, #1
     712:	4313      	orrs	r3, r2
     714:	6063      	str	r3, [r4, #4]
     716:	89b3      	ldrh	r3, [r6, #12]
     718:	005b      	lsls	r3, r3, #1
     71a:	89f2      	ldrh	r2, [r6, #14]
     71c:	0452      	lsls	r2, r2, #17
     71e:	4313      	orrs	r3, r2
     720:	7c72      	ldrb	r2, [r6, #17]
     722:	4313      	orrs	r3, r2
     724:	7c32      	ldrb	r2, [r6, #16]
     726:	03d2      	lsls	r2, r2, #15
     728:	4313      	orrs	r3, r2
     72a:	6263      	str	r3, [r4, #36]	; 0x24
     72c:	2000      	movs	r0, #0
     72e:	e766      	b.n	5fe <i2c_slave_init+0x1a>
     730:	2100      	movs	r1, #0
     732:	0020      	movs	r0, r4
     734:	4b0e      	ldr	r3, [pc, #56]	; (770 <i2c_slave_init+0x18c>)
     736:	4798      	blx	r3
     738:	e7ae      	b.n	698 <i2c_slave_init+0xb4>
     73a:	2101      	movs	r1, #1
     73c:	0020      	movs	r0, r4
     73e:	4b0c      	ldr	r3, [pc, #48]	; (770 <i2c_slave_init+0x18c>)
     740:	4798      	blx	r3
     742:	0005      	movs	r5, r0
     744:	e7b4      	b.n	6b0 <i2c_slave_init+0xcc>
     746:	46c0      	nop			; (mov r8, r8)
     748:	00000dc1 	.word	0x00000dc1
     74c:	40000400 	.word	0x40000400
     750:	000015b1 	.word	0x000015b1
     754:	00001525 	.word	0x00001525
     758:	00000cf5 	.word	0x00000cf5
     75c:	000007e1 	.word	0x000007e1
     760:	00000de9 	.word	0x00000de9
     764:	200009c0 	.word	0x200009c0
     768:	000016a9 	.word	0x000016a9
     76c:	41002000 	.word	0x41002000
     770:	00000d41 	.word	0x00000d41

00000774 <i2c_slave_register_callback>:
     774:	b510      	push	{r4, lr}
     776:	1c93      	adds	r3, r2, #2
     778:	009b      	lsls	r3, r3, #2
     77a:	18c3      	adds	r3, r0, r3
     77c:	6059      	str	r1, [r3, #4]
     77e:	2424      	movs	r4, #36	; 0x24
     780:	5d03      	ldrb	r3, [r0, r4]
     782:	2101      	movs	r1, #1
     784:	4091      	lsls	r1, r2
     786:	430b      	orrs	r3, r1
     788:	b2db      	uxtb	r3, r3
     78a:	5503      	strb	r3, [r0, r4]
     78c:	bd10      	pop	{r4, pc}

0000078e <i2c_slave_read_packet_job>:
     78e:	8d02      	ldrh	r2, [r0, #40]	; 0x28
     790:	2305      	movs	r3, #5
     792:	2a00      	cmp	r2, #0
     794:	d001      	beq.n	79a <i2c_slave_read_packet_job+0xc>
     796:	0018      	movs	r0, r3
     798:	4770      	bx	lr
     79a:	684b      	ldr	r3, [r1, #4]
     79c:	62c3      	str	r3, [r0, #44]	; 0x2c
     79e:	880b      	ldrh	r3, [r1, #0]
     7a0:	8503      	strh	r3, [r0, #40]	; 0x28
     7a2:	880b      	ldrh	r3, [r1, #0]
     7a4:	84c3      	strh	r3, [r0, #38]	; 0x26
     7a6:	3205      	adds	r2, #5
     7a8:	2331      	movs	r3, #49	; 0x31
     7aa:	54c2      	strb	r2, [r0, r3]
     7ac:	6803      	ldr	r3, [r0, #0]
     7ae:	3202      	adds	r2, #2
     7b0:	759a      	strb	r2, [r3, #22]
     7b2:	2300      	movs	r3, #0
     7b4:	e7ef      	b.n	796 <i2c_slave_read_packet_job+0x8>

000007b6 <i2c_slave_write_packet_job>:
     7b6:	8d02      	ldrh	r2, [r0, #40]	; 0x28
     7b8:	2305      	movs	r3, #5
     7ba:	2a00      	cmp	r2, #0
     7bc:	d001      	beq.n	7c2 <i2c_slave_write_packet_job+0xc>
     7be:	0018      	movs	r0, r3
     7c0:	4770      	bx	lr
     7c2:	684b      	ldr	r3, [r1, #4]
     7c4:	62c3      	str	r3, [r0, #44]	; 0x2c
     7c6:	880b      	ldrh	r3, [r1, #0]
     7c8:	8503      	strh	r3, [r0, #40]	; 0x28
     7ca:	880b      	ldrh	r3, [r1, #0]
     7cc:	84c3      	strh	r3, [r0, #38]	; 0x26
     7ce:	3205      	adds	r2, #5
     7d0:	2331      	movs	r3, #49	; 0x31
     7d2:	54c2      	strb	r2, [r0, r3]
     7d4:	6803      	ldr	r3, [r0, #0]
     7d6:	3202      	adds	r2, #2
     7d8:	759a      	strb	r2, [r3, #22]
     7da:	2300      	movs	r3, #0
     7dc:	e7ef      	b.n	7be <i2c_slave_write_packet_job+0x8>
	...

000007e0 <_i2c_slave_interrupt_handler>:
     7e0:	b570      	push	{r4, r5, r6, lr}
     7e2:	0080      	lsls	r0, r0, #2
     7e4:	4b9b      	ldr	r3, [pc, #620]	; (a54 <_i2c_slave_interrupt_handler+0x274>)
     7e6:	58c4      	ldr	r4, [r0, r3]
     7e8:	6825      	ldr	r5, [r4, #0]
     7ea:	2325      	movs	r3, #37	; 0x25
     7ec:	5ce3      	ldrb	r3, [r4, r3]
     7ee:	2224      	movs	r2, #36	; 0x24
     7f0:	5ca6      	ldrb	r6, [r4, r2]
     7f2:	401e      	ands	r6, r3
     7f4:	7e2b      	ldrb	r3, [r5, #24]
     7f6:	079b      	lsls	r3, r3, #30
     7f8:	d400      	bmi.n	7fc <_i2c_slave_interrupt_handler+0x1c>
     7fa:	e095      	b.n	928 <_i2c_slave_interrupt_handler+0x148>
     7fc:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     7fe:	b29b      	uxth	r3, r3
     800:	8d22      	ldrh	r2, [r4, #40]	; 0x28
     802:	4293      	cmp	r3, r2
     804:	d00d      	beq.n	822 <_i2c_slave_interrupt_handler+0x42>
     806:	2330      	movs	r3, #48	; 0x30
     808:	5ce3      	ldrb	r3, [r4, r3]
     80a:	2b00      	cmp	r3, #0
     80c:	d109      	bne.n	822 <_i2c_slave_interrupt_handler+0x42>
     80e:	2231      	movs	r2, #49	; 0x31
     810:	54a3      	strb	r3, [r4, r2]
     812:	84e3      	strh	r3, [r4, #38]	; 0x26
     814:	8523      	strh	r3, [r4, #40]	; 0x28
     816:	07b3      	lsls	r3, r6, #30
     818:	d50b      	bpl.n	832 <_i2c_slave_interrupt_handler+0x52>
     81a:	6923      	ldr	r3, [r4, #16]
     81c:	0020      	movs	r0, r4
     81e:	4798      	blx	r3
     820:	e007      	b.n	832 <_i2c_slave_interrupt_handler+0x52>
     822:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     824:	b29b      	uxth	r3, r3
     826:	429a      	cmp	r2, r3
     828:	d003      	beq.n	832 <_i2c_slave_interrupt_handler+0x52>
     82a:	2330      	movs	r3, #48	; 0x30
     82c:	5ce3      	ldrb	r3, [r4, r3]
     82e:	2b01      	cmp	r3, #1
     830:	d022      	beq.n	878 <_i2c_slave_interrupt_handler+0x98>
     832:	8b6a      	ldrh	r2, [r5, #26]
     834:	2343      	movs	r3, #67	; 0x43
     836:	421a      	tst	r2, r3
     838:	d004      	beq.n	844 <_i2c_slave_interrupt_handler+0x64>
     83a:	2210      	movs	r2, #16
     83c:	3b12      	subs	r3, #18
     83e:	54e2      	strb	r2, [r4, r3]
     840:	06b3      	lsls	r3, r6, #26
     842:	d424      	bmi.n	88e <_i2c_slave_interrupt_handler+0xae>
     844:	7a63      	ldrb	r3, [r4, #9]
     846:	2b00      	cmp	r3, #0
     848:	d125      	bne.n	896 <_i2c_slave_interrupt_handler+0xb6>
     84a:	8b6b      	ldrh	r3, [r5, #26]
     84c:	071b      	lsls	r3, r3, #28
     84e:	d54a      	bpl.n	8e6 <_i2c_slave_interrupt_handler+0x106>
     850:	2201      	movs	r2, #1
     852:	2330      	movs	r3, #48	; 0x30
     854:	54e2      	strb	r2, [r4, r3]
     856:	0773      	lsls	r3, r6, #29
     858:	d438      	bmi.n	8cc <_i2c_slave_interrupt_handler+0xec>
     85a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     85c:	b29b      	uxth	r3, r3
     85e:	2b00      	cmp	r3, #0
     860:	d138      	bne.n	8d4 <_i2c_slave_interrupt_handler+0xf4>
     862:	6825      	ldr	r5, [r4, #0]
     864:	4b7c      	ldr	r3, [pc, #496]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     866:	4798      	blx	r3
     868:	2300      	movs	r3, #0
     86a:	836b      	strh	r3, [r5, #26]
     86c:	2380      	movs	r3, #128	; 0x80
     86e:	02db      	lsls	r3, r3, #11
     870:	606b      	str	r3, [r5, #4]
     872:	4b7a      	ldr	r3, [pc, #488]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     874:	4798      	blx	r3
     876:	e018      	b.n	8aa <_i2c_slave_interrupt_handler+0xca>
     878:	2300      	movs	r3, #0
     87a:	2231      	movs	r2, #49	; 0x31
     87c:	54a3      	strb	r3, [r4, r2]
     87e:	84e3      	strh	r3, [r4, #38]	; 0x26
     880:	8523      	strh	r3, [r4, #40]	; 0x28
     882:	07f3      	lsls	r3, r6, #31
     884:	d5d5      	bpl.n	832 <_i2c_slave_interrupt_handler+0x52>
     886:	68e3      	ldr	r3, [r4, #12]
     888:	0020      	movs	r0, r4
     88a:	4798      	blx	r3
     88c:	e7d1      	b.n	832 <_i2c_slave_interrupt_handler+0x52>
     88e:	6a23      	ldr	r3, [r4, #32]
     890:	0020      	movs	r0, r4
     892:	4798      	blx	r3
     894:	e7d6      	b.n	844 <_i2c_slave_interrupt_handler+0x64>
     896:	6825      	ldr	r5, [r4, #0]
     898:	4b6f      	ldr	r3, [pc, #444]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     89a:	4798      	blx	r3
     89c:	2300      	movs	r3, #0
     89e:	836b      	strh	r3, [r5, #26]
     8a0:	2380      	movs	r3, #128	; 0x80
     8a2:	02db      	lsls	r3, r3, #11
     8a4:	606b      	str	r3, [r5, #4]
     8a6:	4b6d      	ldr	r3, [pc, #436]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     8a8:	4798      	blx	r3
     8aa:	6823      	ldr	r3, [r4, #0]
     8ac:	7e1a      	ldrb	r2, [r3, #24]
     8ae:	07d2      	lsls	r2, r2, #31
     8b0:	d501      	bpl.n	8b6 <_i2c_slave_interrupt_handler+0xd6>
     8b2:	2201      	movs	r2, #1
     8b4:	761a      	strb	r2, [r3, #24]
     8b6:	2202      	movs	r2, #2
     8b8:	761a      	strb	r2, [r3, #24]
     8ba:	6824      	ldr	r4, [r4, #0]
     8bc:	4b66      	ldr	r3, [pc, #408]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     8be:	4798      	blx	r3
     8c0:	2300      	movs	r3, #0
     8c2:	8363      	strh	r3, [r4, #26]
     8c4:	6063      	str	r3, [r4, #4]
     8c6:	4b65      	ldr	r3, [pc, #404]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     8c8:	4798      	blx	r3
     8ca:	bd70      	pop	{r4, r5, r6, pc}
     8cc:	6963      	ldr	r3, [r4, #20]
     8ce:	0020      	movs	r0, r4
     8d0:	4798      	blx	r3
     8d2:	e7c2      	b.n	85a <_i2c_slave_interrupt_handler+0x7a>
     8d4:	6825      	ldr	r5, [r4, #0]
     8d6:	4b60      	ldr	r3, [pc, #384]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     8d8:	4798      	blx	r3
     8da:	2300      	movs	r3, #0
     8dc:	836b      	strh	r3, [r5, #26]
     8de:	606b      	str	r3, [r5, #4]
     8e0:	4b5e      	ldr	r3, [pc, #376]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     8e2:	4798      	blx	r3
     8e4:	e7e1      	b.n	8aa <_i2c_slave_interrupt_handler+0xca>
     8e6:	2200      	movs	r2, #0
     8e8:	2330      	movs	r3, #48	; 0x30
     8ea:	54e2      	strb	r2, [r4, r3]
     8ec:	0733      	lsls	r3, r6, #28
     8ee:	d40e      	bmi.n	90e <_i2c_slave_interrupt_handler+0x12e>
     8f0:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     8f2:	b29b      	uxth	r3, r3
     8f4:	2b00      	cmp	r3, #0
     8f6:	d10e      	bne.n	916 <_i2c_slave_interrupt_handler+0x136>
     8f8:	6825      	ldr	r5, [r4, #0]
     8fa:	4b57      	ldr	r3, [pc, #348]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     8fc:	4798      	blx	r3
     8fe:	2300      	movs	r3, #0
     900:	836b      	strh	r3, [r5, #26]
     902:	2380      	movs	r3, #128	; 0x80
     904:	02db      	lsls	r3, r3, #11
     906:	606b      	str	r3, [r5, #4]
     908:	4b54      	ldr	r3, [pc, #336]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     90a:	4798      	blx	r3
     90c:	e7cd      	b.n	8aa <_i2c_slave_interrupt_handler+0xca>
     90e:	69a3      	ldr	r3, [r4, #24]
     910:	0020      	movs	r0, r4
     912:	4798      	blx	r3
     914:	e7ec      	b.n	8f0 <_i2c_slave_interrupt_handler+0x110>
     916:	6825      	ldr	r5, [r4, #0]
     918:	4b4f      	ldr	r3, [pc, #316]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     91a:	4798      	blx	r3
     91c:	2300      	movs	r3, #0
     91e:	836b      	strh	r3, [r5, #26]
     920:	606b      	str	r3, [r5, #4]
     922:	4b4e      	ldr	r3, [pc, #312]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     924:	4798      	blx	r3
     926:	e7c0      	b.n	8aa <_i2c_slave_interrupt_handler+0xca>
     928:	7e2b      	ldrb	r3, [r5, #24]
     92a:	07db      	lsls	r3, r3, #31
     92c:	d52e      	bpl.n	98c <_i2c_slave_interrupt_handler+0x1ac>
     92e:	2301      	movs	r3, #1
     930:	762b      	strb	r3, [r5, #24]
     932:	3304      	adds	r3, #4
     934:	752b      	strb	r3, [r5, #20]
     936:	3320      	adds	r3, #32
     938:	5ce3      	ldrb	r3, [r4, r3]
     93a:	075b      	lsls	r3, r3, #29
     93c:	d405      	bmi.n	94a <_i2c_slave_interrupt_handler+0x16a>
     93e:	2325      	movs	r3, #37	; 0x25
     940:	5ce3      	ldrb	r3, [r4, r3]
     942:	071b      	lsls	r3, r3, #28
     944:	d401      	bmi.n	94a <_i2c_slave_interrupt_handler+0x16a>
     946:	2302      	movs	r3, #2
     948:	752b      	strb	r3, [r5, #20]
     94a:	2331      	movs	r3, #49	; 0x31
     94c:	5ce3      	ldrb	r3, [r4, r3]
     94e:	2b1e      	cmp	r3, #30
     950:	d0bb      	beq.n	8ca <_i2c_slave_interrupt_handler+0xea>
     952:	2331      	movs	r3, #49	; 0x31
     954:	5ce3      	ldrb	r3, [r4, r3]
     956:	2b10      	cmp	r3, #16
     958:	d0b7      	beq.n	8ca <_i2c_slave_interrupt_handler+0xea>
     95a:	2300      	movs	r3, #0
     95c:	2231      	movs	r2, #49	; 0x31
     95e:	54a3      	strb	r3, [r4, r2]
     960:	84e3      	strh	r3, [r4, #38]	; 0x26
     962:	8523      	strh	r3, [r4, #40]	; 0x28
     964:	07b3      	lsls	r3, r6, #30
     966:	d503      	bpl.n	970 <_i2c_slave_interrupt_handler+0x190>
     968:	2330      	movs	r3, #48	; 0x30
     96a:	5ce3      	ldrb	r3, [r4, r3]
     96c:	2b00      	cmp	r3, #0
     96e:	d009      	beq.n	984 <_i2c_slave_interrupt_handler+0x1a4>
     970:	07f3      	lsls	r3, r6, #31
     972:	d5aa      	bpl.n	8ca <_i2c_slave_interrupt_handler+0xea>
     974:	2330      	movs	r3, #48	; 0x30
     976:	5ce3      	ldrb	r3, [r4, r3]
     978:	2b01      	cmp	r3, #1
     97a:	d1a6      	bne.n	8ca <_i2c_slave_interrupt_handler+0xea>
     97c:	68e3      	ldr	r3, [r4, #12]
     97e:	0020      	movs	r0, r4
     980:	4798      	blx	r3
     982:	e7a2      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     984:	6923      	ldr	r3, [r4, #16]
     986:	0020      	movs	r0, r4
     988:	4798      	blx	r3
     98a:	e79e      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     98c:	7e2b      	ldrb	r3, [r5, #24]
     98e:	075b      	lsls	r3, r3, #29
     990:	d59b      	bpl.n	8ca <_i2c_slave_interrupt_handler+0xea>
     992:	8d23      	ldrh	r3, [r4, #40]	; 0x28
     994:	2b00      	cmp	r3, #0
     996:	d01e      	beq.n	9d6 <_i2c_slave_interrupt_handler+0x1f6>
     998:	2230      	movs	r2, #48	; 0x30
     99a:	5ca2      	ldrb	r2, [r4, r2]
     99c:	2a01      	cmp	r2, #1
     99e:	d013      	beq.n	9c8 <_i2c_slave_interrupt_handler+0x1e8>
     9a0:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
     9a2:	b29b      	uxth	r3, r3
     9a4:	2b00      	cmp	r3, #0
     9a6:	d100      	bne.n	9aa <_i2c_slave_interrupt_handler+0x1ca>
     9a8:	e78f      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     9aa:	2330      	movs	r3, #48	; 0x30
     9ac:	5ce3      	ldrb	r3, [r4, r3]
     9ae:	2b00      	cmp	r3, #0
     9b0:	d044      	beq.n	a3c <_i2c_slave_interrupt_handler+0x25c>
     9b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     9b4:	1c5a      	adds	r2, r3, #1
     9b6:	62e2      	str	r2, [r4, #44]	; 0x2c
     9b8:	781b      	ldrb	r3, [r3, #0]
     9ba:	b2db      	uxtb	r3, r3
     9bc:	2228      	movs	r2, #40	; 0x28
     9be:	54ab      	strb	r3, [r5, r2]
     9c0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
     9c2:	3b01      	subs	r3, #1
     9c4:	8523      	strh	r3, [r4, #40]	; 0x28
     9c6:	e780      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     9c8:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
     9ca:	b292      	uxth	r2, r2
     9cc:	4293      	cmp	r3, r2
     9ce:	d2e7      	bcs.n	9a0 <_i2c_slave_interrupt_handler+0x1c0>
     9d0:	8b6b      	ldrh	r3, [r5, #26]
     9d2:	075b      	lsls	r3, r3, #29
     9d4:	d5e4      	bpl.n	9a0 <_i2c_slave_interrupt_handler+0x1c0>
     9d6:	2300      	movs	r3, #0
     9d8:	8523      	strh	r3, [r4, #40]	; 0x28
     9da:	84e3      	strh	r3, [r4, #38]	; 0x26
     9dc:	3330      	adds	r3, #48	; 0x30
     9de:	5ce3      	ldrb	r3, [r4, r3]
     9e0:	2b00      	cmp	r3, #0
     9e2:	d117      	bne.n	a14 <_i2c_slave_interrupt_handler+0x234>
     9e4:	4b1c      	ldr	r3, [pc, #112]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     9e6:	4798      	blx	r3
     9e8:	2300      	movs	r3, #0
     9ea:	836b      	strh	r3, [r5, #26]
     9ec:	2380      	movs	r3, #128	; 0x80
     9ee:	02db      	lsls	r3, r3, #11
     9f0:	606b      	str	r3, [r5, #4]
     9f2:	4b1a      	ldr	r3, [pc, #104]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     9f4:	4798      	blx	r3
     9f6:	686a      	ldr	r2, [r5, #4]
     9f8:	2380      	movs	r3, #128	; 0x80
     9fa:	029b      	lsls	r3, r3, #10
     9fc:	4313      	orrs	r3, r2
     9fe:	606b      	str	r3, [r5, #4]
     a00:	221e      	movs	r2, #30
     a02:	2331      	movs	r3, #49	; 0x31
     a04:	54e2      	strb	r2, [r4, r3]
     a06:	06f3      	lsls	r3, r6, #27
     a08:	d400      	bmi.n	a0c <_i2c_slave_interrupt_handler+0x22c>
     a0a:	e75e      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     a0c:	69e3      	ldr	r3, [r4, #28]
     a0e:	0020      	movs	r0, r4
     a10:	4798      	blx	r3
     a12:	e75a      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     a14:	4b10      	ldr	r3, [pc, #64]	; (a58 <_i2c_slave_interrupt_handler+0x278>)
     a16:	4798      	blx	r3
     a18:	2300      	movs	r3, #0
     a1a:	836b      	strh	r3, [r5, #26]
     a1c:	2380      	movs	r3, #128	; 0x80
     a1e:	02db      	lsls	r3, r3, #11
     a20:	606b      	str	r3, [r5, #4]
     a22:	4b0e      	ldr	r3, [pc, #56]	; (a5c <_i2c_slave_interrupt_handler+0x27c>)
     a24:	4798      	blx	r3
     a26:	686a      	ldr	r2, [r5, #4]
     a28:	2380      	movs	r3, #128	; 0x80
     a2a:	029b      	lsls	r3, r3, #10
     a2c:	4313      	orrs	r3, r2
     a2e:	606b      	str	r3, [r5, #4]
     a30:	2331      	movs	r3, #49	; 0x31
     a32:	2200      	movs	r2, #0
     a34:	54e2      	strb	r2, [r4, r3]
     a36:	3b2d      	subs	r3, #45	; 0x2d
     a38:	752b      	strb	r3, [r5, #20]
     a3a:	e746      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     a3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     a3e:	1c53      	adds	r3, r2, #1
     a40:	62e3      	str	r3, [r4, #44]	; 0x2c
     a42:	2328      	movs	r3, #40	; 0x28
     a44:	5ceb      	ldrb	r3, [r5, r3]
     a46:	b2db      	uxtb	r3, r3
     a48:	7013      	strb	r3, [r2, #0]
     a4a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
     a4c:	3b01      	subs	r3, #1
     a4e:	8523      	strh	r3, [r4, #40]	; 0x28
     a50:	e73b      	b.n	8ca <_i2c_slave_interrupt_handler+0xea>
     a52:	46c0      	nop			; (mov r8, r8)
     a54:	200009c0 	.word	0x200009c0
     a58:	00000f41 	.word	0x00000f41
     a5c:	00000f81 	.word	0x00000f81

00000a60 <_ZN14CircularBufferC1Eh>:
     a60:	7281      	strb	r1, [r0, #10]
     a62:	2300      	movs	r3, #0
     a64:	72c3      	strb	r3, [r0, #11]
     a66:	7303      	strb	r3, [r0, #12]
     a68:	4770      	bx	lr

00000a6a <_ZN14CircularBufferD1Ev>:
     a6a:	4770      	bx	lr

00000a6c <_ZN14CircularBuffer4sizeEv>:
     a6c:	7b03      	ldrb	r3, [r0, #12]
     a6e:	7ac1      	ldrb	r1, [r0, #11]
     a70:	428b      	cmp	r3, r1
     a72:	da05      	bge.n	a80 <_ZN14CircularBuffer4sizeEv+0x14>
     a74:	7a82      	ldrb	r2, [r0, #10]
     a76:	1a5b      	subs	r3, r3, r1
     a78:	b2d8      	uxtb	r0, r3
     a7a:	1810      	adds	r0, r2, r0
     a7c:	b2c0      	uxtb	r0, r0
     a7e:	4770      	bx	lr
     a80:	1a5b      	subs	r3, r3, r1
     a82:	b2d8      	uxtb	r0, r3
     a84:	e7fb      	b.n	a7e <_ZN14CircularBuffer4sizeEv+0x12>

00000a86 <_ZNK14CircularBuffer7isEmptyEv>:
     a86:	7ac3      	ldrb	r3, [r0, #11]
     a88:	7b00      	ldrb	r0, [r0, #12]
     a8a:	1ac0      	subs	r0, r0, r3
     a8c:	4243      	negs	r3, r0
     a8e:	4158      	adcs	r0, r3
     a90:	b2c0      	uxtb	r0, r0
     a92:	4770      	bx	lr

00000a94 <_ZNK14CircularBuffer6isFullEv>:
     a94:	b510      	push	{r4, lr}
     a96:	0004      	movs	r4, r0
     a98:	7b00      	ldrb	r0, [r0, #12]
     a9a:	3001      	adds	r0, #1
     a9c:	7aa1      	ldrb	r1, [r4, #10]
     a9e:	4b04      	ldr	r3, [pc, #16]	; (ab0 <_ZNK14CircularBuffer6isFullEv+0x1c>)
     aa0:	4798      	blx	r3
     aa2:	7ae0      	ldrb	r0, [r4, #11]
     aa4:	1a40      	subs	r0, r0, r1
     aa6:	4241      	negs	r1, r0
     aa8:	4148      	adcs	r0, r1
     aaa:	b2c0      	uxtb	r0, r0
     aac:	bd10      	pop	{r4, pc}
     aae:	46c0      	nop			; (mov r8, r8)
     ab0:	00001ad1 	.word	0x00001ad1

00000ab4 <_ZN14CircularBuffer5writeEh>:
     ab4:	b570      	push	{r4, r5, r6, lr}
     ab6:	0004      	movs	r4, r0
     ab8:	000d      	movs	r5, r1
     aba:	4b07      	ldr	r3, [pc, #28]	; (ad8 <_ZN14CircularBuffer5writeEh+0x24>)
     abc:	4798      	blx	r3
     abe:	2800      	cmp	r0, #0
     ac0:	d108      	bne.n	ad4 <_ZN14CircularBuffer5writeEh+0x20>
     ac2:	7b20      	ldrb	r0, [r4, #12]
     ac4:	5425      	strb	r5, [r4, r0]
     ac6:	3001      	adds	r0, #1
     ac8:	7aa1      	ldrb	r1, [r4, #10]
     aca:	4b04      	ldr	r3, [pc, #16]	; (adc <_ZN14CircularBuffer5writeEh+0x28>)
     acc:	4798      	blx	r3
     ace:	7321      	strb	r1, [r4, #12]
     ad0:	2001      	movs	r0, #1
     ad2:	bd70      	pop	{r4, r5, r6, pc}
     ad4:	2000      	movs	r0, #0
     ad6:	e7fc      	b.n	ad2 <_ZN14CircularBuffer5writeEh+0x1e>
     ad8:	00000a95 	.word	0x00000a95
     adc:	00001ad1 	.word	0x00001ad1

00000ae0 <_ZN14CircularBuffer4readERh>:
     ae0:	b570      	push	{r4, r5, r6, lr}
     ae2:	0004      	movs	r4, r0
     ae4:	000d      	movs	r5, r1
     ae6:	4b08      	ldr	r3, [pc, #32]	; (b08 <_ZN14CircularBuffer4readERh+0x28>)
     ae8:	4798      	blx	r3
     aea:	2800      	cmp	r0, #0
     aec:	d10a      	bne.n	b04 <_ZN14CircularBuffer4readERh+0x24>
     aee:	7ae3      	ldrb	r3, [r4, #11]
     af0:	5ce3      	ldrb	r3, [r4, r3]
     af2:	702b      	strb	r3, [r5, #0]
     af4:	7ae0      	ldrb	r0, [r4, #11]
     af6:	3001      	adds	r0, #1
     af8:	7aa1      	ldrb	r1, [r4, #10]
     afa:	4b04      	ldr	r3, [pc, #16]	; (b0c <_ZN14CircularBuffer4readERh+0x2c>)
     afc:	4798      	blx	r3
     afe:	72e1      	strb	r1, [r4, #11]
     b00:	2001      	movs	r0, #1
     b02:	bd70      	pop	{r4, r5, r6, pc}
     b04:	2000      	movs	r0, #0
     b06:	e7fc      	b.n	b02 <_ZN14CircularBuffer4readERh+0x22>
     b08:	00000a87 	.word	0x00000a87
     b0c:	00001ad1 	.word	0x00001ad1

00000b10 <_ZN8colorRGBC1Em>:


#include "ws2812b.h"

colorRGB::colorRGB(uint32_t colorHEX){
	R = (colorHEX >> 16) & 0xFF;
     b10:	0c0b      	lsrs	r3, r1, #16
     b12:	7003      	strb	r3, [r0, #0]
	G = (colorHEX >> 8) & 0xFF;
     b14:	0a0b      	lsrs	r3, r1, #8
     b16:	7043      	strb	r3, [r0, #1]
	B = colorHEX & 0xFF;
     b18:	7081      	strb	r1, [r0, #2]
}
     b1a:	4770      	bx	lr

00000b1c <_ZN7ws2812b11setLEDColorEh8colorRGB>:
{
	if(pixelsIsDynamic)
		delete pixels;
} //~ws2812b

void ws2812b::setLEDColor(uint8_t led_num, colorRGB color){
     b1c:	b530      	push	{r4, r5, lr}
     b1e:	b083      	sub	sp, #12
     b20:	9201      	str	r2, [sp, #4]
	if(led_num>=num_leds)
     b22:	8803      	ldrh	r3, [r0, #0]
     b24:	4299      	cmp	r1, r3
     b26:	da0d      	bge.n	b44 <_ZN7ws2812b11setLEDColorEh8colorRGB+0x28>
		return;
	//color order is GRB
	
	pixels[led_num*3+1] = color.R;
     b28:	004b      	lsls	r3, r1, #1
     b2a:	1859      	adds	r1, r3, r1
     b2c:	1c4a      	adds	r2, r1, #1
     b2e:	ab01      	add	r3, sp, #4
     b30:	781c      	ldrb	r4, [r3, #0]
     b32:	6845      	ldr	r5, [r0, #4]
     b34:	54ac      	strb	r4, [r5, r2]
	pixels[led_num*3] = color.G;
     b36:	785a      	ldrb	r2, [r3, #1]
     b38:	6844      	ldr	r4, [r0, #4]
     b3a:	5462      	strb	r2, [r4, r1]
	pixels[led_num*3+2] = color.B;
     b3c:	6842      	ldr	r2, [r0, #4]
     b3e:	3102      	adds	r1, #2
     b40:	789b      	ldrb	r3, [r3, #2]
     b42:	5453      	strb	r3, [r2, r1]
}
     b44:	b003      	add	sp, #12
     b46:	bd30      	pop	{r4, r5, pc}

00000b48 <_ZN7ws2812b13configureGPIOEv>:

void ws2812b::write(){
	ws2812_write();
}

void ws2812b::configureGPIO(){
     b48:	b500      	push	{lr}
     b4a:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
     b4c:	a901      	add	r1, sp, #4
     b4e:	2301      	movs	r3, #1
     b50:	704b      	strb	r3, [r1, #1]
	config->powersave  = false;
     b52:	2200      	movs	r2, #0
     b54:	708a      	strb	r2, [r1, #2]
	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     b56:	700b      	strb	r3, [r1, #0]
	port_pin_set_config(led_pin, &config_port_pin);
     b58:	7a00      	ldrb	r0, [r0, #8]
     b5a:	4b02      	ldr	r3, [pc, #8]	; (b64 <_ZN7ws2812b13configureGPIOEv+0x1c>)
     b5c:	4798      	blx	r3
}
     b5e:	b003      	add	sp, #12
     b60:	bd00      	pop	{pc}
     b62:	46c0      	nop			; (mov r8, r8)
     b64:	00000f1d 	.word	0x00000f1d

00000b68 <_ZN7ws2812bC1EPhth>:
ws2812b::ws2812b(uint8_t* pixels_, uint16_t num_leds_, uint8_t led_pin_){
     b68:	b510      	push	{r4, lr}
     b6a:	0004      	movs	r4, r0
     b6c:	2000      	movs	r0, #0
     b6e:	60e0      	str	r0, [r4, #12]
	led_pin = led_pin_;
     b70:	7223      	strb	r3, [r4, #8]
	num_leds = num_leds_;
     b72:	8022      	strh	r2, [r4, #0]
	pixels = pixels_;
     b74:	6061      	str	r1, [r4, #4]
	pixelsIsDynamic = false;
     b76:	70a0      	strb	r0, [r4, #2]
	configureGPIO();
     b78:	0020      	movs	r0, r4
     b7a:	4b02      	ldr	r3, [pc, #8]	; (b84 <_ZN7ws2812bC1EPhth+0x1c>)
     b7c:	4798      	blx	r3
};
     b7e:	0020      	movs	r0, r4
     b80:	bd10      	pop	{r4, pc}
     b82:	46c0      	nop			; (mov r8, r8)
     b84:	00000b49 	.word	0x00000b49

00000b88 <_ZN7ws2812b12ws2812_writeEv>:
	.45us	: .45/.125 = 3.6	-> 4 cycles = 0.5us
	.8us		: .8/.125 = 6.4		-> 6 cycles = 0.75us
	.85us	: .85/.125 = 6.8	-> 7 cycles = 0.875us
	*/
void ws2812b::ws2812_write()
{
     b88:	b530      	push	{r4, r5, lr}
	if(pixels == NULL)
     b8a:	6843      	ldr	r3, [r0, #4]
     b8c:	2b00      	cmp	r3, #0
     b8e:	d100      	bne.n	b92 <_ZN7ws2812b12ws2812_writeEv+0xa>
     b90:	e057      	b.n	c42 <_ZN7ws2812b12ws2812_writeEv+0xba>
		return;
	uint16_t numBytes = num_leds*3;
     b92:	8805      	ldrh	r5, [r0, #0]
     b94:	006a      	lsls	r2, r5, #1
     b96:	18ad      	adds	r5, r5, r2
     b98:	b2ad      	uxth	r5, r5
	uint8_t  *ptr, *end, p, bitMask;
	uint32_t  pinMask;

	PortGroup *const port_base = port_get_group_from_gpio_pin(led_pin);
     b9a:	7a00      	ldrb	r0, [r0, #8]
 * \return Base address of the associated PORT module.
 */
static inline PortGroup* system_pinmux_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
	uint8_t port_index  = (gpio_pin / 128);
     b9c:	09c2      	lsrs	r2, r0, #7
	uint8_t group_index = (gpio_pin / 32);
     b9e:	0941      	lsrs	r1, r0, #5

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
     ba0:	2a00      	cmp	r2, #0
     ba2:	dd07      	ble.n	bb4 <_ZN7ws2812b12ws2812_writeEv+0x2c>
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
     ba4:	2100      	movs	r1, #0

	 volatile uint32_t *set = &(port_base->OUTSET.reg);
	 volatile uint32_t *clr = &(port_base->OUTCLR.reg);
	

	pinMask =  1ul << led_pin;
     ba6:	2201      	movs	r2, #1
     ba8:	4082      	lsls	r2, r0
	ptr     =  pixels;
	end     =  ptr + numBytes;
     baa:	195d      	adds	r5, r3, r5
	p       = *ptr++;
     bac:	1c58      	adds	r0, r3, #1
     bae:	781c      	ldrb	r4, [r3, #0]
	bitMask =  0x80;
     bb0:	2380      	movs	r3, #128	; 0x80
     bb2:	e01f      	b.n	bf4 <_ZN7ws2812b12ws2812_writeEv+0x6c>
		return &(ports[port_index]->Group[group_index]);
     bb4:	01c9      	lsls	r1, r1, #7
     bb6:	4a23      	ldr	r2, [pc, #140]	; (c44 <_ZN7ws2812b12ws2812_writeEv+0xbc>)
     bb8:	4694      	mov	ip, r2
     bba:	4461      	add	r1, ip
     bbc:	e7f3      	b.n	ba6 <_ZN7ws2812b12ws2812_writeEv+0x1e>
		 asm("nop; nop; nop; nop; nop; nop; nop; nop;");
		 if(p & bitMask) {
			 asm("nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;");
			 *clr = pinMask;
			 } else {
			 *clr = pinMask;
     bbe:	614a      	str	r2, [r1, #20]
			 asm("nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;");
     bc0:	46c0      	nop			; (mov r8, r8)
     bc2:	46c0      	nop			; (mov r8, r8)
     bc4:	46c0      	nop			; (mov r8, r8)
     bc6:	46c0      	nop			; (mov r8, r8)
     bc8:	46c0      	nop			; (mov r8, r8)
     bca:	46c0      	nop			; (mov r8, r8)
     bcc:	46c0      	nop			; (mov r8, r8)
     bce:	46c0      	nop			; (mov r8, r8)
     bd0:	46c0      	nop			; (mov r8, r8)
     bd2:	46c0      	nop			; (mov r8, r8)
     bd4:	46c0      	nop			; (mov r8, r8)
     bd6:	46c0      	nop			; (mov r8, r8)
     bd8:	46c0      	nop			; (mov r8, r8)
     bda:	46c0      	nop			; (mov r8, r8)
     bdc:	46c0      	nop			; (mov r8, r8)
     bde:	46c0      	nop			; (mov r8, r8)
     be0:	46c0      	nop			; (mov r8, r8)
     be2:	46c0      	nop			; (mov r8, r8)
     be4:	46c0      	nop			; (mov r8, r8)
     be6:	46c0      	nop			; (mov r8, r8)
     be8:	e024      	b.n	c34 <_ZN7ws2812b12ws2812_writeEv+0xac>
		 }
		 
		 if(bitMask >>= 1) {
			 asm("nop; nop; nop; nop;");
			 } else {
			 if(ptr >= end) break;
     bea:	42a8      	cmp	r0, r5
     bec:	d229      	bcs.n	c42 <_ZN7ws2812b12ws2812_writeEv+0xba>
			 p       = *ptr++;
     bee:	7804      	ldrb	r4, [r0, #0]
     bf0:	3001      	adds	r0, #1
			 bitMask = 0x80;
     bf2:	2380      	movs	r3, #128	; 0x80
		 *set = pinMask;
     bf4:	618a      	str	r2, [r1, #24]
		 asm("nop; nop; nop; nop; nop; nop; nop; nop;");
     bf6:	46c0      	nop			; (mov r8, r8)
     bf8:	46c0      	nop			; (mov r8, r8)
     bfa:	46c0      	nop			; (mov r8, r8)
     bfc:	46c0      	nop			; (mov r8, r8)
     bfe:	46c0      	nop			; (mov r8, r8)
     c00:	46c0      	nop			; (mov r8, r8)
     c02:	46c0      	nop			; (mov r8, r8)
     c04:	46c0      	nop			; (mov r8, r8)
		 if(p & bitMask) {
     c06:	4223      	tst	r3, r4
     c08:	d0d9      	beq.n	bbe <_ZN7ws2812b12ws2812_writeEv+0x36>
			 asm("nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;");
     c0a:	46c0      	nop			; (mov r8, r8)
     c0c:	46c0      	nop			; (mov r8, r8)
     c0e:	46c0      	nop			; (mov r8, r8)
     c10:	46c0      	nop			; (mov r8, r8)
     c12:	46c0      	nop			; (mov r8, r8)
     c14:	46c0      	nop			; (mov r8, r8)
     c16:	46c0      	nop			; (mov r8, r8)
     c18:	46c0      	nop			; (mov r8, r8)
     c1a:	46c0      	nop			; (mov r8, r8)
     c1c:	46c0      	nop			; (mov r8, r8)
     c1e:	46c0      	nop			; (mov r8, r8)
     c20:	46c0      	nop			; (mov r8, r8)
     c22:	46c0      	nop			; (mov r8, r8)
     c24:	46c0      	nop			; (mov r8, r8)
     c26:	46c0      	nop			; (mov r8, r8)
     c28:	46c0      	nop			; (mov r8, r8)
     c2a:	46c0      	nop			; (mov r8, r8)
     c2c:	46c0      	nop			; (mov r8, r8)
     c2e:	46c0      	nop			; (mov r8, r8)
     c30:	46c0      	nop			; (mov r8, r8)
			 *clr = pinMask;
     c32:	614a      	str	r2, [r1, #20]
		 if(bitMask >>= 1) {
     c34:	085b      	lsrs	r3, r3, #1
     c36:	d0d8      	beq.n	bea <_ZN7ws2812b12ws2812_writeEv+0x62>
			 asm("nop; nop; nop; nop;");
     c38:	46c0      	nop			; (mov r8, r8)
     c3a:	46c0      	nop			; (mov r8, r8)
     c3c:	46c0      	nop			; (mov r8, r8)
     c3e:	46c0      	nop			; (mov r8, r8)
     c40:	e7d8      	b.n	bf4 <_ZN7ws2812b12ws2812_writeEv+0x6c>
		 }
	}
	//delay_cycles(2100); //this is a horrible way to do it. will change in the future
     c42:	bd30      	pop	{r4, r5, pc}
     c44:	41004400 	.word	0x41004400

00000c48 <_ZN7ws2812b5writeEv>:
void ws2812b::write(){
     c48:	b510      	push	{r4, lr}
	ws2812_write();
     c4a:	4b01      	ldr	r3, [pc, #4]	; (c50 <_ZN7ws2812b5writeEv+0x8>)
     c4c:	4798      	blx	r3
}
     c4e:	bd10      	pop	{r4, pc}
     c50:	00000b89 	.word	0x00000b89

00000c54 <WDT_Handler>:
     c54:	b510      	push	{r4, lr}
     c56:	2201      	movs	r2, #1
     c58:	4b03      	ldr	r3, [pc, #12]	; (c68 <WDT_Handler+0x14>)
     c5a:	719a      	strb	r2, [r3, #6]
     c5c:	4b03      	ldr	r3, [pc, #12]	; (c6c <WDT_Handler+0x18>)
     c5e:	681b      	ldr	r3, [r3, #0]
     c60:	2b00      	cmp	r3, #0
     c62:	d000      	beq.n	c66 <WDT_Handler+0x12>
     c64:	4798      	blx	r3
     c66:	bd10      	pop	{r4, pc}
     c68:	40001000 	.word	0x40001000
     c6c:	200009b4 	.word	0x200009b4

00000c70 <_tc_interrupt_handler>:
     c70:	b570      	push	{r4, r5, r6, lr}
     c72:	0080      	lsls	r0, r0, #2
     c74:	4b16      	ldr	r3, [pc, #88]	; (cd0 <_tc_interrupt_handler+0x60>)
     c76:	58c4      	ldr	r4, [r0, r3]
     c78:	6823      	ldr	r3, [r4, #0]
     c7a:	7b9d      	ldrb	r5, [r3, #14]
     c7c:	7e22      	ldrb	r2, [r4, #24]
     c7e:	7e63      	ldrb	r3, [r4, #25]
     c80:	4013      	ands	r3, r2
     c82:	401d      	ands	r5, r3
     c84:	07eb      	lsls	r3, r5, #31
     c86:	d406      	bmi.n	c96 <_tc_interrupt_handler+0x26>
     c88:	07ab      	lsls	r3, r5, #30
     c8a:	d40b      	bmi.n	ca4 <_tc_interrupt_handler+0x34>
     c8c:	06eb      	lsls	r3, r5, #27
     c8e:	d410      	bmi.n	cb2 <_tc_interrupt_handler+0x42>
     c90:	06ab      	lsls	r3, r5, #26
     c92:	d415      	bmi.n	cc0 <_tc_interrupt_handler+0x50>
     c94:	bd70      	pop	{r4, r5, r6, pc}
     c96:	0020      	movs	r0, r4
     c98:	68a3      	ldr	r3, [r4, #8]
     c9a:	4798      	blx	r3
     c9c:	2301      	movs	r3, #1
     c9e:	6822      	ldr	r2, [r4, #0]
     ca0:	7393      	strb	r3, [r2, #14]
     ca2:	e7f1      	b.n	c88 <_tc_interrupt_handler+0x18>
     ca4:	0020      	movs	r0, r4
     ca6:	68e3      	ldr	r3, [r4, #12]
     ca8:	4798      	blx	r3
     caa:	2302      	movs	r3, #2
     cac:	6822      	ldr	r2, [r4, #0]
     cae:	7393      	strb	r3, [r2, #14]
     cb0:	e7ec      	b.n	c8c <_tc_interrupt_handler+0x1c>
     cb2:	0020      	movs	r0, r4
     cb4:	6923      	ldr	r3, [r4, #16]
     cb6:	4798      	blx	r3
     cb8:	2310      	movs	r3, #16
     cba:	6822      	ldr	r2, [r4, #0]
     cbc:	7393      	strb	r3, [r2, #14]
     cbe:	e7e7      	b.n	c90 <_tc_interrupt_handler+0x20>
     cc0:	0020      	movs	r0, r4
     cc2:	6963      	ldr	r3, [r4, #20]
     cc4:	4798      	blx	r3
     cc6:	6823      	ldr	r3, [r4, #0]
     cc8:	2220      	movs	r2, #32
     cca:	739a      	strb	r2, [r3, #14]
     ccc:	e7e2      	b.n	c94 <_tc_interrupt_handler+0x24>
     cce:	46c0      	nop			; (mov r8, r8)
     cd0:	200009b8 	.word	0x200009b8

00000cd4 <TC1_Handler>:
     cd4:	b510      	push	{r4, lr}
     cd6:	2000      	movs	r0, #0
     cd8:	4b01      	ldr	r3, [pc, #4]	; (ce0 <TC1_Handler+0xc>)
     cda:	4798      	blx	r3
     cdc:	bd10      	pop	{r4, pc}
     cde:	46c0      	nop			; (mov r8, r8)
     ce0:	00000c71 	.word	0x00000c71

00000ce4 <TC2_Handler>:
     ce4:	b510      	push	{r4, lr}
     ce6:	2001      	movs	r0, #1
     ce8:	4b01      	ldr	r3, [pc, #4]	; (cf0 <TC2_Handler+0xc>)
     cea:	4798      	blx	r3
     cec:	bd10      	pop	{r4, pc}
     cee:	46c0      	nop			; (mov r8, r8)
     cf0:	00000c71 	.word	0x00000c71

00000cf4 <sercom_set_gclk_generator>:
     cf4:	b510      	push	{r4, lr}
     cf6:	b082      	sub	sp, #8
     cf8:	0004      	movs	r4, r0
     cfa:	4b0e      	ldr	r3, [pc, #56]	; (d34 <sercom_set_gclk_generator+0x40>)
     cfc:	781b      	ldrb	r3, [r3, #0]
     cfe:	2b00      	cmp	r3, #0
     d00:	d007      	beq.n	d12 <sercom_set_gclk_generator+0x1e>
     d02:	2900      	cmp	r1, #0
     d04:	d105      	bne.n	d12 <sercom_set_gclk_generator+0x1e>
     d06:	4b0b      	ldr	r3, [pc, #44]	; (d34 <sercom_set_gclk_generator+0x40>)
     d08:	785b      	ldrb	r3, [r3, #1]
     d0a:	4283      	cmp	r3, r0
     d0c:	d010      	beq.n	d30 <sercom_set_gclk_generator+0x3c>
     d0e:	201d      	movs	r0, #29
     d10:	e00c      	b.n	d2c <sercom_set_gclk_generator+0x38>
     d12:	a901      	add	r1, sp, #4
     d14:	700c      	strb	r4, [r1, #0]
     d16:	200d      	movs	r0, #13
     d18:	4b07      	ldr	r3, [pc, #28]	; (d38 <sercom_set_gclk_generator+0x44>)
     d1a:	4798      	blx	r3
     d1c:	200d      	movs	r0, #13
     d1e:	4b07      	ldr	r3, [pc, #28]	; (d3c <sercom_set_gclk_generator+0x48>)
     d20:	4798      	blx	r3
     d22:	4b04      	ldr	r3, [pc, #16]	; (d34 <sercom_set_gclk_generator+0x40>)
     d24:	705c      	strb	r4, [r3, #1]
     d26:	2201      	movs	r2, #1
     d28:	701a      	strb	r2, [r3, #0]
     d2a:	2000      	movs	r0, #0
     d2c:	b002      	add	sp, #8
     d2e:	bd10      	pop	{r4, pc}
     d30:	2000      	movs	r0, #0
     d32:	e7fb      	b.n	d2c <sercom_set_gclk_generator+0x38>
     d34:	20000910 	.word	0x20000910
     d38:	000015b1 	.word	0x000015b1
     d3c:	00001525 	.word	0x00001525

00000d40 <_sercom_get_default_pad>:
     d40:	4b15      	ldr	r3, [pc, #84]	; (d98 <_sercom_get_default_pad+0x58>)
     d42:	4298      	cmp	r0, r3
     d44:	d004      	beq.n	d50 <_sercom_get_default_pad+0x10>
     d46:	4b15      	ldr	r3, [pc, #84]	; (d9c <_sercom_get_default_pad+0x5c>)
     d48:	4298      	cmp	r0, r3
     d4a:	d011      	beq.n	d70 <_sercom_get_default_pad+0x30>
     d4c:	2000      	movs	r0, #0
     d4e:	4770      	bx	lr
     d50:	2901      	cmp	r1, #1
     d52:	d007      	beq.n	d64 <_sercom_get_default_pad+0x24>
     d54:	2900      	cmp	r1, #0
     d56:	d01b      	beq.n	d90 <_sercom_get_default_pad+0x50>
     d58:	2902      	cmp	r1, #2
     d5a:	d005      	beq.n	d68 <_sercom_get_default_pad+0x28>
     d5c:	2903      	cmp	r1, #3
     d5e:	d005      	beq.n	d6c <_sercom_get_default_pad+0x2c>
     d60:	2000      	movs	r0, #0
     d62:	e7f4      	b.n	d4e <_sercom_get_default_pad+0xe>
     d64:	480e      	ldr	r0, [pc, #56]	; (da0 <_sercom_get_default_pad+0x60>)
     d66:	e7f2      	b.n	d4e <_sercom_get_default_pad+0xe>
     d68:	480e      	ldr	r0, [pc, #56]	; (da4 <_sercom_get_default_pad+0x64>)
     d6a:	e7f0      	b.n	d4e <_sercom_get_default_pad+0xe>
     d6c:	480e      	ldr	r0, [pc, #56]	; (da8 <_sercom_get_default_pad+0x68>)
     d6e:	e7ee      	b.n	d4e <_sercom_get_default_pad+0xe>
     d70:	2901      	cmp	r1, #1
     d72:	d007      	beq.n	d84 <_sercom_get_default_pad+0x44>
     d74:	2900      	cmp	r1, #0
     d76:	d00d      	beq.n	d94 <_sercom_get_default_pad+0x54>
     d78:	2902      	cmp	r1, #2
     d7a:	d005      	beq.n	d88 <_sercom_get_default_pad+0x48>
     d7c:	2903      	cmp	r1, #3
     d7e:	d005      	beq.n	d8c <_sercom_get_default_pad+0x4c>
     d80:	2000      	movs	r0, #0
     d82:	e7e4      	b.n	d4e <_sercom_get_default_pad+0xe>
     d84:	4809      	ldr	r0, [pc, #36]	; (dac <_sercom_get_default_pad+0x6c>)
     d86:	e7e2      	b.n	d4e <_sercom_get_default_pad+0xe>
     d88:	4809      	ldr	r0, [pc, #36]	; (db0 <_sercom_get_default_pad+0x70>)
     d8a:	e7e0      	b.n	d4e <_sercom_get_default_pad+0xe>
     d8c:	4809      	ldr	r0, [pc, #36]	; (db4 <_sercom_get_default_pad+0x74>)
     d8e:	e7de      	b.n	d4e <_sercom_get_default_pad+0xe>
     d90:	4809      	ldr	r0, [pc, #36]	; (db8 <_sercom_get_default_pad+0x78>)
     d92:	e7dc      	b.n	d4e <_sercom_get_default_pad+0xe>
     d94:	4809      	ldr	r0, [pc, #36]	; (dbc <_sercom_get_default_pad+0x7c>)
     d96:	e7da      	b.n	d4e <_sercom_get_default_pad+0xe>
     d98:	42000800 	.word	0x42000800
     d9c:	42000c00 	.word	0x42000c00
     da0:	00050003 	.word	0x00050003
     da4:	00080003 	.word	0x00080003
     da8:	00090003 	.word	0x00090003
     dac:	001f0002 	.word	0x001f0002
     db0:	00180002 	.word	0x00180002
     db4:	00190002 	.word	0x00190002
     db8:	00040003 	.word	0x00040003
     dbc:	001e0002 	.word	0x001e0002

00000dc0 <_sercom_get_sercom_inst_index>:
     dc0:	4b06      	ldr	r3, [pc, #24]	; (ddc <_sercom_get_sercom_inst_index+0x1c>)
     dc2:	4298      	cmp	r0, r3
     dc4:	d008      	beq.n	dd8 <_sercom_get_sercom_inst_index+0x18>
     dc6:	4a06      	ldr	r2, [pc, #24]	; (de0 <_sercom_get_sercom_inst_index+0x20>)
     dc8:	2300      	movs	r3, #0
     dca:	4290      	cmp	r0, r2
     dcc:	d001      	beq.n	dd2 <_sercom_get_sercom_inst_index+0x12>
     dce:	0018      	movs	r0, r3
     dd0:	4770      	bx	lr
     dd2:	3301      	adds	r3, #1
     dd4:	b2db      	uxtb	r3, r3
     dd6:	e7fa      	b.n	dce <_sercom_get_sercom_inst_index+0xe>
     dd8:	2300      	movs	r3, #0
     dda:	e7fb      	b.n	dd4 <_sercom_get_sercom_inst_index+0x14>
     ddc:	42000800 	.word	0x42000800
     de0:	42000c00 	.word	0x42000c00

00000de4 <_sercom_default_handler>:
     de4:	4770      	bx	lr
	...

00000de8 <_sercom_set_handler>:
     de8:	b530      	push	{r4, r5, lr}
     dea:	4b09      	ldr	r3, [pc, #36]	; (e10 <_sercom_set_handler+0x28>)
     dec:	781b      	ldrb	r3, [r3, #0]
     dee:	2b00      	cmp	r3, #0
     df0:	d10a      	bne.n	e08 <_sercom_set_handler+0x20>
     df2:	4c08      	ldr	r4, [pc, #32]	; (e14 <_sercom_set_handler+0x2c>)
     df4:	4d08      	ldr	r5, [pc, #32]	; (e18 <_sercom_set_handler+0x30>)
     df6:	6025      	str	r5, [r4, #0]
     df8:	4b08      	ldr	r3, [pc, #32]	; (e1c <_sercom_set_handler+0x34>)
     dfa:	2200      	movs	r2, #0
     dfc:	601a      	str	r2, [r3, #0]
     dfe:	6065      	str	r5, [r4, #4]
     e00:	605a      	str	r2, [r3, #4]
     e02:	3201      	adds	r2, #1
     e04:	4b02      	ldr	r3, [pc, #8]	; (e10 <_sercom_set_handler+0x28>)
     e06:	701a      	strb	r2, [r3, #0]
     e08:	0080      	lsls	r0, r0, #2
     e0a:	4b02      	ldr	r3, [pc, #8]	; (e14 <_sercom_set_handler+0x2c>)
     e0c:	50c1      	str	r1, [r0, r3]
     e0e:	bd30      	pop	{r4, r5, pc}
     e10:	20000912 	.word	0x20000912
     e14:	20000914 	.word	0x20000914
     e18:	00000de5 	.word	0x00000de5
     e1c:	200009c0 	.word	0x200009c0

00000e20 <_sercom_get_interrupt_vector>:
     e20:	b510      	push	{r4, lr}
     e22:	b082      	sub	sp, #8
     e24:	ac01      	add	r4, sp, #4
     e26:	2309      	movs	r3, #9
     e28:	7023      	strb	r3, [r4, #0]
     e2a:	3301      	adds	r3, #1
     e2c:	7063      	strb	r3, [r4, #1]
     e2e:	4b02      	ldr	r3, [pc, #8]	; (e38 <_sercom_get_interrupt_vector+0x18>)
     e30:	4798      	blx	r3
     e32:	5620      	ldrsb	r0, [r4, r0]
     e34:	b002      	add	sp, #8
     e36:	bd10      	pop	{r4, pc}
     e38:	00000dc1 	.word	0x00000dc1

00000e3c <SERCOM0_Handler>:
     e3c:	b510      	push	{r4, lr}
     e3e:	4b02      	ldr	r3, [pc, #8]	; (e48 <SERCOM0_Handler+0xc>)
     e40:	681b      	ldr	r3, [r3, #0]
     e42:	2000      	movs	r0, #0
     e44:	4798      	blx	r3
     e46:	bd10      	pop	{r4, pc}
     e48:	20000914 	.word	0x20000914

00000e4c <SERCOM1_Handler>:
     e4c:	b510      	push	{r4, lr}
     e4e:	4b02      	ldr	r3, [pc, #8]	; (e58 <SERCOM1_Handler+0xc>)
     e50:	685b      	ldr	r3, [r3, #4]
     e52:	2001      	movs	r0, #1
     e54:	4798      	blx	r3
     e56:	bd10      	pop	{r4, pc}
     e58:	20000914 	.word	0x20000914

00000e5c <EIC_Handler>:
     e5c:	b570      	push	{r4, r5, r6, lr}
     e5e:	2200      	movs	r2, #0
     e60:	4b10      	ldr	r3, [pc, #64]	; (ea4 <EIC_Handler+0x48>)
     e62:	701a      	strb	r2, [r3, #0]
     e64:	2300      	movs	r3, #0
     e66:	4910      	ldr	r1, [pc, #64]	; (ea8 <EIC_Handler+0x4c>)
     e68:	251f      	movs	r5, #31
     e6a:	4e10      	ldr	r6, [pc, #64]	; (eac <EIC_Handler+0x50>)
     e6c:	4c0d      	ldr	r4, [pc, #52]	; (ea4 <EIC_Handler+0x48>)
     e6e:	e00a      	b.n	e86 <EIC_Handler+0x2a>
     e70:	490d      	ldr	r1, [pc, #52]	; (ea8 <EIC_Handler+0x4c>)
     e72:	e008      	b.n	e86 <EIC_Handler+0x2a>
     e74:	7823      	ldrb	r3, [r4, #0]
     e76:	3301      	adds	r3, #1
     e78:	b2db      	uxtb	r3, r3
     e7a:	7023      	strb	r3, [r4, #0]
     e7c:	2b0f      	cmp	r3, #15
     e7e:	d810      	bhi.n	ea2 <EIC_Handler+0x46>
     e80:	2100      	movs	r1, #0
     e82:	2b1f      	cmp	r3, #31
     e84:	d9f4      	bls.n	e70 <EIC_Handler+0x14>
     e86:	0028      	movs	r0, r5
     e88:	4018      	ands	r0, r3
     e8a:	2201      	movs	r2, #1
     e8c:	4082      	lsls	r2, r0
     e8e:	6908      	ldr	r0, [r1, #16]
     e90:	4210      	tst	r0, r2
     e92:	d0ef      	beq.n	e74 <EIC_Handler+0x18>
     e94:	610a      	str	r2, [r1, #16]
     e96:	009b      	lsls	r3, r3, #2
     e98:	599b      	ldr	r3, [r3, r6]
     e9a:	2b00      	cmp	r3, #0
     e9c:	d0ea      	beq.n	e74 <EIC_Handler+0x18>
     e9e:	4798      	blx	r3
     ea0:	e7e8      	b.n	e74 <EIC_Handler+0x18>
     ea2:	bd70      	pop	{r4, r5, r6, pc}
     ea4:	200009c8 	.word	0x200009c8
     ea8:	40001800 	.word	0x40001800
     eac:	20000974 	.word	0x20000974

00000eb0 <delay_init>:
     eb0:	b570      	push	{r4, r5, r6, lr}
     eb2:	2000      	movs	r0, #0
     eb4:	4b08      	ldr	r3, [pc, #32]	; (ed8 <delay_init+0x28>)
     eb6:	4798      	blx	r3
     eb8:	0005      	movs	r5, r0
     eba:	4c08      	ldr	r4, [pc, #32]	; (edc <delay_init+0x2c>)
     ebc:	21fa      	movs	r1, #250	; 0xfa
     ebe:	0089      	lsls	r1, r1, #2
     ec0:	47a0      	blx	r4
     ec2:	4b07      	ldr	r3, [pc, #28]	; (ee0 <delay_init+0x30>)
     ec4:	6018      	str	r0, [r3, #0]
     ec6:	4907      	ldr	r1, [pc, #28]	; (ee4 <delay_init+0x34>)
     ec8:	0028      	movs	r0, r5
     eca:	47a0      	blx	r4
     ecc:	4b06      	ldr	r3, [pc, #24]	; (ee8 <delay_init+0x38>)
     ece:	6018      	str	r0, [r3, #0]
     ed0:	2205      	movs	r2, #5
     ed2:	4b06      	ldr	r3, [pc, #24]	; (eec <delay_init+0x3c>)
     ed4:	601a      	str	r2, [r3, #0]
     ed6:	bd70      	pop	{r4, r5, r6, pc}
     ed8:	00001499 	.word	0x00001499
     edc:	000017f1 	.word	0x000017f1
     ee0:	20000004 	.word	0x20000004
     ee4:	000f4240 	.word	0x000f4240
     ee8:	20000008 	.word	0x20000008
     eec:	e000e010 	.word	0xe000e010

00000ef0 <delay_cycles_ms>:
     ef0:	b530      	push	{r4, r5, lr}
     ef2:	4b08      	ldr	r3, [pc, #32]	; (f14 <delay_cycles_ms+0x24>)
     ef4:	681c      	ldr	r4, [r3, #0]
     ef6:	4a08      	ldr	r2, [pc, #32]	; (f18 <delay_cycles_ms+0x28>)
     ef8:	2500      	movs	r5, #0
     efa:	2180      	movs	r1, #128	; 0x80
     efc:	0249      	lsls	r1, r1, #9
     efe:	3801      	subs	r0, #1
     f00:	d307      	bcc.n	f12 <delay_cycles_ms+0x22>
     f02:	2c00      	cmp	r4, #0
     f04:	d0fb      	beq.n	efe <delay_cycles_ms+0xe>
     f06:	6054      	str	r4, [r2, #4]
     f08:	6095      	str	r5, [r2, #8]
     f0a:	6813      	ldr	r3, [r2, #0]
     f0c:	420b      	tst	r3, r1
     f0e:	d0fc      	beq.n	f0a <delay_cycles_ms+0x1a>
     f10:	e7f5      	b.n	efe <delay_cycles_ms+0xe>
     f12:	bd30      	pop	{r4, r5, pc}
     f14:	20000004 	.word	0x20000004
     f18:	e000e010 	.word	0xe000e010

00000f1c <port_pin_set_config>:
     f1c:	b500      	push	{lr}
     f1e:	b083      	sub	sp, #12
     f20:	ab01      	add	r3, sp, #4
     f22:	2280      	movs	r2, #128	; 0x80
     f24:	701a      	strb	r2, [r3, #0]
     f26:	780a      	ldrb	r2, [r1, #0]
     f28:	705a      	strb	r2, [r3, #1]
     f2a:	784a      	ldrb	r2, [r1, #1]
     f2c:	709a      	strb	r2, [r3, #2]
     f2e:	788a      	ldrb	r2, [r1, #2]
     f30:	70da      	strb	r2, [r3, #3]
     f32:	0019      	movs	r1, r3
     f34:	4b01      	ldr	r3, [pc, #4]	; (f3c <port_pin_set_config+0x20>)
     f36:	4798      	blx	r3
     f38:	b003      	add	sp, #12
     f3a:	bd00      	pop	{pc}
     f3c:	000016a9 	.word	0x000016a9

00000f40 <cpu_irq_enter_critical>:
     f40:	4b0c      	ldr	r3, [pc, #48]	; (f74 <cpu_irq_enter_critical+0x34>)
     f42:	681b      	ldr	r3, [r3, #0]
     f44:	2b00      	cmp	r3, #0
     f46:	d106      	bne.n	f56 <cpu_irq_enter_critical+0x16>
     f48:	f3ef 8310 	mrs	r3, PRIMASK
     f4c:	2b00      	cmp	r3, #0
     f4e:	d007      	beq.n	f60 <cpu_irq_enter_critical+0x20>
     f50:	2200      	movs	r2, #0
     f52:	4b09      	ldr	r3, [pc, #36]	; (f78 <cpu_irq_enter_critical+0x38>)
     f54:	701a      	strb	r2, [r3, #0]
     f56:	4a07      	ldr	r2, [pc, #28]	; (f74 <cpu_irq_enter_critical+0x34>)
     f58:	6813      	ldr	r3, [r2, #0]
     f5a:	3301      	adds	r3, #1
     f5c:	6013      	str	r3, [r2, #0]
     f5e:	4770      	bx	lr
     f60:	b672      	cpsid	i
     f62:	f3bf 8f5f 	dmb	sy
     f66:	2200      	movs	r2, #0
     f68:	4b04      	ldr	r3, [pc, #16]	; (f7c <cpu_irq_enter_critical+0x3c>)
     f6a:	701a      	strb	r2, [r3, #0]
     f6c:	3201      	adds	r2, #1
     f6e:	4b02      	ldr	r3, [pc, #8]	; (f78 <cpu_irq_enter_critical+0x38>)
     f70:	701a      	strb	r2, [r3, #0]
     f72:	e7f0      	b.n	f56 <cpu_irq_enter_critical+0x16>
     f74:	2000091c 	.word	0x2000091c
     f78:	20000920 	.word	0x20000920
     f7c:	2000000c 	.word	0x2000000c

00000f80 <cpu_irq_leave_critical>:
     f80:	4b08      	ldr	r3, [pc, #32]	; (fa4 <cpu_irq_leave_critical+0x24>)
     f82:	681a      	ldr	r2, [r3, #0]
     f84:	3a01      	subs	r2, #1
     f86:	601a      	str	r2, [r3, #0]
     f88:	681b      	ldr	r3, [r3, #0]
     f8a:	2b00      	cmp	r3, #0
     f8c:	d109      	bne.n	fa2 <cpu_irq_leave_critical+0x22>
     f8e:	4b06      	ldr	r3, [pc, #24]	; (fa8 <cpu_irq_leave_critical+0x28>)
     f90:	781b      	ldrb	r3, [r3, #0]
     f92:	2b00      	cmp	r3, #0
     f94:	d005      	beq.n	fa2 <cpu_irq_leave_critical+0x22>
     f96:	2201      	movs	r2, #1
     f98:	4b04      	ldr	r3, [pc, #16]	; (fac <cpu_irq_leave_critical+0x2c>)
     f9a:	701a      	strb	r2, [r3, #0]
     f9c:	f3bf 8f5f 	dmb	sy
     fa0:	b662      	cpsie	i
     fa2:	4770      	bx	lr
     fa4:	2000091c 	.word	0x2000091c
     fa8:	20000920 	.word	0x20000920
     fac:	2000000c 	.word	0x2000000c

00000fb0 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
     fb0:	b510      	push	{r4, lr}
	switch (clock_source) {
     fb2:	2808      	cmp	r0, #8
     fb4:	d803      	bhi.n	fbe <system_clock_source_get_hz+0xe>
     fb6:	0080      	lsls	r0, r0, #2
     fb8:	4b1c      	ldr	r3, [pc, #112]	; (102c <system_clock_source_get_hz+0x7c>)
     fba:	581b      	ldr	r3, [r3, r0]
     fbc:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
     fbe:	2000      	movs	r0, #0
     fc0:	e032      	b.n	1028 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc.frequency;
     fc2:	4b1b      	ldr	r3, [pc, #108]	; (1030 <system_clock_source_get_hz+0x80>)
     fc4:	6918      	ldr	r0, [r3, #16]
     fc6:	e02f      	b.n	1028 <system_clock_source_get_hz+0x78>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
     fc8:	4b1a      	ldr	r3, [pc, #104]	; (1034 <system_clock_source_get_hz+0x84>)
     fca:	6a1b      	ldr	r3, [r3, #32]
     fcc:	059b      	lsls	r3, r3, #22
     fce:	0f9b      	lsrs	r3, r3, #30
     fd0:	4819      	ldr	r0, [pc, #100]	; (1038 <system_clock_source_get_hz+0x88>)
     fd2:	40d8      	lsrs	r0, r3
     fd4:	e028      	b.n	1028 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc32k.frequency;
     fd6:	4b16      	ldr	r3, [pc, #88]	; (1030 <system_clock_source_get_hz+0x80>)
     fd8:	6958      	ldr	r0, [r3, #20]
     fda:	e025      	b.n	1028 <system_clock_source_get_hz+0x78>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     fdc:	4b14      	ldr	r3, [pc, #80]	; (1030 <system_clock_source_get_hz+0x80>)
     fde:	681b      	ldr	r3, [r3, #0]
			return 0;
     fe0:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
     fe2:	079b      	lsls	r3, r3, #30
     fe4:	d520      	bpl.n	1028 <system_clock_source_get_hz+0x78>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     fe6:	4913      	ldr	r1, [pc, #76]	; (1034 <system_clock_source_get_hz+0x84>)
     fe8:	2210      	movs	r2, #16
     fea:	68cb      	ldr	r3, [r1, #12]
     fec:	421a      	tst	r2, r3
     fee:	d0fc      	beq.n	fea <system_clock_source_get_hz+0x3a>
		switch(_system_clock_inst.dfll.control &
     ff0:	4b0f      	ldr	r3, [pc, #60]	; (1030 <system_clock_source_get_hz+0x80>)
     ff2:	681a      	ldr	r2, [r3, #0]
     ff4:	2324      	movs	r3, #36	; 0x24
     ff6:	4013      	ands	r3, r2
     ff8:	2b04      	cmp	r3, #4
     ffa:	d001      	beq.n	1000 <system_clock_source_get_hz+0x50>
			return 48000000UL;
     ffc:	480f      	ldr	r0, [pc, #60]	; (103c <system_clock_source_get_hz+0x8c>)
     ffe:	e013      	b.n	1028 <system_clock_source_get_hz+0x78>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1000:	2000      	movs	r0, #0
    1002:	4b0f      	ldr	r3, [pc, #60]	; (1040 <system_clock_source_get_hz+0x90>)
    1004:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
    1006:	4b0a      	ldr	r3, [pc, #40]	; (1030 <system_clock_source_get_hz+0x80>)
    1008:	689b      	ldr	r3, [r3, #8]
    100a:	041b      	lsls	r3, r3, #16
    100c:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    100e:	4358      	muls	r0, r3
    1010:	e00a      	b.n	1028 <system_clock_source_get_hz+0x78>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1012:	2350      	movs	r3, #80	; 0x50
    1014:	4a07      	ldr	r2, [pc, #28]	; (1034 <system_clock_source_get_hz+0x84>)
    1016:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
    1018:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    101a:	075b      	lsls	r3, r3, #29
    101c:	d504      	bpl.n	1028 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.dpll.frequency;
    101e:	4b04      	ldr	r3, [pc, #16]	; (1030 <system_clock_source_get_hz+0x80>)
    1020:	68d8      	ldr	r0, [r3, #12]
    1022:	e001      	b.n	1028 <system_clock_source_get_hz+0x78>
		return 32768UL;
    1024:	2080      	movs	r0, #128	; 0x80
    1026:	0200      	lsls	r0, r0, #8
	}
}
    1028:	bd10      	pop	{r4, pc}
    102a:	46c0      	nop			; (mov r8, r8)
    102c:	0000253c 	.word	0x0000253c
    1030:	20000924 	.word	0x20000924
    1034:	40000800 	.word	0x40000800
    1038:	007a1200 	.word	0x007a1200
    103c:	02dc6c00 	.word	0x02dc6c00
    1040:	000015cd 	.word	0x000015cd

00001044 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
    1044:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
    1046:	490c      	ldr	r1, [pc, #48]	; (1078 <system_clock_source_osc8m_set_config+0x34>)
    1048:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
    104a:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
    104c:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
    104e:	7840      	ldrb	r0, [r0, #1]
    1050:	2201      	movs	r2, #1
    1052:	4010      	ands	r0, r2
    1054:	0180      	lsls	r0, r0, #6
    1056:	2640      	movs	r6, #64	; 0x40
    1058:	43b3      	bics	r3, r6
    105a:	4303      	orrs	r3, r0
    105c:	402a      	ands	r2, r5
    105e:	01d2      	lsls	r2, r2, #7
    1060:	2080      	movs	r0, #128	; 0x80
    1062:	4383      	bics	r3, r0
    1064:	4313      	orrs	r3, r2
    1066:	2203      	movs	r2, #3
    1068:	4022      	ands	r2, r4
    106a:	0212      	lsls	r2, r2, #8
    106c:	4803      	ldr	r0, [pc, #12]	; (107c <system_clock_source_osc8m_set_config+0x38>)
    106e:	4003      	ands	r3, r0
    1070:	4313      	orrs	r3, r2
    1072:	620b      	str	r3, [r1, #32]
}
    1074:	bd70      	pop	{r4, r5, r6, pc}
    1076:	46c0      	nop			; (mov r8, r8)
    1078:	40000800 	.word	0x40000800
    107c:	fffffcff 	.word	0xfffffcff

00001080 <system_clock_source_osc32k_set_config>:
 *
 * \param[in] config  OSC32K configuration structure containing the new config
 */
void system_clock_source_osc32k_set_config(
		struct system_clock_source_osc32k_config *const config)
{
    1080:	b5f0      	push	{r4, r5, r6, r7, lr}
    1082:	46ce      	mov	lr, r9
    1084:	4647      	mov	r7, r8
    1086:	b580      	push	{r7, lr}
	SYSCTRL_OSC32K_Type temp = SYSCTRL->OSC32K;
    1088:	4b19      	ldr	r3, [pc, #100]	; (10f0 <system_clock_source_osc32k_set_config+0x70>)
    108a:	4699      	mov	r9, r3
    108c:	699b      	ldr	r3, [r3, #24]

	/* Update settings via a temporary struct to reduce register access */
	temp.bit.EN1K     = config->enable_1khz_output;
    108e:	7841      	ldrb	r1, [r0, #1]
    1090:	468c      	mov	ip, r1
	temp.bit.EN32K    = config->enable_32khz_output;
	temp.bit.STARTUP  = config->startup_time;
    1092:	7805      	ldrb	r5, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
    1094:	7906      	ldrb	r6, [r0, #4]
	temp.bit.RUNSTDBY = config->run_in_standby;
    1096:	78c7      	ldrb	r7, [r0, #3]
	temp.bit.WRTLOCK  = config->write_once;
    1098:	7944      	ldrb	r4, [r0, #5]

	SYSCTRL->OSC32K  = temp;
    109a:	7880      	ldrb	r0, [r0, #2]
    109c:	2101      	movs	r1, #1
    109e:	4008      	ands	r0, r1
    10a0:	0080      	lsls	r0, r0, #2
    10a2:	2204      	movs	r2, #4
    10a4:	4393      	bics	r3, r2
    10a6:	4303      	orrs	r3, r0
    10a8:	4660      	mov	r0, ip
    10aa:	4008      	ands	r0, r1
    10ac:	00c0      	lsls	r0, r0, #3
    10ae:	3204      	adds	r2, #4
    10b0:	4393      	bics	r3, r2
    10b2:	4303      	orrs	r3, r0
    10b4:	0038      	movs	r0, r7
    10b6:	4008      	ands	r0, r1
    10b8:	0180      	lsls	r0, r0, #6
    10ba:	2740      	movs	r7, #64	; 0x40
    10bc:	43bb      	bics	r3, r7
    10be:	4303      	orrs	r3, r0
    10c0:	0030      	movs	r0, r6
    10c2:	4008      	ands	r0, r1
    10c4:	01c0      	lsls	r0, r0, #7
    10c6:	2680      	movs	r6, #128	; 0x80
    10c8:	43b3      	bics	r3, r6
    10ca:	4303      	orrs	r3, r0
    10cc:	2007      	movs	r0, #7
    10ce:	4005      	ands	r5, r0
    10d0:	022d      	lsls	r5, r5, #8
    10d2:	4808      	ldr	r0, [pc, #32]	; (10f4 <system_clock_source_osc32k_set_config+0x74>)
    10d4:	4003      	ands	r3, r0
    10d6:	432b      	orrs	r3, r5
    10d8:	4021      	ands	r1, r4
    10da:	0309      	lsls	r1, r1, #12
    10dc:	4806      	ldr	r0, [pc, #24]	; (10f8 <system_clock_source_osc32k_set_config+0x78>)
    10de:	4003      	ands	r3, r0
    10e0:	430b      	orrs	r3, r1
    10e2:	464a      	mov	r2, r9
    10e4:	6193      	str	r3, [r2, #24]
}
    10e6:	bc0c      	pop	{r2, r3}
    10e8:	4690      	mov	r8, r2
    10ea:	4699      	mov	r9, r3
    10ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    10ee:	46c0      	nop			; (mov r8, r8)
    10f0:	40000800 	.word	0x40000800
    10f4:	fffff8ff 	.word	0xfffff8ff
    10f8:	ffffefff 	.word	0xffffefff

000010fc <system_clock_source_dfll_set_config>:
 *
 * \param[in] config  DFLL configuration structure containing the new config
 */
void system_clock_source_dfll_set_config(
		struct system_clock_source_dfll_config *const config)
{
    10fc:	b510      	push	{r4, lr}
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
    10fe:	7a03      	ldrb	r3, [r0, #8]
    1100:	069b      	lsls	r3, r3, #26
    1102:	0c1b      	lsrs	r3, r3, #16
			SYSCTRL_DFLLVAL_FINE(config->fine_value);
    1104:	8942      	ldrh	r2, [r0, #10]
    1106:	0592      	lsls	r2, r2, #22
    1108:	0d92      	lsrs	r2, r2, #22
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
    110a:	4313      	orrs	r3, r2
	_system_clock_inst.dfll.val =
    110c:	4918      	ldr	r1, [pc, #96]	; (1170 <system_clock_source_dfll_set_config+0x74>)
    110e:	604b      	str	r3, [r1, #4]

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
    1110:	7983      	ldrb	r3, [r0, #6]
    1112:	79c2      	ldrb	r2, [r0, #7]
    1114:	4313      	orrs	r3, r2
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
    1116:	8842      	ldrh	r2, [r0, #2]
    1118:	8884      	ldrh	r4, [r0, #4]
    111a:	4322      	orrs	r2, r4
    111c:	4313      	orrs	r3, r2
			(uint32_t)config->chill_cycle     |
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);
    111e:	7842      	ldrb	r2, [r0, #1]
    1120:	01d2      	lsls	r2, r2, #7
			(uint32_t)config->chill_cycle     |
    1122:	4313      	orrs	r3, r2
	_system_clock_inst.dfll.control =
    1124:	600b      	str	r3, [r1, #0]

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
    1126:	7803      	ldrb	r3, [r0, #0]
    1128:	2b04      	cmp	r3, #4
    112a:	d011      	beq.n	1150 <system_clock_source_dfll_set_config+0x54>
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);

		/* Enable the closed loop mode */
		_system_clock_inst.dfll.control |= config->loop_mode;
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {
    112c:	2b20      	cmp	r3, #32
    112e:	d10e      	bne.n	114e <system_clock_source_dfll_set_config+0x52>

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
    1130:	7b03      	ldrb	r3, [r0, #12]
    1132:	069b      	lsls	r3, r3, #26
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
    1134:	8a02      	ldrh	r2, [r0, #16]
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
    1136:	4313      	orrs	r3, r2
    1138:	89c2      	ldrh	r2, [r0, #14]
    113a:	0412      	lsls	r2, r2, #16
    113c:	490d      	ldr	r1, [pc, #52]	; (1174 <system_clock_source_dfll_set_config+0x78>)
    113e:	400a      	ands	r2, r1
    1140:	4313      	orrs	r3, r2
		_system_clock_inst.dfll.mul =
    1142:	4a0b      	ldr	r2, [pc, #44]	; (1170 <system_clock_source_dfll_set_config+0x74>)
    1144:	6093      	str	r3, [r2, #8]

		/* Enable the USB recovery mode */
		_system_clock_inst.dfll.control |= config->loop_mode |
    1146:	6811      	ldr	r1, [r2, #0]
    1148:	4b0b      	ldr	r3, [pc, #44]	; (1178 <system_clock_source_dfll_set_config+0x7c>)
    114a:	430b      	orrs	r3, r1
    114c:	6013      	str	r3, [r2, #0]
				SYSCTRL_DFLLCTRL_MODE | SYSCTRL_DFLLCTRL_BPLCKC;
	}
}
    114e:	bd10      	pop	{r4, pc}
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
    1150:	7b03      	ldrb	r3, [r0, #12]
    1152:	069b      	lsls	r3, r3, #26
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
    1154:	8a02      	ldrh	r2, [r0, #16]
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
    1156:	4313      	orrs	r3, r2
    1158:	89c2      	ldrh	r2, [r0, #14]
    115a:	0412      	lsls	r2, r2, #16
    115c:	4905      	ldr	r1, [pc, #20]	; (1174 <system_clock_source_dfll_set_config+0x78>)
    115e:	400a      	ands	r2, r1
    1160:	4313      	orrs	r3, r2
		_system_clock_inst.dfll.mul =
    1162:	4a03      	ldr	r2, [pc, #12]	; (1170 <system_clock_source_dfll_set_config+0x74>)
    1164:	6093      	str	r3, [r2, #8]
		_system_clock_inst.dfll.control |= config->loop_mode;
    1166:	6813      	ldr	r3, [r2, #0]
    1168:	2104      	movs	r1, #4
    116a:	430b      	orrs	r3, r1
    116c:	6013      	str	r3, [r2, #0]
    116e:	e7ee      	b.n	114e <system_clock_source_dfll_set_config+0x52>
    1170:	20000924 	.word	0x20000924
    1174:	03ff0000 	.word	0x03ff0000
    1178:	00000424 	.word	0x00000424

0000117c <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
    117c:	2808      	cmp	r0, #8
    117e:	d803      	bhi.n	1188 <system_clock_source_enable+0xc>
    1180:	0080      	lsls	r0, r0, #2
    1182:	4b25      	ldr	r3, [pc, #148]	; (1218 <system_clock_source_enable+0x9c>)
    1184:	581b      	ldr	r3, [r3, r0]
    1186:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    1188:	2017      	movs	r0, #23
    118a:	e044      	b.n	1216 <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
    118c:	4a23      	ldr	r2, [pc, #140]	; (121c <system_clock_source_enable+0xa0>)
    118e:	6a13      	ldr	r3, [r2, #32]
    1190:	2102      	movs	r1, #2
    1192:	430b      	orrs	r3, r1
    1194:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
    1196:	2000      	movs	r0, #0
    1198:	e03d      	b.n	1216 <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    119a:	4a20      	ldr	r2, [pc, #128]	; (121c <system_clock_source_enable+0xa0>)
    119c:	6993      	ldr	r3, [r2, #24]
    119e:	2102      	movs	r1, #2
    11a0:	430b      	orrs	r3, r1
    11a2:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
    11a4:	2000      	movs	r0, #0
		break;
    11a6:	e036      	b.n	1216 <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
    11a8:	4a1c      	ldr	r2, [pc, #112]	; (121c <system_clock_source_enable+0xa0>)
    11aa:	8a13      	ldrh	r3, [r2, #16]
    11ac:	2102      	movs	r1, #2
    11ae:	430b      	orrs	r3, r1
    11b0:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
    11b2:	2000      	movs	r0, #0
		break;
    11b4:	e02f      	b.n	1216 <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
    11b6:	4a19      	ldr	r2, [pc, #100]	; (121c <system_clock_source_enable+0xa0>)
    11b8:	8a93      	ldrh	r3, [r2, #20]
    11ba:	2102      	movs	r1, #2
    11bc:	430b      	orrs	r3, r1
    11be:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
    11c0:	2000      	movs	r0, #0
		break;
    11c2:	e028      	b.n	1216 <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
    11c4:	4916      	ldr	r1, [pc, #88]	; (1220 <system_clock_source_enable+0xa4>)
    11c6:	680b      	ldr	r3, [r1, #0]
    11c8:	2202      	movs	r2, #2
    11ca:	4313      	orrs	r3, r2
    11cc:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
    11ce:	4b13      	ldr	r3, [pc, #76]	; (121c <system_clock_source_enable+0xa0>)
    11d0:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    11d2:	0019      	movs	r1, r3
    11d4:	320e      	adds	r2, #14
    11d6:	68cb      	ldr	r3, [r1, #12]
    11d8:	421a      	tst	r2, r3
    11da:	d0fc      	beq.n	11d6 <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
    11dc:	4a10      	ldr	r2, [pc, #64]	; (1220 <system_clock_source_enable+0xa4>)
    11de:	6891      	ldr	r1, [r2, #8]
    11e0:	4b0e      	ldr	r3, [pc, #56]	; (121c <system_clock_source_enable+0xa0>)
    11e2:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
    11e4:	6852      	ldr	r2, [r2, #4]
    11e6:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
    11e8:	2200      	movs	r2, #0
    11ea:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    11ec:	0019      	movs	r1, r3
    11ee:	3210      	adds	r2, #16
    11f0:	68cb      	ldr	r3, [r1, #12]
    11f2:	421a      	tst	r2, r3
    11f4:	d0fc      	beq.n	11f0 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
    11f6:	4b0a      	ldr	r3, [pc, #40]	; (1220 <system_clock_source_enable+0xa4>)
    11f8:	681b      	ldr	r3, [r3, #0]
    11fa:	b29b      	uxth	r3, r3
    11fc:	4a07      	ldr	r2, [pc, #28]	; (121c <system_clock_source_enable+0xa0>)
    11fe:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
    1200:	2000      	movs	r0, #0
    1202:	e008      	b.n	1216 <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
    1204:	4905      	ldr	r1, [pc, #20]	; (121c <system_clock_source_enable+0xa0>)
    1206:	2244      	movs	r2, #68	; 0x44
    1208:	5c8b      	ldrb	r3, [r1, r2]
    120a:	2002      	movs	r0, #2
    120c:	4303      	orrs	r3, r0
    120e:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
    1210:	2000      	movs	r0, #0
		break;
    1212:	e000      	b.n	1216 <system_clock_source_enable+0x9a>
		return STATUS_OK;
    1214:	2000      	movs	r0, #0
}
    1216:	4770      	bx	lr
    1218:	00002560 	.word	0x00002560
    121c:	40000800 	.word	0x40000800
    1220:	20000924 	.word	0x20000924

00001224 <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
    1224:	b5f0      	push	{r4, r5, r6, r7, lr}
    1226:	b08d      	sub	sp, #52	; 0x34
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
    1228:	22c2      	movs	r2, #194	; 0xc2
    122a:	00d2      	lsls	r2, r2, #3
    122c:	4b44      	ldr	r3, [pc, #272]	; (1340 <system_clock_init+0x11c>)
    122e:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    1230:	4944      	ldr	r1, [pc, #272]	; (1344 <system_clock_init+0x120>)
    1232:	684b      	ldr	r3, [r1, #4]
    1234:	221e      	movs	r2, #30
    1236:	4393      	bics	r3, r2
    1238:	3a1c      	subs	r2, #28
    123a:	4313      	orrs	r3, r2
    123c:	604b      	str	r3, [r1, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_2;
    123e:	ab01      	add	r3, sp, #4
    1240:	701a      	strb	r2, [r3, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1242:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
    1244:	4d40      	ldr	r5, [pc, #256]	; (1348 <system_clock_init+0x124>)
    1246:	b2e0      	uxtb	r0, r4
    1248:	a901      	add	r1, sp, #4
    124a:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    124c:	3401      	adds	r4, #1
    124e:	2c18      	cmp	r4, #24
    1250:	d1f9      	bne.n	1246 <system_clock_init+0x22>


	/* OSCK32K */
#if CONF_CLOCK_OSC32K_ENABLE == true
	SYSCTRL->OSC32K.bit.CALIB =
			(*(uint32_t *)FUSES_OSC32K_ADDR >> FUSES_OSC32K_Pos);
    1252:	4d3e      	ldr	r5, [pc, #248]	; (134c <system_clock_init+0x128>)
    1254:	682b      	ldr	r3, [r5, #0]
    1256:	04db      	lsls	r3, r3, #19
	SYSCTRL->OSC32K.bit.CALIB =
    1258:	4939      	ldr	r1, [pc, #228]	; (1340 <system_clock_init+0x11c>)
    125a:	698a      	ldr	r2, [r1, #24]
    125c:	0e5b      	lsrs	r3, r3, #25
    125e:	041b      	lsls	r3, r3, #16
    1260:	483b      	ldr	r0, [pc, #236]	; (1350 <system_clock_init+0x12c>)
    1262:	4002      	ands	r2, r0
    1264:	4313      	orrs	r3, r2
    1266:	618b      	str	r3, [r1, #24]
	config->enable_32khz_output = true;
    1268:	a80a      	add	r0, sp, #40	; 0x28
    126a:	2301      	movs	r3, #1
    126c:	7083      	strb	r3, [r0, #2]
	config->run_in_standby      = false;
    126e:	2400      	movs	r4, #0
    1270:	70c4      	strb	r4, [r0, #3]
	config->on_demand           = true;
    1272:	7103      	strb	r3, [r0, #4]
	config->write_once          = false;
    1274:	7144      	strb	r4, [r0, #5]

	struct system_clock_source_osc32k_config osc32k_conf;
	system_clock_source_osc32k_get_config_defaults(&osc32k_conf);

	osc32k_conf.startup_time        = CONF_CLOCK_OSC32K_STARTUP_TIME;
    1276:	3305      	adds	r3, #5
    1278:	7003      	strb	r3, [r0, #0]
	osc32k_conf.enable_1khz_output  = CONF_CLOCK_OSC32K_ENABLE_1KHZ_OUTPUT;
    127a:	7044      	strb	r4, [r0, #1]
	osc32k_conf.enable_32khz_output = CONF_CLOCK_OSC32K_ENABLE_32KHZ_OUTPUT;
	osc32k_conf.on_demand           = CONF_CLOCK_OSC32K_ON_DEMAND;
	osc32k_conf.run_in_standby      = CONF_CLOCK_OSC32K_RUN_IN_STANDBY;

	system_clock_source_osc32k_set_config(&osc32k_conf);
    127c:	4b35      	ldr	r3, [pc, #212]	; (1354 <system_clock_init+0x130>)
    127e:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC32K);
    1280:	2004      	movs	r0, #4
    1282:	4b35      	ldr	r3, [pc, #212]	; (1358 <system_clock_init+0x134>)
    1284:	4798      	blx	r3
	config->quick_lock      = SYSTEM_CLOCK_DFLL_QUICK_LOCK_ENABLE;
    1286:	ab05      	add	r3, sp, #20
    1288:	2200      	movs	r2, #0
    128a:	805c      	strh	r4, [r3, #2]
	config->chill_cycle     = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_ENABLE;
    128c:	809c      	strh	r4, [r3, #4]
	config->wakeup_lock     = SYSTEM_CLOCK_DFLL_WAKEUP_LOCK_KEEP;
    128e:	719a      	strb	r2, [r3, #6]
	config->stable_tracking = SYSTEM_CLOCK_DFLL_STABLE_TRACKING_TRACK_AFTER_LOCK;
    1290:	71da      	strb	r2, [r3, #7]
	config->fine_value      = 0xff / 4; /* Midpoint */
    1292:	213f      	movs	r1, #63	; 0x3f
    1294:	8159      	strh	r1, [r3, #10]
	/* DFLL Config (Open and Closed Loop) */
#if CONF_CLOCK_DFLL_ENABLE == true
	struct system_clock_source_dfll_config dfll_conf;
	system_clock_source_dfll_get_config_defaults(&dfll_conf);

	dfll_conf.loop_mode      = CONF_CLOCK_DFLL_LOOP_MODE;
    1296:	393b      	subs	r1, #59	; 0x3b
    1298:	7019      	strb	r1, [r3, #0]
	dfll_conf.on_demand      = false;
    129a:	705a      	strb	r2, [r3, #1]
	/* Using DFLL48M COARSE CAL value from NVM Software Calibration Area Mapping
	   in DFLL.COARSE helps to output a frequency close to 48 MHz.*/
#define NVM_DFLL_COARSE_POS    58 /* DFLL48M Coarse calibration value bit position.*/
#define NVM_DFLL_COARSE_SIZE   6  /* DFLL48M Coarse calibration value bit size.*/

	uint32_t coarse =( *((uint32_t *)(NVMCTRL_OTP4)
    129c:	682b      	ldr	r3, [r5, #0]
    129e:	0e9b      	lsrs	r3, r3, #26
			+ (NVM_DFLL_COARSE_POS / 32))
		>> (NVM_DFLL_COARSE_POS % 32))
		& ((1 << NVM_DFLL_COARSE_SIZE) - 1);
	/* In some revision chip, the coarse calibration value is not correct. */
	if (coarse == 0x3f) {
    12a0:	2b3f      	cmp	r3, #63	; 0x3f
    12a2:	d04b      	beq.n	133c <system_clock_init+0x118>
		coarse = 0x1f;
	}

	dfll_conf.coarse_value = coarse;
    12a4:	a805      	add	r0, sp, #20
    12a6:	7203      	strb	r3, [r0, #8]
#  else
	dfll_conf.chill_cycle = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_DISABLE;
#  endif

	if (CONF_CLOCK_DFLL_LOOP_MODE == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
		dfll_conf.multiply_factor = CONF_CLOCK_DFLL_MULTIPLY_FACTOR;
    12a8:	23b7      	movs	r3, #183	; 0xb7
    12aa:	00db      	lsls	r3, r3, #3
    12ac:	8203      	strh	r3, [r0, #16]
	}

	dfll_conf.coarse_max_step = CONF_CLOCK_DFLL_MAX_COARSE_STEP_SIZE;
    12ae:	2307      	movs	r3, #7
    12b0:	7303      	strb	r3, [r0, #12]
	dfll_conf.fine_max_step   = CONF_CLOCK_DFLL_MAX_FINE_STEP_SIZE;
    12b2:	3338      	adds	r3, #56	; 0x38
    12b4:	81c3      	strh	r3, [r0, #14]
		dfll_conf.chill_cycle = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_DISABLE;

		dfll_conf.multiply_factor = 48000;
	}

	system_clock_source_dfll_set_config(&dfll_conf);
    12b6:	4b29      	ldr	r3, [pc, #164]	; (135c <system_clock_init+0x138>)
    12b8:	4798      	blx	r3
	config->run_in_standby  = false;
    12ba:	a804      	add	r0, sp, #16
    12bc:	2500      	movs	r5, #0
    12be:	7045      	strb	r5, [r0, #1]
	config->on_demand       = true;
    12c0:	2601      	movs	r6, #1
    12c2:	7086      	strb	r6, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
    12c4:	7005      	strb	r5, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
    12c6:	4b26      	ldr	r3, [pc, #152]	; (1360 <system_clock_init+0x13c>)
    12c8:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
    12ca:	2006      	movs	r0, #6
    12cc:	4f22      	ldr	r7, [pc, #136]	; (1358 <system_clock_init+0x134>)
    12ce:	47b8      	blx	r7


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    12d0:	4b24      	ldr	r3, [pc, #144]	; (1364 <system_clock_init+0x140>)
    12d2:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    12d4:	ac01      	add	r4, sp, #4
    12d6:	9602      	str	r6, [sp, #8]
	config->high_when_disabled = false;
    12d8:	7065      	strb	r5, [r4, #1]
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
#endif
	config->run_in_standby     = false;
    12da:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    12dc:	7265      	strb	r5, [r4, #9]

	/* Configure all GCLK generators except for the main generator, which
	 * is configured later after all other clock systems are set up */
	MREPEAT(GCLK_GEN_NUM, _CONF_CLOCK_GCLK_CONFIG_NONMAIN, ~);
    12de:	2304      	movs	r3, #4
    12e0:	7023      	strb	r3, [r4, #0]
    12e2:	0021      	movs	r1, r4
    12e4:	2001      	movs	r0, #1
    12e6:	4b20      	ldr	r3, [pc, #128]	; (1368 <system_clock_init+0x144>)
    12e8:	4798      	blx	r3
    12ea:	2001      	movs	r0, #1
    12ec:	4b1f      	ldr	r3, [pc, #124]	; (136c <system_clock_init+0x148>)
    12ee:	4798      	blx	r3
	/* Enable DFLL reference clock if in closed loop mode */
	if (CONF_CLOCK_DFLL_LOOP_MODE == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
		struct system_gclk_chan_config dfll_gclk_chan_conf;

		system_gclk_chan_get_config_defaults(&dfll_gclk_chan_conf);
		dfll_gclk_chan_conf.source_generator = CONF_CLOCK_DFLL_SOURCE_GCLK_GENERATOR;
    12f0:	7026      	strb	r6, [r4, #0]
		system_gclk_chan_set_config(SYSCTRL_GCLK_ID_DFLL48, &dfll_gclk_chan_conf);
    12f2:	0021      	movs	r1, r4
    12f4:	2000      	movs	r0, #0
    12f6:	4b14      	ldr	r3, [pc, #80]	; (1348 <system_clock_init+0x124>)
    12f8:	4798      	blx	r3
		system_gclk_chan_enable(SYSCTRL_GCLK_ID_DFLL48);
    12fa:	2000      	movs	r0, #0
    12fc:	4b1c      	ldr	r3, [pc, #112]	; (1370 <system_clock_init+0x14c>)
    12fe:	4798      	blx	r3
#endif


	/* DFLL Enable (Open and Closed Loop) */
#if CONF_CLOCK_DFLL_ENABLE == true
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_DFLL);
    1300:	2007      	movs	r0, #7
    1302:	47b8      	blx	r7
	return ((SYSCTRL->PCLKSR.reg & mask) == mask);
    1304:	490e      	ldr	r1, [pc, #56]	; (1340 <system_clock_init+0x11c>)
    1306:	22d0      	movs	r2, #208	; 0xd0
    1308:	68cb      	ldr	r3, [r1, #12]
    130a:	4013      	ands	r3, r2
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DFLL));
    130c:	2bd0      	cmp	r3, #208	; 0xd0
    130e:	d1fb      	bne.n	1308 <system_clock_init+0xe4>
	PM->CPUSEL.reg = (uint32_t)divider;
    1310:	4a18      	ldr	r2, [pc, #96]	; (1374 <system_clock_init+0x150>)
    1312:	2300      	movs	r3, #0
    1314:	7213      	strb	r3, [r2, #8]
			PM->APBASEL.reg = (uint32_t)divider;
    1316:	7253      	strb	r3, [r2, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
    1318:	7293      	strb	r3, [r2, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
    131a:	72d3      	strb	r3, [r2, #11]
	config->division_factor    = 1;
    131c:	a901      	add	r1, sp, #4
    131e:	2201      	movs	r2, #1
    1320:	604a      	str	r2, [r1, #4]
	config->high_when_disabled = false;
    1322:	704b      	strb	r3, [r1, #1]
	config->run_in_standby     = false;
    1324:	720b      	strb	r3, [r1, #8]
	config->output_enable      = false;
    1326:	724b      	strb	r3, [r1, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    1328:	3307      	adds	r3, #7
    132a:	700b      	strb	r3, [r1, #0]
    132c:	2000      	movs	r0, #0
    132e:	4b0e      	ldr	r3, [pc, #56]	; (1368 <system_clock_init+0x144>)
    1330:	4798      	blx	r3
    1332:	2000      	movs	r0, #0
    1334:	4b0d      	ldr	r3, [pc, #52]	; (136c <system_clock_init+0x148>)
    1336:	4798      	blx	r3
#endif
}
    1338:	b00d      	add	sp, #52	; 0x34
    133a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		coarse = 0x1f;
    133c:	3b20      	subs	r3, #32
    133e:	e7b1      	b.n	12a4 <system_clock_init+0x80>
    1340:	40000800 	.word	0x40000800
    1344:	41004000 	.word	0x41004000
    1348:	000015b1 	.word	0x000015b1
    134c:	00806024 	.word	0x00806024
    1350:	ff80ffff 	.word	0xff80ffff
    1354:	00001081 	.word	0x00001081
    1358:	0000117d 	.word	0x0000117d
    135c:	000010fd 	.word	0x000010fd
    1360:	00001045 	.word	0x00001045
    1364:	00001379 	.word	0x00001379
    1368:	0000139d 	.word	0x0000139d
    136c:	00001455 	.word	0x00001455
    1370:	00001525 	.word	0x00001525
    1374:	40000400 	.word	0x40000400

00001378 <system_gclk_init>:
    1378:	4a06      	ldr	r2, [pc, #24]	; (1394 <system_gclk_init+0x1c>)
    137a:	6993      	ldr	r3, [r2, #24]
    137c:	2108      	movs	r1, #8
    137e:	430b      	orrs	r3, r1
    1380:	6193      	str	r3, [r2, #24]
    1382:	2201      	movs	r2, #1
    1384:	4b04      	ldr	r3, [pc, #16]	; (1398 <system_gclk_init+0x20>)
    1386:	701a      	strb	r2, [r3, #0]
    1388:	0019      	movs	r1, r3
    138a:	780b      	ldrb	r3, [r1, #0]
    138c:	4213      	tst	r3, r2
    138e:	d1fc      	bne.n	138a <system_gclk_init+0x12>
    1390:	4770      	bx	lr
    1392:	46c0      	nop			; (mov r8, r8)
    1394:	40000400 	.word	0x40000400
    1398:	40000c00 	.word	0x40000c00

0000139c <system_gclk_gen_set_config>:
    139c:	b570      	push	{r4, r5, r6, lr}
    139e:	0006      	movs	r6, r0
    13a0:	0004      	movs	r4, r0
    13a2:	780d      	ldrb	r5, [r1, #0]
    13a4:	022d      	lsls	r5, r5, #8
    13a6:	4305      	orrs	r5, r0
    13a8:	784b      	ldrb	r3, [r1, #1]
    13aa:	2b00      	cmp	r3, #0
    13ac:	d002      	beq.n	13b4 <system_gclk_gen_set_config+0x18>
    13ae:	2380      	movs	r3, #128	; 0x80
    13b0:	02db      	lsls	r3, r3, #11
    13b2:	431d      	orrs	r5, r3
    13b4:	7a4b      	ldrb	r3, [r1, #9]
    13b6:	2b00      	cmp	r3, #0
    13b8:	d002      	beq.n	13c0 <system_gclk_gen_set_config+0x24>
    13ba:	2380      	movs	r3, #128	; 0x80
    13bc:	031b      	lsls	r3, r3, #12
    13be:	431d      	orrs	r5, r3
    13c0:	6848      	ldr	r0, [r1, #4]
    13c2:	2801      	cmp	r0, #1
    13c4:	d910      	bls.n	13e8 <system_gclk_gen_set_config+0x4c>
    13c6:	1e43      	subs	r3, r0, #1
    13c8:	4218      	tst	r0, r3
    13ca:	d134      	bne.n	1436 <system_gclk_gen_set_config+0x9a>
    13cc:	2802      	cmp	r0, #2
    13ce:	d930      	bls.n	1432 <system_gclk_gen_set_config+0x96>
    13d0:	2302      	movs	r3, #2
    13d2:	2200      	movs	r2, #0
    13d4:	3201      	adds	r2, #1
    13d6:	005b      	lsls	r3, r3, #1
    13d8:	4298      	cmp	r0, r3
    13da:	d8fb      	bhi.n	13d4 <system_gclk_gen_set_config+0x38>
    13dc:	0212      	lsls	r2, r2, #8
    13de:	4332      	orrs	r2, r6
    13e0:	0014      	movs	r4, r2
    13e2:	2380      	movs	r3, #128	; 0x80
    13e4:	035b      	lsls	r3, r3, #13
    13e6:	431d      	orrs	r5, r3
    13e8:	7a0b      	ldrb	r3, [r1, #8]
    13ea:	2b00      	cmp	r3, #0
    13ec:	d002      	beq.n	13f4 <system_gclk_gen_set_config+0x58>
    13ee:	2380      	movs	r3, #128	; 0x80
    13f0:	039b      	lsls	r3, r3, #14
    13f2:	431d      	orrs	r5, r3
    13f4:	4a13      	ldr	r2, [pc, #76]	; (1444 <system_gclk_gen_set_config+0xa8>)
    13f6:	7853      	ldrb	r3, [r2, #1]
    13f8:	b25b      	sxtb	r3, r3
    13fa:	2b00      	cmp	r3, #0
    13fc:	dbfb      	blt.n	13f6 <system_gclk_gen_set_config+0x5a>
    13fe:	4b12      	ldr	r3, [pc, #72]	; (1448 <system_gclk_gen_set_config+0xac>)
    1400:	4798      	blx	r3
    1402:	4b12      	ldr	r3, [pc, #72]	; (144c <system_gclk_gen_set_config+0xb0>)
    1404:	701e      	strb	r6, [r3, #0]
    1406:	4a0f      	ldr	r2, [pc, #60]	; (1444 <system_gclk_gen_set_config+0xa8>)
    1408:	7853      	ldrb	r3, [r2, #1]
    140a:	b25b      	sxtb	r3, r3
    140c:	2b00      	cmp	r3, #0
    140e:	dbfb      	blt.n	1408 <system_gclk_gen_set_config+0x6c>
    1410:	4b0c      	ldr	r3, [pc, #48]	; (1444 <system_gclk_gen_set_config+0xa8>)
    1412:	609c      	str	r4, [r3, #8]
    1414:	001a      	movs	r2, r3
    1416:	7853      	ldrb	r3, [r2, #1]
    1418:	b25b      	sxtb	r3, r3
    141a:	2b00      	cmp	r3, #0
    141c:	dbfb      	blt.n	1416 <system_gclk_gen_set_config+0x7a>
    141e:	4a09      	ldr	r2, [pc, #36]	; (1444 <system_gclk_gen_set_config+0xa8>)
    1420:	6853      	ldr	r3, [r2, #4]
    1422:	2180      	movs	r1, #128	; 0x80
    1424:	0249      	lsls	r1, r1, #9
    1426:	400b      	ands	r3, r1
    1428:	431d      	orrs	r5, r3
    142a:	6055      	str	r5, [r2, #4]
    142c:	4b08      	ldr	r3, [pc, #32]	; (1450 <system_gclk_gen_set_config+0xb4>)
    142e:	4798      	blx	r3
    1430:	bd70      	pop	{r4, r5, r6, pc}
    1432:	2200      	movs	r2, #0
    1434:	e7d2      	b.n	13dc <system_gclk_gen_set_config+0x40>
    1436:	0204      	lsls	r4, r0, #8
    1438:	4334      	orrs	r4, r6
    143a:	2380      	movs	r3, #128	; 0x80
    143c:	029b      	lsls	r3, r3, #10
    143e:	431d      	orrs	r5, r3
    1440:	e7d2      	b.n	13e8 <system_gclk_gen_set_config+0x4c>
    1442:	46c0      	nop			; (mov r8, r8)
    1444:	40000c00 	.word	0x40000c00
    1448:	00000f41 	.word	0x00000f41
    144c:	40000c08 	.word	0x40000c08
    1450:	00000f81 	.word	0x00000f81

00001454 <system_gclk_gen_enable>:
    1454:	b510      	push	{r4, lr}
    1456:	0004      	movs	r4, r0
    1458:	4a0b      	ldr	r2, [pc, #44]	; (1488 <system_gclk_gen_enable+0x34>)
    145a:	7853      	ldrb	r3, [r2, #1]
    145c:	b25b      	sxtb	r3, r3
    145e:	2b00      	cmp	r3, #0
    1460:	dbfb      	blt.n	145a <system_gclk_gen_enable+0x6>
    1462:	4b0a      	ldr	r3, [pc, #40]	; (148c <system_gclk_gen_enable+0x38>)
    1464:	4798      	blx	r3
    1466:	4b0a      	ldr	r3, [pc, #40]	; (1490 <system_gclk_gen_enable+0x3c>)
    1468:	701c      	strb	r4, [r3, #0]
    146a:	4a07      	ldr	r2, [pc, #28]	; (1488 <system_gclk_gen_enable+0x34>)
    146c:	7853      	ldrb	r3, [r2, #1]
    146e:	b25b      	sxtb	r3, r3
    1470:	2b00      	cmp	r3, #0
    1472:	dbfb      	blt.n	146c <system_gclk_gen_enable+0x18>
    1474:	4a04      	ldr	r2, [pc, #16]	; (1488 <system_gclk_gen_enable+0x34>)
    1476:	6851      	ldr	r1, [r2, #4]
    1478:	2380      	movs	r3, #128	; 0x80
    147a:	025b      	lsls	r3, r3, #9
    147c:	430b      	orrs	r3, r1
    147e:	6053      	str	r3, [r2, #4]
    1480:	4b04      	ldr	r3, [pc, #16]	; (1494 <system_gclk_gen_enable+0x40>)
    1482:	4798      	blx	r3
    1484:	bd10      	pop	{r4, pc}
    1486:	46c0      	nop			; (mov r8, r8)
    1488:	40000c00 	.word	0x40000c00
    148c:	00000f41 	.word	0x00000f41
    1490:	40000c04 	.word	0x40000c04
    1494:	00000f81 	.word	0x00000f81

00001498 <system_gclk_gen_get_hz>:
    1498:	b570      	push	{r4, r5, r6, lr}
    149a:	0004      	movs	r4, r0
    149c:	4a1a      	ldr	r2, [pc, #104]	; (1508 <system_gclk_gen_get_hz+0x70>)
    149e:	7853      	ldrb	r3, [r2, #1]
    14a0:	b25b      	sxtb	r3, r3
    14a2:	2b00      	cmp	r3, #0
    14a4:	dbfb      	blt.n	149e <system_gclk_gen_get_hz+0x6>
    14a6:	4b19      	ldr	r3, [pc, #100]	; (150c <system_gclk_gen_get_hz+0x74>)
    14a8:	4798      	blx	r3
    14aa:	4b19      	ldr	r3, [pc, #100]	; (1510 <system_gclk_gen_get_hz+0x78>)
    14ac:	701c      	strb	r4, [r3, #0]
    14ae:	4a16      	ldr	r2, [pc, #88]	; (1508 <system_gclk_gen_get_hz+0x70>)
    14b0:	7853      	ldrb	r3, [r2, #1]
    14b2:	b25b      	sxtb	r3, r3
    14b4:	2b00      	cmp	r3, #0
    14b6:	dbfb      	blt.n	14b0 <system_gclk_gen_get_hz+0x18>
    14b8:	4e13      	ldr	r6, [pc, #76]	; (1508 <system_gclk_gen_get_hz+0x70>)
    14ba:	6870      	ldr	r0, [r6, #4]
    14bc:	04c0      	lsls	r0, r0, #19
    14be:	0ec0      	lsrs	r0, r0, #27
    14c0:	4b14      	ldr	r3, [pc, #80]	; (1514 <system_gclk_gen_get_hz+0x7c>)
    14c2:	4798      	blx	r3
    14c4:	0005      	movs	r5, r0
    14c6:	4b12      	ldr	r3, [pc, #72]	; (1510 <system_gclk_gen_get_hz+0x78>)
    14c8:	701c      	strb	r4, [r3, #0]
    14ca:	6876      	ldr	r6, [r6, #4]
    14cc:	02f6      	lsls	r6, r6, #11
    14ce:	0ff6      	lsrs	r6, r6, #31
    14d0:	4b11      	ldr	r3, [pc, #68]	; (1518 <system_gclk_gen_get_hz+0x80>)
    14d2:	701c      	strb	r4, [r3, #0]
    14d4:	4a0c      	ldr	r2, [pc, #48]	; (1508 <system_gclk_gen_get_hz+0x70>)
    14d6:	7853      	ldrb	r3, [r2, #1]
    14d8:	b25b      	sxtb	r3, r3
    14da:	2b00      	cmp	r3, #0
    14dc:	dbfb      	blt.n	14d6 <system_gclk_gen_get_hz+0x3e>
    14de:	4b0a      	ldr	r3, [pc, #40]	; (1508 <system_gclk_gen_get_hz+0x70>)
    14e0:	689c      	ldr	r4, [r3, #8]
    14e2:	0224      	lsls	r4, r4, #8
    14e4:	0c24      	lsrs	r4, r4, #16
    14e6:	4b0d      	ldr	r3, [pc, #52]	; (151c <system_gclk_gen_get_hz+0x84>)
    14e8:	4798      	blx	r3
    14ea:	2e00      	cmp	r6, #0
    14ec:	d107      	bne.n	14fe <system_gclk_gen_get_hz+0x66>
    14ee:	2c01      	cmp	r4, #1
    14f0:	d907      	bls.n	1502 <system_gclk_gen_get_hz+0x6a>
    14f2:	0021      	movs	r1, r4
    14f4:	0028      	movs	r0, r5
    14f6:	4b0a      	ldr	r3, [pc, #40]	; (1520 <system_gclk_gen_get_hz+0x88>)
    14f8:	4798      	blx	r3
    14fa:	0005      	movs	r5, r0
    14fc:	e001      	b.n	1502 <system_gclk_gen_get_hz+0x6a>
    14fe:	3401      	adds	r4, #1
    1500:	40e5      	lsrs	r5, r4
    1502:	0028      	movs	r0, r5
    1504:	bd70      	pop	{r4, r5, r6, pc}
    1506:	46c0      	nop			; (mov r8, r8)
    1508:	40000c00 	.word	0x40000c00
    150c:	00000f41 	.word	0x00000f41
    1510:	40000c04 	.word	0x40000c04
    1514:	00000fb1 	.word	0x00000fb1
    1518:	40000c08 	.word	0x40000c08
    151c:	00000f81 	.word	0x00000f81
    1520:	000017f1 	.word	0x000017f1

00001524 <system_gclk_chan_enable>:
    1524:	b510      	push	{r4, lr}
    1526:	0004      	movs	r4, r0
    1528:	4b06      	ldr	r3, [pc, #24]	; (1544 <system_gclk_chan_enable+0x20>)
    152a:	4798      	blx	r3
    152c:	4b06      	ldr	r3, [pc, #24]	; (1548 <system_gclk_chan_enable+0x24>)
    152e:	701c      	strb	r4, [r3, #0]
    1530:	4a06      	ldr	r2, [pc, #24]	; (154c <system_gclk_chan_enable+0x28>)
    1532:	8853      	ldrh	r3, [r2, #2]
    1534:	2180      	movs	r1, #128	; 0x80
    1536:	01c9      	lsls	r1, r1, #7
    1538:	430b      	orrs	r3, r1
    153a:	8053      	strh	r3, [r2, #2]
    153c:	4b04      	ldr	r3, [pc, #16]	; (1550 <system_gclk_chan_enable+0x2c>)
    153e:	4798      	blx	r3
    1540:	bd10      	pop	{r4, pc}
    1542:	46c0      	nop			; (mov r8, r8)
    1544:	00000f41 	.word	0x00000f41
    1548:	40000c02 	.word	0x40000c02
    154c:	40000c00 	.word	0x40000c00
    1550:	00000f81 	.word	0x00000f81

00001554 <system_gclk_chan_disable>:
    1554:	b510      	push	{r4, lr}
    1556:	0004      	movs	r4, r0
    1558:	4b0f      	ldr	r3, [pc, #60]	; (1598 <system_gclk_chan_disable+0x44>)
    155a:	4798      	blx	r3
    155c:	4b0f      	ldr	r3, [pc, #60]	; (159c <system_gclk_chan_disable+0x48>)
    155e:	701c      	strb	r4, [r3, #0]
    1560:	4a0f      	ldr	r2, [pc, #60]	; (15a0 <system_gclk_chan_disable+0x4c>)
    1562:	8853      	ldrh	r3, [r2, #2]
    1564:	051b      	lsls	r3, r3, #20
    1566:	0f18      	lsrs	r0, r3, #28
    1568:	8853      	ldrh	r3, [r2, #2]
    156a:	490e      	ldr	r1, [pc, #56]	; (15a4 <system_gclk_chan_disable+0x50>)
    156c:	400b      	ands	r3, r1
    156e:	8053      	strh	r3, [r2, #2]
    1570:	8853      	ldrh	r3, [r2, #2]
    1572:	490d      	ldr	r1, [pc, #52]	; (15a8 <system_gclk_chan_disable+0x54>)
    1574:	400b      	ands	r3, r1
    1576:	8053      	strh	r3, [r2, #2]
    1578:	0011      	movs	r1, r2
    157a:	2280      	movs	r2, #128	; 0x80
    157c:	01d2      	lsls	r2, r2, #7
    157e:	884b      	ldrh	r3, [r1, #2]
    1580:	4213      	tst	r3, r2
    1582:	d1fc      	bne.n	157e <system_gclk_chan_disable+0x2a>
    1584:	4906      	ldr	r1, [pc, #24]	; (15a0 <system_gclk_chan_disable+0x4c>)
    1586:	884a      	ldrh	r2, [r1, #2]
    1588:	0203      	lsls	r3, r0, #8
    158a:	4806      	ldr	r0, [pc, #24]	; (15a4 <system_gclk_chan_disable+0x50>)
    158c:	4002      	ands	r2, r0
    158e:	4313      	orrs	r3, r2
    1590:	804b      	strh	r3, [r1, #2]
    1592:	4b06      	ldr	r3, [pc, #24]	; (15ac <system_gclk_chan_disable+0x58>)
    1594:	4798      	blx	r3
    1596:	bd10      	pop	{r4, pc}
    1598:	00000f41 	.word	0x00000f41
    159c:	40000c02 	.word	0x40000c02
    15a0:	40000c00 	.word	0x40000c00
    15a4:	fffff0ff 	.word	0xfffff0ff
    15a8:	ffffbfff 	.word	0xffffbfff
    15ac:	00000f81 	.word	0x00000f81

000015b0 <system_gclk_chan_set_config>:
    15b0:	b510      	push	{r4, lr}
    15b2:	780c      	ldrb	r4, [r1, #0]
    15b4:	0224      	lsls	r4, r4, #8
    15b6:	4304      	orrs	r4, r0
    15b8:	4b02      	ldr	r3, [pc, #8]	; (15c4 <system_gclk_chan_set_config+0x14>)
    15ba:	4798      	blx	r3
    15bc:	b2a4      	uxth	r4, r4
    15be:	4b02      	ldr	r3, [pc, #8]	; (15c8 <system_gclk_chan_set_config+0x18>)
    15c0:	805c      	strh	r4, [r3, #2]
    15c2:	bd10      	pop	{r4, pc}
    15c4:	00001555 	.word	0x00001555
    15c8:	40000c00 	.word	0x40000c00

000015cc <system_gclk_chan_get_hz>:
    15cc:	b510      	push	{r4, lr}
    15ce:	0004      	movs	r4, r0
    15d0:	4b06      	ldr	r3, [pc, #24]	; (15ec <system_gclk_chan_get_hz+0x20>)
    15d2:	4798      	blx	r3
    15d4:	4b06      	ldr	r3, [pc, #24]	; (15f0 <system_gclk_chan_get_hz+0x24>)
    15d6:	701c      	strb	r4, [r3, #0]
    15d8:	4b06      	ldr	r3, [pc, #24]	; (15f4 <system_gclk_chan_get_hz+0x28>)
    15da:	885c      	ldrh	r4, [r3, #2]
    15dc:	0524      	lsls	r4, r4, #20
    15de:	0f24      	lsrs	r4, r4, #28
    15e0:	4b05      	ldr	r3, [pc, #20]	; (15f8 <system_gclk_chan_get_hz+0x2c>)
    15e2:	4798      	blx	r3
    15e4:	0020      	movs	r0, r4
    15e6:	4b05      	ldr	r3, [pc, #20]	; (15fc <system_gclk_chan_get_hz+0x30>)
    15e8:	4798      	blx	r3
    15ea:	bd10      	pop	{r4, pc}
    15ec:	00000f41 	.word	0x00000f41
    15f0:	40000c02 	.word	0x40000c02
    15f4:	40000c00 	.word	0x40000c00
    15f8:	00000f81 	.word	0x00000f81
    15fc:	00001499 	.word	0x00001499

00001600 <_system_pinmux_config>:
    1600:	b530      	push	{r4, r5, lr}
    1602:	78d3      	ldrb	r3, [r2, #3]
    1604:	2b00      	cmp	r3, #0
    1606:	d135      	bne.n	1674 <_system_pinmux_config+0x74>
    1608:	7813      	ldrb	r3, [r2, #0]
    160a:	2b80      	cmp	r3, #128	; 0x80
    160c:	d029      	beq.n	1662 <_system_pinmux_config+0x62>
    160e:	061b      	lsls	r3, r3, #24
    1610:	2480      	movs	r4, #128	; 0x80
    1612:	0264      	lsls	r4, r4, #9
    1614:	4323      	orrs	r3, r4
    1616:	7854      	ldrb	r4, [r2, #1]
    1618:	2502      	movs	r5, #2
    161a:	43ac      	bics	r4, r5
    161c:	d106      	bne.n	162c <_system_pinmux_config+0x2c>
    161e:	7894      	ldrb	r4, [r2, #2]
    1620:	2c00      	cmp	r4, #0
    1622:	d120      	bne.n	1666 <_system_pinmux_config+0x66>
    1624:	2480      	movs	r4, #128	; 0x80
    1626:	02a4      	lsls	r4, r4, #10
    1628:	4323      	orrs	r3, r4
    162a:	6041      	str	r1, [r0, #4]
    162c:	7854      	ldrb	r4, [r2, #1]
    162e:	3c01      	subs	r4, #1
    1630:	2c01      	cmp	r4, #1
    1632:	d91c      	bls.n	166e <_system_pinmux_config+0x6e>
    1634:	040d      	lsls	r5, r1, #16
    1636:	0c2d      	lsrs	r5, r5, #16
    1638:	24a0      	movs	r4, #160	; 0xa0
    163a:	05e4      	lsls	r4, r4, #23
    163c:	432c      	orrs	r4, r5
    163e:	431c      	orrs	r4, r3
    1640:	6284      	str	r4, [r0, #40]	; 0x28
    1642:	0c0d      	lsrs	r5, r1, #16
    1644:	24d0      	movs	r4, #208	; 0xd0
    1646:	0624      	lsls	r4, r4, #24
    1648:	432c      	orrs	r4, r5
    164a:	431c      	orrs	r4, r3
    164c:	6284      	str	r4, [r0, #40]	; 0x28
    164e:	78d4      	ldrb	r4, [r2, #3]
    1650:	2c00      	cmp	r4, #0
    1652:	d122      	bne.n	169a <_system_pinmux_config+0x9a>
    1654:	035b      	lsls	r3, r3, #13
    1656:	d51c      	bpl.n	1692 <_system_pinmux_config+0x92>
    1658:	7893      	ldrb	r3, [r2, #2]
    165a:	2b01      	cmp	r3, #1
    165c:	d01e      	beq.n	169c <_system_pinmux_config+0x9c>
    165e:	6141      	str	r1, [r0, #20]
    1660:	e017      	b.n	1692 <_system_pinmux_config+0x92>
    1662:	2300      	movs	r3, #0
    1664:	e7d7      	b.n	1616 <_system_pinmux_config+0x16>
    1666:	24c0      	movs	r4, #192	; 0xc0
    1668:	02e4      	lsls	r4, r4, #11
    166a:	4323      	orrs	r3, r4
    166c:	e7dd      	b.n	162a <_system_pinmux_config+0x2a>
    166e:	4c0d      	ldr	r4, [pc, #52]	; (16a4 <_system_pinmux_config+0xa4>)
    1670:	4023      	ands	r3, r4
    1672:	e7df      	b.n	1634 <_system_pinmux_config+0x34>
    1674:	6041      	str	r1, [r0, #4]
    1676:	040c      	lsls	r4, r1, #16
    1678:	0c24      	lsrs	r4, r4, #16
    167a:	23a0      	movs	r3, #160	; 0xa0
    167c:	05db      	lsls	r3, r3, #23
    167e:	4323      	orrs	r3, r4
    1680:	6283      	str	r3, [r0, #40]	; 0x28
    1682:	0c0c      	lsrs	r4, r1, #16
    1684:	23d0      	movs	r3, #208	; 0xd0
    1686:	061b      	lsls	r3, r3, #24
    1688:	4323      	orrs	r3, r4
    168a:	6283      	str	r3, [r0, #40]	; 0x28
    168c:	78d3      	ldrb	r3, [r2, #3]
    168e:	2b00      	cmp	r3, #0
    1690:	d103      	bne.n	169a <_system_pinmux_config+0x9a>
    1692:	7853      	ldrb	r3, [r2, #1]
    1694:	3b01      	subs	r3, #1
    1696:	2b01      	cmp	r3, #1
    1698:	d902      	bls.n	16a0 <_system_pinmux_config+0xa0>
    169a:	bd30      	pop	{r4, r5, pc}
    169c:	6181      	str	r1, [r0, #24]
    169e:	e7f8      	b.n	1692 <_system_pinmux_config+0x92>
    16a0:	6081      	str	r1, [r0, #8]
    16a2:	e7fa      	b.n	169a <_system_pinmux_config+0x9a>
    16a4:	fffbffff 	.word	0xfffbffff

000016a8 <system_pinmux_pin_set_config>:
    16a8:	b510      	push	{r4, lr}
    16aa:	000a      	movs	r2, r1
    16ac:	09c1      	lsrs	r1, r0, #7
    16ae:	2300      	movs	r3, #0
    16b0:	2900      	cmp	r1, #0
    16b2:	d104      	bne.n	16be <system_pinmux_pin_set_config+0x16>
    16b4:	0943      	lsrs	r3, r0, #5
    16b6:	01db      	lsls	r3, r3, #7
    16b8:	4905      	ldr	r1, [pc, #20]	; (16d0 <system_pinmux_pin_set_config+0x28>)
    16ba:	468c      	mov	ip, r1
    16bc:	4463      	add	r3, ip
    16be:	241f      	movs	r4, #31
    16c0:	4020      	ands	r0, r4
    16c2:	2101      	movs	r1, #1
    16c4:	4081      	lsls	r1, r0
    16c6:	0018      	movs	r0, r3
    16c8:	4b02      	ldr	r3, [pc, #8]	; (16d4 <system_pinmux_pin_set_config+0x2c>)
    16ca:	4798      	blx	r3
    16cc:	bd10      	pop	{r4, pc}
    16ce:	46c0      	nop			; (mov r8, r8)
    16d0:	41004400 	.word	0x41004400
    16d4:	00001601 	.word	0x00001601

000016d8 <Dummy_Handler>:
    16d8:	e7fe      	b.n	16d8 <Dummy_Handler>
	...

000016dc <Reset_Handler>:
    16dc:	b510      	push	{r4, lr}
    16de:	4a26      	ldr	r2, [pc, #152]	; (1778 <Reset_Handler+0x9c>)
    16e0:	4b26      	ldr	r3, [pc, #152]	; (177c <Reset_Handler+0xa0>)
    16e2:	429a      	cmp	r2, r3
    16e4:	d011      	beq.n	170a <Reset_Handler+0x2e>
    16e6:	001a      	movs	r2, r3
    16e8:	4b25      	ldr	r3, [pc, #148]	; (1780 <Reset_Handler+0xa4>)
    16ea:	429a      	cmp	r2, r3
    16ec:	d20d      	bcs.n	170a <Reset_Handler+0x2e>
    16ee:	4a25      	ldr	r2, [pc, #148]	; (1784 <Reset_Handler+0xa8>)
    16f0:	3303      	adds	r3, #3
    16f2:	1a9b      	subs	r3, r3, r2
    16f4:	089b      	lsrs	r3, r3, #2
    16f6:	3301      	adds	r3, #1
    16f8:	009b      	lsls	r3, r3, #2
    16fa:	2200      	movs	r2, #0
    16fc:	481f      	ldr	r0, [pc, #124]	; (177c <Reset_Handler+0xa0>)
    16fe:	491e      	ldr	r1, [pc, #120]	; (1778 <Reset_Handler+0x9c>)
    1700:	588c      	ldr	r4, [r1, r2]
    1702:	5084      	str	r4, [r0, r2]
    1704:	3204      	adds	r2, #4
    1706:	429a      	cmp	r2, r3
    1708:	d1fa      	bne.n	1700 <Reset_Handler+0x24>
    170a:	4a1f      	ldr	r2, [pc, #124]	; (1788 <Reset_Handler+0xac>)
    170c:	4b1f      	ldr	r3, [pc, #124]	; (178c <Reset_Handler+0xb0>)
    170e:	429a      	cmp	r2, r3
    1710:	d20a      	bcs.n	1728 <Reset_Handler+0x4c>
    1712:	43d3      	mvns	r3, r2
    1714:	491d      	ldr	r1, [pc, #116]	; (178c <Reset_Handler+0xb0>)
    1716:	185b      	adds	r3, r3, r1
    1718:	2103      	movs	r1, #3
    171a:	438b      	bics	r3, r1
    171c:	3304      	adds	r3, #4
    171e:	189b      	adds	r3, r3, r2
    1720:	2100      	movs	r1, #0
    1722:	c202      	stmia	r2!, {r1}
    1724:	4293      	cmp	r3, r2
    1726:	d1fc      	bne.n	1722 <Reset_Handler+0x46>
    1728:	4a19      	ldr	r2, [pc, #100]	; (1790 <Reset_Handler+0xb4>)
    172a:	21ff      	movs	r1, #255	; 0xff
    172c:	4b19      	ldr	r3, [pc, #100]	; (1794 <Reset_Handler+0xb8>)
    172e:	438b      	bics	r3, r1
    1730:	6093      	str	r3, [r2, #8]
    1732:	39fd      	subs	r1, #253	; 0xfd
    1734:	2390      	movs	r3, #144	; 0x90
    1736:	005b      	lsls	r3, r3, #1
    1738:	4a17      	ldr	r2, [pc, #92]	; (1798 <Reset_Handler+0xbc>)
    173a:	50d1      	str	r1, [r2, r3]
    173c:	4b17      	ldr	r3, [pc, #92]	; (179c <Reset_Handler+0xc0>)
    173e:	7b9a      	ldrb	r2, [r3, #14]
    1740:	312e      	adds	r1, #46	; 0x2e
    1742:	438a      	bics	r2, r1
    1744:	2120      	movs	r1, #32
    1746:	430a      	orrs	r2, r1
    1748:	739a      	strb	r2, [r3, #14]
    174a:	7b9a      	ldrb	r2, [r3, #14]
    174c:	210c      	movs	r1, #12
    174e:	438a      	bics	r2, r1
    1750:	2108      	movs	r1, #8
    1752:	430a      	orrs	r2, r1
    1754:	739a      	strb	r2, [r3, #14]
    1756:	7b9a      	ldrb	r2, [r3, #14]
    1758:	2103      	movs	r1, #3
    175a:	438a      	bics	r2, r1
    175c:	2102      	movs	r1, #2
    175e:	430a      	orrs	r2, r1
    1760:	739a      	strb	r2, [r3, #14]
    1762:	4a0f      	ldr	r2, [pc, #60]	; (17a0 <Reset_Handler+0xc4>)
    1764:	6853      	ldr	r3, [r2, #4]
    1766:	2180      	movs	r1, #128	; 0x80
    1768:	430b      	orrs	r3, r1
    176a:	6053      	str	r3, [r2, #4]
    176c:	4b0d      	ldr	r3, [pc, #52]	; (17a4 <Reset_Handler+0xc8>)
    176e:	4798      	blx	r3
    1770:	4b0d      	ldr	r3, [pc, #52]	; (17a8 <Reset_Handler+0xcc>)
    1772:	4798      	blx	r3
    1774:	e7fe      	b.n	1774 <Reset_Handler+0x98>
    1776:	46c0      	nop			; (mov r8, r8)
    1778:	000025b8 	.word	0x000025b8
    177c:	20000000 	.word	0x20000000
    1780:	20000854 	.word	0x20000854
    1784:	20000004 	.word	0x20000004
    1788:	20000854 	.word	0x20000854
    178c:	200009f4 	.word	0x200009f4
    1790:	e000ed00 	.word	0xe000ed00
    1794:	00000000 	.word	0x00000000
    1798:	41007000 	.word	0x41007000
    179c:	41004800 	.word	0x41004800
    17a0:	41004000 	.word	0x41004000
    17a4:	00001aed 	.word	0x00001aed
    17a8:	00000319 	.word	0x00000319

000017ac <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
	// Keep the default device state after reset
	SystemCoreClock = __SYSTEM_CLOCK;
    17ac:	4a01      	ldr	r2, [pc, #4]	; (17b4 <SystemInit+0x8>)
    17ae:	4b02      	ldr	r3, [pc, #8]	; (17b8 <SystemInit+0xc>)
    17b0:	601a      	str	r2, [r3, #0]
	return;
}
    17b2:	4770      	bx	lr
    17b4:	000f4240 	.word	0x000f4240
    17b8:	20000010 	.word	0x20000010

000017bc <_sbrk>:
    17bc:	0003      	movs	r3, r0
    17be:	4a06      	ldr	r2, [pc, #24]	; (17d8 <_sbrk+0x1c>)
    17c0:	6812      	ldr	r2, [r2, #0]
    17c2:	2a00      	cmp	r2, #0
    17c4:	d004      	beq.n	17d0 <_sbrk+0x14>
    17c6:	4a04      	ldr	r2, [pc, #16]	; (17d8 <_sbrk+0x1c>)
    17c8:	6810      	ldr	r0, [r2, #0]
    17ca:	18c3      	adds	r3, r0, r3
    17cc:	6013      	str	r3, [r2, #0]
    17ce:	4770      	bx	lr
    17d0:	4902      	ldr	r1, [pc, #8]	; (17dc <_sbrk+0x20>)
    17d2:	4a01      	ldr	r2, [pc, #4]	; (17d8 <_sbrk+0x1c>)
    17d4:	6011      	str	r1, [r2, #0]
    17d6:	e7f6      	b.n	17c6 <_sbrk+0xa>
    17d8:	2000093c 	.word	0x2000093c
    17dc:	20000df8 	.word	0x20000df8

000017e0 <__aeabi_atexit>:
    17e0:	000b      	movs	r3, r1
    17e2:	b510      	push	{r4, lr}
    17e4:	0001      	movs	r1, r0
    17e6:	0018      	movs	r0, r3
    17e8:	f000 f978 	bl	1adc <__cxa_atexit>
    17ec:	bd10      	pop	{r4, pc}
    17ee:	46c0      	nop			; (mov r8, r8)

000017f0 <__udivsi3>:
    17f0:	2200      	movs	r2, #0
    17f2:	0843      	lsrs	r3, r0, #1
    17f4:	428b      	cmp	r3, r1
    17f6:	d374      	bcc.n	18e2 <__udivsi3+0xf2>
    17f8:	0903      	lsrs	r3, r0, #4
    17fa:	428b      	cmp	r3, r1
    17fc:	d35f      	bcc.n	18be <__udivsi3+0xce>
    17fe:	0a03      	lsrs	r3, r0, #8
    1800:	428b      	cmp	r3, r1
    1802:	d344      	bcc.n	188e <__udivsi3+0x9e>
    1804:	0b03      	lsrs	r3, r0, #12
    1806:	428b      	cmp	r3, r1
    1808:	d328      	bcc.n	185c <__udivsi3+0x6c>
    180a:	0c03      	lsrs	r3, r0, #16
    180c:	428b      	cmp	r3, r1
    180e:	d30d      	bcc.n	182c <__udivsi3+0x3c>
    1810:	22ff      	movs	r2, #255	; 0xff
    1812:	0209      	lsls	r1, r1, #8
    1814:	ba12      	rev	r2, r2
    1816:	0c03      	lsrs	r3, r0, #16
    1818:	428b      	cmp	r3, r1
    181a:	d302      	bcc.n	1822 <__udivsi3+0x32>
    181c:	1212      	asrs	r2, r2, #8
    181e:	0209      	lsls	r1, r1, #8
    1820:	d065      	beq.n	18ee <__udivsi3+0xfe>
    1822:	0b03      	lsrs	r3, r0, #12
    1824:	428b      	cmp	r3, r1
    1826:	d319      	bcc.n	185c <__udivsi3+0x6c>
    1828:	e000      	b.n	182c <__udivsi3+0x3c>
    182a:	0a09      	lsrs	r1, r1, #8
    182c:	0bc3      	lsrs	r3, r0, #15
    182e:	428b      	cmp	r3, r1
    1830:	d301      	bcc.n	1836 <__udivsi3+0x46>
    1832:	03cb      	lsls	r3, r1, #15
    1834:	1ac0      	subs	r0, r0, r3
    1836:	4152      	adcs	r2, r2
    1838:	0b83      	lsrs	r3, r0, #14
    183a:	428b      	cmp	r3, r1
    183c:	d301      	bcc.n	1842 <__udivsi3+0x52>
    183e:	038b      	lsls	r3, r1, #14
    1840:	1ac0      	subs	r0, r0, r3
    1842:	4152      	adcs	r2, r2
    1844:	0b43      	lsrs	r3, r0, #13
    1846:	428b      	cmp	r3, r1
    1848:	d301      	bcc.n	184e <__udivsi3+0x5e>
    184a:	034b      	lsls	r3, r1, #13
    184c:	1ac0      	subs	r0, r0, r3
    184e:	4152      	adcs	r2, r2
    1850:	0b03      	lsrs	r3, r0, #12
    1852:	428b      	cmp	r3, r1
    1854:	d301      	bcc.n	185a <__udivsi3+0x6a>
    1856:	030b      	lsls	r3, r1, #12
    1858:	1ac0      	subs	r0, r0, r3
    185a:	4152      	adcs	r2, r2
    185c:	0ac3      	lsrs	r3, r0, #11
    185e:	428b      	cmp	r3, r1
    1860:	d301      	bcc.n	1866 <__udivsi3+0x76>
    1862:	02cb      	lsls	r3, r1, #11
    1864:	1ac0      	subs	r0, r0, r3
    1866:	4152      	adcs	r2, r2
    1868:	0a83      	lsrs	r3, r0, #10
    186a:	428b      	cmp	r3, r1
    186c:	d301      	bcc.n	1872 <__udivsi3+0x82>
    186e:	028b      	lsls	r3, r1, #10
    1870:	1ac0      	subs	r0, r0, r3
    1872:	4152      	adcs	r2, r2
    1874:	0a43      	lsrs	r3, r0, #9
    1876:	428b      	cmp	r3, r1
    1878:	d301      	bcc.n	187e <__udivsi3+0x8e>
    187a:	024b      	lsls	r3, r1, #9
    187c:	1ac0      	subs	r0, r0, r3
    187e:	4152      	adcs	r2, r2
    1880:	0a03      	lsrs	r3, r0, #8
    1882:	428b      	cmp	r3, r1
    1884:	d301      	bcc.n	188a <__udivsi3+0x9a>
    1886:	020b      	lsls	r3, r1, #8
    1888:	1ac0      	subs	r0, r0, r3
    188a:	4152      	adcs	r2, r2
    188c:	d2cd      	bcs.n	182a <__udivsi3+0x3a>
    188e:	09c3      	lsrs	r3, r0, #7
    1890:	428b      	cmp	r3, r1
    1892:	d301      	bcc.n	1898 <__udivsi3+0xa8>
    1894:	01cb      	lsls	r3, r1, #7
    1896:	1ac0      	subs	r0, r0, r3
    1898:	4152      	adcs	r2, r2
    189a:	0983      	lsrs	r3, r0, #6
    189c:	428b      	cmp	r3, r1
    189e:	d301      	bcc.n	18a4 <__udivsi3+0xb4>
    18a0:	018b      	lsls	r3, r1, #6
    18a2:	1ac0      	subs	r0, r0, r3
    18a4:	4152      	adcs	r2, r2
    18a6:	0943      	lsrs	r3, r0, #5
    18a8:	428b      	cmp	r3, r1
    18aa:	d301      	bcc.n	18b0 <__udivsi3+0xc0>
    18ac:	014b      	lsls	r3, r1, #5
    18ae:	1ac0      	subs	r0, r0, r3
    18b0:	4152      	adcs	r2, r2
    18b2:	0903      	lsrs	r3, r0, #4
    18b4:	428b      	cmp	r3, r1
    18b6:	d301      	bcc.n	18bc <__udivsi3+0xcc>
    18b8:	010b      	lsls	r3, r1, #4
    18ba:	1ac0      	subs	r0, r0, r3
    18bc:	4152      	adcs	r2, r2
    18be:	08c3      	lsrs	r3, r0, #3
    18c0:	428b      	cmp	r3, r1
    18c2:	d301      	bcc.n	18c8 <__udivsi3+0xd8>
    18c4:	00cb      	lsls	r3, r1, #3
    18c6:	1ac0      	subs	r0, r0, r3
    18c8:	4152      	adcs	r2, r2
    18ca:	0883      	lsrs	r3, r0, #2
    18cc:	428b      	cmp	r3, r1
    18ce:	d301      	bcc.n	18d4 <__udivsi3+0xe4>
    18d0:	008b      	lsls	r3, r1, #2
    18d2:	1ac0      	subs	r0, r0, r3
    18d4:	4152      	adcs	r2, r2
    18d6:	0843      	lsrs	r3, r0, #1
    18d8:	428b      	cmp	r3, r1
    18da:	d301      	bcc.n	18e0 <__udivsi3+0xf0>
    18dc:	004b      	lsls	r3, r1, #1
    18de:	1ac0      	subs	r0, r0, r3
    18e0:	4152      	adcs	r2, r2
    18e2:	1a41      	subs	r1, r0, r1
    18e4:	d200      	bcs.n	18e8 <__udivsi3+0xf8>
    18e6:	4601      	mov	r1, r0
    18e8:	4152      	adcs	r2, r2
    18ea:	4610      	mov	r0, r2
    18ec:	4770      	bx	lr
    18ee:	e7ff      	b.n	18f0 <__udivsi3+0x100>
    18f0:	b501      	push	{r0, lr}
    18f2:	2000      	movs	r0, #0
    18f4:	f000 f8f0 	bl	1ad8 <__aeabi_idiv0>
    18f8:	bd02      	pop	{r1, pc}
    18fa:	46c0      	nop			; (mov r8, r8)

000018fc <__aeabi_uidivmod>:
    18fc:	2900      	cmp	r1, #0
    18fe:	d0f7      	beq.n	18f0 <__udivsi3+0x100>
    1900:	e776      	b.n	17f0 <__udivsi3>
    1902:	4770      	bx	lr

00001904 <__divsi3>:
    1904:	4603      	mov	r3, r0
    1906:	430b      	orrs	r3, r1
    1908:	d47f      	bmi.n	1a0a <__divsi3+0x106>
    190a:	2200      	movs	r2, #0
    190c:	0843      	lsrs	r3, r0, #1
    190e:	428b      	cmp	r3, r1
    1910:	d374      	bcc.n	19fc <__divsi3+0xf8>
    1912:	0903      	lsrs	r3, r0, #4
    1914:	428b      	cmp	r3, r1
    1916:	d35f      	bcc.n	19d8 <__divsi3+0xd4>
    1918:	0a03      	lsrs	r3, r0, #8
    191a:	428b      	cmp	r3, r1
    191c:	d344      	bcc.n	19a8 <__divsi3+0xa4>
    191e:	0b03      	lsrs	r3, r0, #12
    1920:	428b      	cmp	r3, r1
    1922:	d328      	bcc.n	1976 <__divsi3+0x72>
    1924:	0c03      	lsrs	r3, r0, #16
    1926:	428b      	cmp	r3, r1
    1928:	d30d      	bcc.n	1946 <__divsi3+0x42>
    192a:	22ff      	movs	r2, #255	; 0xff
    192c:	0209      	lsls	r1, r1, #8
    192e:	ba12      	rev	r2, r2
    1930:	0c03      	lsrs	r3, r0, #16
    1932:	428b      	cmp	r3, r1
    1934:	d302      	bcc.n	193c <__divsi3+0x38>
    1936:	1212      	asrs	r2, r2, #8
    1938:	0209      	lsls	r1, r1, #8
    193a:	d065      	beq.n	1a08 <__divsi3+0x104>
    193c:	0b03      	lsrs	r3, r0, #12
    193e:	428b      	cmp	r3, r1
    1940:	d319      	bcc.n	1976 <__divsi3+0x72>
    1942:	e000      	b.n	1946 <__divsi3+0x42>
    1944:	0a09      	lsrs	r1, r1, #8
    1946:	0bc3      	lsrs	r3, r0, #15
    1948:	428b      	cmp	r3, r1
    194a:	d301      	bcc.n	1950 <__divsi3+0x4c>
    194c:	03cb      	lsls	r3, r1, #15
    194e:	1ac0      	subs	r0, r0, r3
    1950:	4152      	adcs	r2, r2
    1952:	0b83      	lsrs	r3, r0, #14
    1954:	428b      	cmp	r3, r1
    1956:	d301      	bcc.n	195c <__divsi3+0x58>
    1958:	038b      	lsls	r3, r1, #14
    195a:	1ac0      	subs	r0, r0, r3
    195c:	4152      	adcs	r2, r2
    195e:	0b43      	lsrs	r3, r0, #13
    1960:	428b      	cmp	r3, r1
    1962:	d301      	bcc.n	1968 <__divsi3+0x64>
    1964:	034b      	lsls	r3, r1, #13
    1966:	1ac0      	subs	r0, r0, r3
    1968:	4152      	adcs	r2, r2
    196a:	0b03      	lsrs	r3, r0, #12
    196c:	428b      	cmp	r3, r1
    196e:	d301      	bcc.n	1974 <__divsi3+0x70>
    1970:	030b      	lsls	r3, r1, #12
    1972:	1ac0      	subs	r0, r0, r3
    1974:	4152      	adcs	r2, r2
    1976:	0ac3      	lsrs	r3, r0, #11
    1978:	428b      	cmp	r3, r1
    197a:	d301      	bcc.n	1980 <__divsi3+0x7c>
    197c:	02cb      	lsls	r3, r1, #11
    197e:	1ac0      	subs	r0, r0, r3
    1980:	4152      	adcs	r2, r2
    1982:	0a83      	lsrs	r3, r0, #10
    1984:	428b      	cmp	r3, r1
    1986:	d301      	bcc.n	198c <__divsi3+0x88>
    1988:	028b      	lsls	r3, r1, #10
    198a:	1ac0      	subs	r0, r0, r3
    198c:	4152      	adcs	r2, r2
    198e:	0a43      	lsrs	r3, r0, #9
    1990:	428b      	cmp	r3, r1
    1992:	d301      	bcc.n	1998 <__divsi3+0x94>
    1994:	024b      	lsls	r3, r1, #9
    1996:	1ac0      	subs	r0, r0, r3
    1998:	4152      	adcs	r2, r2
    199a:	0a03      	lsrs	r3, r0, #8
    199c:	428b      	cmp	r3, r1
    199e:	d301      	bcc.n	19a4 <__divsi3+0xa0>
    19a0:	020b      	lsls	r3, r1, #8
    19a2:	1ac0      	subs	r0, r0, r3
    19a4:	4152      	adcs	r2, r2
    19a6:	d2cd      	bcs.n	1944 <__divsi3+0x40>
    19a8:	09c3      	lsrs	r3, r0, #7
    19aa:	428b      	cmp	r3, r1
    19ac:	d301      	bcc.n	19b2 <__divsi3+0xae>
    19ae:	01cb      	lsls	r3, r1, #7
    19b0:	1ac0      	subs	r0, r0, r3
    19b2:	4152      	adcs	r2, r2
    19b4:	0983      	lsrs	r3, r0, #6
    19b6:	428b      	cmp	r3, r1
    19b8:	d301      	bcc.n	19be <__divsi3+0xba>
    19ba:	018b      	lsls	r3, r1, #6
    19bc:	1ac0      	subs	r0, r0, r3
    19be:	4152      	adcs	r2, r2
    19c0:	0943      	lsrs	r3, r0, #5
    19c2:	428b      	cmp	r3, r1
    19c4:	d301      	bcc.n	19ca <__divsi3+0xc6>
    19c6:	014b      	lsls	r3, r1, #5
    19c8:	1ac0      	subs	r0, r0, r3
    19ca:	4152      	adcs	r2, r2
    19cc:	0903      	lsrs	r3, r0, #4
    19ce:	428b      	cmp	r3, r1
    19d0:	d301      	bcc.n	19d6 <__divsi3+0xd2>
    19d2:	010b      	lsls	r3, r1, #4
    19d4:	1ac0      	subs	r0, r0, r3
    19d6:	4152      	adcs	r2, r2
    19d8:	08c3      	lsrs	r3, r0, #3
    19da:	428b      	cmp	r3, r1
    19dc:	d301      	bcc.n	19e2 <__divsi3+0xde>
    19de:	00cb      	lsls	r3, r1, #3
    19e0:	1ac0      	subs	r0, r0, r3
    19e2:	4152      	adcs	r2, r2
    19e4:	0883      	lsrs	r3, r0, #2
    19e6:	428b      	cmp	r3, r1
    19e8:	d301      	bcc.n	19ee <__divsi3+0xea>
    19ea:	008b      	lsls	r3, r1, #2
    19ec:	1ac0      	subs	r0, r0, r3
    19ee:	4152      	adcs	r2, r2
    19f0:	0843      	lsrs	r3, r0, #1
    19f2:	428b      	cmp	r3, r1
    19f4:	d301      	bcc.n	19fa <__divsi3+0xf6>
    19f6:	004b      	lsls	r3, r1, #1
    19f8:	1ac0      	subs	r0, r0, r3
    19fa:	4152      	adcs	r2, r2
    19fc:	1a41      	subs	r1, r0, r1
    19fe:	d200      	bcs.n	1a02 <__divsi3+0xfe>
    1a00:	4601      	mov	r1, r0
    1a02:	4152      	adcs	r2, r2
    1a04:	4610      	mov	r0, r2
    1a06:	4770      	bx	lr
    1a08:	e05d      	b.n	1ac6 <__divsi3+0x1c2>
    1a0a:	0fca      	lsrs	r2, r1, #31
    1a0c:	d000      	beq.n	1a10 <__divsi3+0x10c>
    1a0e:	4249      	negs	r1, r1
    1a10:	1003      	asrs	r3, r0, #32
    1a12:	d300      	bcc.n	1a16 <__divsi3+0x112>
    1a14:	4240      	negs	r0, r0
    1a16:	4053      	eors	r3, r2
    1a18:	2200      	movs	r2, #0
    1a1a:	469c      	mov	ip, r3
    1a1c:	0903      	lsrs	r3, r0, #4
    1a1e:	428b      	cmp	r3, r1
    1a20:	d32d      	bcc.n	1a7e <__divsi3+0x17a>
    1a22:	0a03      	lsrs	r3, r0, #8
    1a24:	428b      	cmp	r3, r1
    1a26:	d312      	bcc.n	1a4e <__divsi3+0x14a>
    1a28:	22fc      	movs	r2, #252	; 0xfc
    1a2a:	0189      	lsls	r1, r1, #6
    1a2c:	ba12      	rev	r2, r2
    1a2e:	0a03      	lsrs	r3, r0, #8
    1a30:	428b      	cmp	r3, r1
    1a32:	d30c      	bcc.n	1a4e <__divsi3+0x14a>
    1a34:	0189      	lsls	r1, r1, #6
    1a36:	1192      	asrs	r2, r2, #6
    1a38:	428b      	cmp	r3, r1
    1a3a:	d308      	bcc.n	1a4e <__divsi3+0x14a>
    1a3c:	0189      	lsls	r1, r1, #6
    1a3e:	1192      	asrs	r2, r2, #6
    1a40:	428b      	cmp	r3, r1
    1a42:	d304      	bcc.n	1a4e <__divsi3+0x14a>
    1a44:	0189      	lsls	r1, r1, #6
    1a46:	d03a      	beq.n	1abe <__divsi3+0x1ba>
    1a48:	1192      	asrs	r2, r2, #6
    1a4a:	e000      	b.n	1a4e <__divsi3+0x14a>
    1a4c:	0989      	lsrs	r1, r1, #6
    1a4e:	09c3      	lsrs	r3, r0, #7
    1a50:	428b      	cmp	r3, r1
    1a52:	d301      	bcc.n	1a58 <__divsi3+0x154>
    1a54:	01cb      	lsls	r3, r1, #7
    1a56:	1ac0      	subs	r0, r0, r3
    1a58:	4152      	adcs	r2, r2
    1a5a:	0983      	lsrs	r3, r0, #6
    1a5c:	428b      	cmp	r3, r1
    1a5e:	d301      	bcc.n	1a64 <__divsi3+0x160>
    1a60:	018b      	lsls	r3, r1, #6
    1a62:	1ac0      	subs	r0, r0, r3
    1a64:	4152      	adcs	r2, r2
    1a66:	0943      	lsrs	r3, r0, #5
    1a68:	428b      	cmp	r3, r1
    1a6a:	d301      	bcc.n	1a70 <__divsi3+0x16c>
    1a6c:	014b      	lsls	r3, r1, #5
    1a6e:	1ac0      	subs	r0, r0, r3
    1a70:	4152      	adcs	r2, r2
    1a72:	0903      	lsrs	r3, r0, #4
    1a74:	428b      	cmp	r3, r1
    1a76:	d301      	bcc.n	1a7c <__divsi3+0x178>
    1a78:	010b      	lsls	r3, r1, #4
    1a7a:	1ac0      	subs	r0, r0, r3
    1a7c:	4152      	adcs	r2, r2
    1a7e:	08c3      	lsrs	r3, r0, #3
    1a80:	428b      	cmp	r3, r1
    1a82:	d301      	bcc.n	1a88 <__divsi3+0x184>
    1a84:	00cb      	lsls	r3, r1, #3
    1a86:	1ac0      	subs	r0, r0, r3
    1a88:	4152      	adcs	r2, r2
    1a8a:	0883      	lsrs	r3, r0, #2
    1a8c:	428b      	cmp	r3, r1
    1a8e:	d301      	bcc.n	1a94 <__divsi3+0x190>
    1a90:	008b      	lsls	r3, r1, #2
    1a92:	1ac0      	subs	r0, r0, r3
    1a94:	4152      	adcs	r2, r2
    1a96:	d2d9      	bcs.n	1a4c <__divsi3+0x148>
    1a98:	0843      	lsrs	r3, r0, #1
    1a9a:	428b      	cmp	r3, r1
    1a9c:	d301      	bcc.n	1aa2 <__divsi3+0x19e>
    1a9e:	004b      	lsls	r3, r1, #1
    1aa0:	1ac0      	subs	r0, r0, r3
    1aa2:	4152      	adcs	r2, r2
    1aa4:	1a41      	subs	r1, r0, r1
    1aa6:	d200      	bcs.n	1aaa <__divsi3+0x1a6>
    1aa8:	4601      	mov	r1, r0
    1aaa:	4663      	mov	r3, ip
    1aac:	4152      	adcs	r2, r2
    1aae:	105b      	asrs	r3, r3, #1
    1ab0:	4610      	mov	r0, r2
    1ab2:	d301      	bcc.n	1ab8 <__divsi3+0x1b4>
    1ab4:	4240      	negs	r0, r0
    1ab6:	2b00      	cmp	r3, #0
    1ab8:	d500      	bpl.n	1abc <__divsi3+0x1b8>
    1aba:	4249      	negs	r1, r1
    1abc:	4770      	bx	lr
    1abe:	4663      	mov	r3, ip
    1ac0:	105b      	asrs	r3, r3, #1
    1ac2:	d300      	bcc.n	1ac6 <__divsi3+0x1c2>
    1ac4:	4240      	negs	r0, r0
    1ac6:	b501      	push	{r0, lr}
    1ac8:	2000      	movs	r0, #0
    1aca:	f000 f805 	bl	1ad8 <__aeabi_idiv0>
    1ace:	bd02      	pop	{r1, pc}

00001ad0 <__aeabi_idivmod>:
    1ad0:	2900      	cmp	r1, #0
    1ad2:	d0f8      	beq.n	1ac6 <__divsi3+0x1c2>
    1ad4:	e716      	b.n	1904 <__divsi3>
    1ad6:	4770      	bx	lr

00001ad8 <__aeabi_idiv0>:
    1ad8:	4770      	bx	lr
    1ada:	46c0      	nop			; (mov r8, r8)

00001adc <__cxa_atexit>:
    1adc:	b510      	push	{r4, lr}
    1ade:	0013      	movs	r3, r2
    1ae0:	000a      	movs	r2, r1
    1ae2:	0001      	movs	r1, r0
    1ae4:	2002      	movs	r0, #2
    1ae6:	f000 fb4f 	bl	2188 <__register_exitproc>
    1aea:	bd10      	pop	{r4, pc}

00001aec <__libc_init_array>:
    1aec:	b570      	push	{r4, r5, r6, lr}
    1aee:	4e0d      	ldr	r6, [pc, #52]	; (1b24 <__libc_init_array+0x38>)
    1af0:	4d0d      	ldr	r5, [pc, #52]	; (1b28 <__libc_init_array+0x3c>)
    1af2:	2400      	movs	r4, #0
    1af4:	1bad      	subs	r5, r5, r6
    1af6:	10ad      	asrs	r5, r5, #2
    1af8:	d005      	beq.n	1b06 <__libc_init_array+0x1a>
    1afa:	00a3      	lsls	r3, r4, #2
    1afc:	58f3      	ldr	r3, [r6, r3]
    1afe:	3401      	adds	r4, #1
    1b00:	4798      	blx	r3
    1b02:	42a5      	cmp	r5, r4
    1b04:	d1f9      	bne.n	1afa <__libc_init_array+0xe>
    1b06:	f000 fd3f 	bl	2588 <_init>
    1b0a:	4e08      	ldr	r6, [pc, #32]	; (1b2c <__libc_init_array+0x40>)
    1b0c:	4d08      	ldr	r5, [pc, #32]	; (1b30 <__libc_init_array+0x44>)
    1b0e:	2400      	movs	r4, #0
    1b10:	1bad      	subs	r5, r5, r6
    1b12:	10ad      	asrs	r5, r5, #2
    1b14:	d005      	beq.n	1b22 <__libc_init_array+0x36>
    1b16:	00a3      	lsls	r3, r4, #2
    1b18:	58f3      	ldr	r3, [r6, r3]
    1b1a:	3401      	adds	r4, #1
    1b1c:	4798      	blx	r3
    1b1e:	42a5      	cmp	r5, r4
    1b20:	d1f9      	bne.n	1b16 <__libc_init_array+0x2a>
    1b22:	bd70      	pop	{r4, r5, r6, pc}
    1b24:	00002594 	.word	0x00002594
    1b28:	00002594 	.word	0x00002594
    1b2c:	00002594 	.word	0x00002594
    1b30:	000025a0 	.word	0x000025a0

00001b34 <malloc>:
    1b34:	b510      	push	{r4, lr}
    1b36:	4b03      	ldr	r3, [pc, #12]	; (1b44 <malloc+0x10>)
    1b38:	0001      	movs	r1, r0
    1b3a:	6818      	ldr	r0, [r3, #0]
    1b3c:	f000 f804 	bl	1b48 <_malloc_r>
    1b40:	bd10      	pop	{r4, pc}
    1b42:	46c0      	nop			; (mov r8, r8)
    1b44:	20000014 	.word	0x20000014

00001b48 <_malloc_r>:
    1b48:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b4a:	4657      	mov	r7, sl
    1b4c:	4645      	mov	r5, r8
    1b4e:	46de      	mov	lr, fp
    1b50:	464e      	mov	r6, r9
    1b52:	b5e0      	push	{r5, r6, r7, lr}
    1b54:	000d      	movs	r5, r1
    1b56:	350b      	adds	r5, #11
    1b58:	b083      	sub	sp, #12
    1b5a:	0007      	movs	r7, r0
    1b5c:	2d16      	cmp	r5, #22
    1b5e:	d800      	bhi.n	1b62 <_malloc_r+0x1a>
    1b60:	e09f      	b.n	1ca2 <_malloc_r+0x15a>
    1b62:	2307      	movs	r3, #7
    1b64:	439d      	bics	r5, r3
    1b66:	d500      	bpl.n	1b6a <_malloc_r+0x22>
    1b68:	e0c4      	b.n	1cf4 <_malloc_r+0x1ac>
    1b6a:	42a9      	cmp	r1, r5
    1b6c:	d900      	bls.n	1b70 <_malloc_r+0x28>
    1b6e:	e0c1      	b.n	1cf4 <_malloc_r+0x1ac>
    1b70:	f000 fae8 	bl	2144 <__malloc_lock>
    1b74:	23f8      	movs	r3, #248	; 0xf8
    1b76:	33ff      	adds	r3, #255	; 0xff
    1b78:	429d      	cmp	r5, r3
    1b7a:	d800      	bhi.n	1b7e <_malloc_r+0x36>
    1b7c:	e28f      	b.n	209e <_malloc_r+0x556>
    1b7e:	0a68      	lsrs	r0, r5, #9
    1b80:	d100      	bne.n	1b84 <_malloc_r+0x3c>
    1b82:	e0bb      	b.n	1cfc <_malloc_r+0x1b4>
    1b84:	2804      	cmp	r0, #4
    1b86:	d900      	bls.n	1b8a <_malloc_r+0x42>
    1b88:	e162      	b.n	1e50 <_malloc_r+0x308>
    1b8a:	2338      	movs	r3, #56	; 0x38
    1b8c:	4698      	mov	r8, r3
    1b8e:	09a8      	lsrs	r0, r5, #6
    1b90:	4480      	add	r8, r0
    1b92:	3039      	adds	r0, #57	; 0x39
    1b94:	00c1      	lsls	r1, r0, #3
    1b96:	4ed2      	ldr	r6, [pc, #840]	; (1ee0 <_malloc_r+0x398>)
    1b98:	1871      	adds	r1, r6, r1
    1b9a:	3908      	subs	r1, #8
    1b9c:	68cc      	ldr	r4, [r1, #12]
    1b9e:	42a1      	cmp	r1, r4
    1ba0:	d019      	beq.n	1bd6 <_malloc_r+0x8e>
    1ba2:	2303      	movs	r3, #3
    1ba4:	6862      	ldr	r2, [r4, #4]
    1ba6:	439a      	bics	r2, r3
    1ba8:	0013      	movs	r3, r2
    1baa:	1b52      	subs	r2, r2, r5
    1bac:	2a0f      	cmp	r2, #15
    1bae:	dd00      	ble.n	1bb2 <_malloc_r+0x6a>
    1bb0:	e0aa      	b.n	1d08 <_malloc_r+0x1c0>
    1bb2:	2a00      	cmp	r2, #0
    1bb4:	db00      	blt.n	1bb8 <_malloc_r+0x70>
    1bb6:	e088      	b.n	1cca <_malloc_r+0x182>
    1bb8:	2303      	movs	r3, #3
    1bba:	469c      	mov	ip, r3
    1bbc:	e008      	b.n	1bd0 <_malloc_r+0x88>
    1bbe:	4662      	mov	r2, ip
    1bc0:	6863      	ldr	r3, [r4, #4]
    1bc2:	4393      	bics	r3, r2
    1bc4:	1b5a      	subs	r2, r3, r5
    1bc6:	2a0f      	cmp	r2, #15
    1bc8:	dd00      	ble.n	1bcc <_malloc_r+0x84>
    1bca:	e09d      	b.n	1d08 <_malloc_r+0x1c0>
    1bcc:	2a00      	cmp	r2, #0
    1bce:	da7c      	bge.n	1cca <_malloc_r+0x182>
    1bd0:	68e4      	ldr	r4, [r4, #12]
    1bd2:	42a1      	cmp	r1, r4
    1bd4:	d1f3      	bne.n	1bbe <_malloc_r+0x76>
    1bd6:	0032      	movs	r2, r6
    1bd8:	6934      	ldr	r4, [r6, #16]
    1bda:	3208      	adds	r2, #8
    1bdc:	4294      	cmp	r4, r2
    1bde:	d100      	bne.n	1be2 <_malloc_r+0x9a>
    1be0:	e190      	b.n	1f04 <_malloc_r+0x3bc>
    1be2:	2303      	movs	r3, #3
    1be4:	6861      	ldr	r1, [r4, #4]
    1be6:	4399      	bics	r1, r3
    1be8:	4689      	mov	r9, r1
    1bea:	1b49      	subs	r1, r1, r5
    1bec:	290f      	cmp	r1, #15
    1bee:	dd00      	ble.n	1bf2 <_malloc_r+0xaa>
    1bf0:	e162      	b.n	1eb8 <_malloc_r+0x370>
    1bf2:	6172      	str	r2, [r6, #20]
    1bf4:	6132      	str	r2, [r6, #16]
    1bf6:	2900      	cmp	r1, #0
    1bf8:	db00      	blt.n	1bfc <_malloc_r+0xb4>
    1bfa:	e087      	b.n	1d0c <_malloc_r+0x1c4>
    1bfc:	4ab9      	ldr	r2, [pc, #740]	; (1ee4 <_malloc_r+0x39c>)
    1bfe:	464b      	mov	r3, r9
    1c00:	4591      	cmp	r9, r2
    1c02:	d900      	bls.n	1c06 <_malloc_r+0xbe>
    1c04:	e130      	b.n	1e68 <_malloc_r+0x320>
    1c06:	08db      	lsrs	r3, r3, #3
    1c08:	3aff      	subs	r2, #255	; 0xff
    1c0a:	1099      	asrs	r1, r3, #2
    1c0c:	3aff      	subs	r2, #255	; 0xff
    1c0e:	408a      	lsls	r2, r1
    1c10:	00db      	lsls	r3, r3, #3
    1c12:	6871      	ldr	r1, [r6, #4]
    1c14:	199b      	adds	r3, r3, r6
    1c16:	430a      	orrs	r2, r1
    1c18:	6899      	ldr	r1, [r3, #8]
    1c1a:	6072      	str	r2, [r6, #4]
    1c1c:	60e3      	str	r3, [r4, #12]
    1c1e:	60a1      	str	r1, [r4, #8]
    1c20:	609c      	str	r4, [r3, #8]
    1c22:	0013      	movs	r3, r2
    1c24:	60cc      	str	r4, [r1, #12]
    1c26:	2101      	movs	r1, #1
    1c28:	1082      	asrs	r2, r0, #2
    1c2a:	4091      	lsls	r1, r2
    1c2c:	4299      	cmp	r1, r3
    1c2e:	d86f      	bhi.n	1d10 <_malloc_r+0x1c8>
    1c30:	420b      	tst	r3, r1
    1c32:	d105      	bne.n	1c40 <_malloc_r+0xf8>
    1c34:	2203      	movs	r2, #3
    1c36:	4390      	bics	r0, r2
    1c38:	0049      	lsls	r1, r1, #1
    1c3a:	3004      	adds	r0, #4
    1c3c:	420b      	tst	r3, r1
    1c3e:	d0fb      	beq.n	1c38 <_malloc_r+0xf0>
    1c40:	2303      	movs	r3, #3
    1c42:	4698      	mov	r8, r3
    1c44:	00c3      	lsls	r3, r0, #3
    1c46:	4699      	mov	r9, r3
    1c48:	44b1      	add	r9, r6
    1c4a:	46cc      	mov	ip, r9
    1c4c:	4682      	mov	sl, r0
    1c4e:	4663      	mov	r3, ip
    1c50:	68dc      	ldr	r4, [r3, #12]
    1c52:	45a4      	cmp	ip, r4
    1c54:	d107      	bne.n	1c66 <_malloc_r+0x11e>
    1c56:	e157      	b.n	1f08 <_malloc_r+0x3c0>
    1c58:	2a00      	cmp	r2, #0
    1c5a:	db00      	blt.n	1c5e <_malloc_r+0x116>
    1c5c:	e166      	b.n	1f2c <_malloc_r+0x3e4>
    1c5e:	68e4      	ldr	r4, [r4, #12]
    1c60:	45a4      	cmp	ip, r4
    1c62:	d100      	bne.n	1c66 <_malloc_r+0x11e>
    1c64:	e150      	b.n	1f08 <_malloc_r+0x3c0>
    1c66:	4642      	mov	r2, r8
    1c68:	6863      	ldr	r3, [r4, #4]
    1c6a:	4393      	bics	r3, r2
    1c6c:	1b5a      	subs	r2, r3, r5
    1c6e:	2a0f      	cmp	r2, #15
    1c70:	ddf2      	ble.n	1c58 <_malloc_r+0x110>
    1c72:	2001      	movs	r0, #1
    1c74:	4680      	mov	r8, r0
    1c76:	1961      	adds	r1, r4, r5
    1c78:	4305      	orrs	r5, r0
    1c7a:	6065      	str	r5, [r4, #4]
    1c7c:	68a0      	ldr	r0, [r4, #8]
    1c7e:	68e5      	ldr	r5, [r4, #12]
    1c80:	3608      	adds	r6, #8
    1c82:	60c5      	str	r5, [r0, #12]
    1c84:	60a8      	str	r0, [r5, #8]
    1c86:	4640      	mov	r0, r8
    1c88:	60f1      	str	r1, [r6, #12]
    1c8a:	60b1      	str	r1, [r6, #8]
    1c8c:	4310      	orrs	r0, r2
    1c8e:	6048      	str	r0, [r1, #4]
    1c90:	60ce      	str	r6, [r1, #12]
    1c92:	608e      	str	r6, [r1, #8]
    1c94:	0038      	movs	r0, r7
    1c96:	50e2      	str	r2, [r4, r3]
    1c98:	f000 fa5c 	bl	2154 <__malloc_unlock>
    1c9c:	0020      	movs	r0, r4
    1c9e:	3008      	adds	r0, #8
    1ca0:	e021      	b.n	1ce6 <_malloc_r+0x19e>
    1ca2:	2910      	cmp	r1, #16
    1ca4:	d826      	bhi.n	1cf4 <_malloc_r+0x1ac>
    1ca6:	0038      	movs	r0, r7
    1ca8:	f000 fa4c 	bl	2144 <__malloc_lock>
    1cac:	2510      	movs	r5, #16
    1cae:	2318      	movs	r3, #24
    1cb0:	2002      	movs	r0, #2
    1cb2:	4e8b      	ldr	r6, [pc, #556]	; (1ee0 <_malloc_r+0x398>)
    1cb4:	18f3      	adds	r3, r6, r3
    1cb6:	001a      	movs	r2, r3
    1cb8:	685c      	ldr	r4, [r3, #4]
    1cba:	3a08      	subs	r2, #8
    1cbc:	4294      	cmp	r4, r2
    1cbe:	d100      	bne.n	1cc2 <_malloc_r+0x17a>
    1cc0:	e12e      	b.n	1f20 <_malloc_r+0x3d8>
    1cc2:	2303      	movs	r3, #3
    1cc4:	6862      	ldr	r2, [r4, #4]
    1cc6:	439a      	bics	r2, r3
    1cc8:	0013      	movs	r3, r2
    1cca:	68e2      	ldr	r2, [r4, #12]
    1ccc:	68a1      	ldr	r1, [r4, #8]
    1cce:	60ca      	str	r2, [r1, #12]
    1cd0:	6091      	str	r1, [r2, #8]
    1cd2:	2201      	movs	r2, #1
    1cd4:	18e3      	adds	r3, r4, r3
    1cd6:	6859      	ldr	r1, [r3, #4]
    1cd8:	0038      	movs	r0, r7
    1cda:	430a      	orrs	r2, r1
    1cdc:	605a      	str	r2, [r3, #4]
    1cde:	f000 fa39 	bl	2154 <__malloc_unlock>
    1ce2:	0020      	movs	r0, r4
    1ce4:	3008      	adds	r0, #8
    1ce6:	b003      	add	sp, #12
    1ce8:	bc3c      	pop	{r2, r3, r4, r5}
    1cea:	4690      	mov	r8, r2
    1cec:	4699      	mov	r9, r3
    1cee:	46a2      	mov	sl, r4
    1cf0:	46ab      	mov	fp, r5
    1cf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1cf4:	230c      	movs	r3, #12
    1cf6:	2000      	movs	r0, #0
    1cf8:	603b      	str	r3, [r7, #0]
    1cfa:	e7f4      	b.n	1ce6 <_malloc_r+0x19e>
    1cfc:	2180      	movs	r1, #128	; 0x80
    1cfe:	233f      	movs	r3, #63	; 0x3f
    1d00:	2040      	movs	r0, #64	; 0x40
    1d02:	0089      	lsls	r1, r1, #2
    1d04:	4698      	mov	r8, r3
    1d06:	e746      	b.n	1b96 <_malloc_r+0x4e>
    1d08:	4640      	mov	r0, r8
    1d0a:	e764      	b.n	1bd6 <_malloc_r+0x8e>
    1d0c:	464b      	mov	r3, r9
    1d0e:	e7e0      	b.n	1cd2 <_malloc_r+0x18a>
    1d10:	2303      	movs	r3, #3
    1d12:	68b4      	ldr	r4, [r6, #8]
    1d14:	6862      	ldr	r2, [r4, #4]
    1d16:	439a      	bics	r2, r3
    1d18:	4690      	mov	r8, r2
    1d1a:	42aa      	cmp	r2, r5
    1d1c:	d303      	bcc.n	1d26 <_malloc_r+0x1de>
    1d1e:	1b53      	subs	r3, r2, r5
    1d20:	2b0f      	cmp	r3, #15
    1d22:	dd00      	ble.n	1d26 <_malloc_r+0x1de>
    1d24:	e086      	b.n	1e34 <_malloc_r+0x2ec>
    1d26:	0023      	movs	r3, r4
    1d28:	4443      	add	r3, r8
    1d2a:	4a6f      	ldr	r2, [pc, #444]	; (1ee8 <_malloc_r+0x3a0>)
    1d2c:	9301      	str	r3, [sp, #4]
    1d2e:	4b6f      	ldr	r3, [pc, #444]	; (1eec <_malloc_r+0x3a4>)
    1d30:	4693      	mov	fp, r2
    1d32:	681b      	ldr	r3, [r3, #0]
    1d34:	6812      	ldr	r2, [r2, #0]
    1d36:	18eb      	adds	r3, r5, r3
    1d38:	3201      	adds	r2, #1
    1d3a:	d100      	bne.n	1d3e <_malloc_r+0x1f6>
    1d3c:	e168      	b.n	2010 <_malloc_r+0x4c8>
    1d3e:	4a6c      	ldr	r2, [pc, #432]	; (1ef0 <_malloc_r+0x3a8>)
    1d40:	4694      	mov	ip, r2
    1d42:	4463      	add	r3, ip
    1d44:	0b1b      	lsrs	r3, r3, #12
    1d46:	031b      	lsls	r3, r3, #12
    1d48:	9300      	str	r3, [sp, #0]
    1d4a:	9900      	ldr	r1, [sp, #0]
    1d4c:	0038      	movs	r0, r7
    1d4e:	f000 fa09 	bl	2164 <_sbrk_r>
    1d52:	0003      	movs	r3, r0
    1d54:	4681      	mov	r9, r0
    1d56:	3301      	adds	r3, #1
    1d58:	d061      	beq.n	1e1e <_malloc_r+0x2d6>
    1d5a:	9b01      	ldr	r3, [sp, #4]
    1d5c:	4283      	cmp	r3, r0
    1d5e:	d900      	bls.n	1d62 <_malloc_r+0x21a>
    1d60:	e0ff      	b.n	1f62 <_malloc_r+0x41a>
    1d62:	4b64      	ldr	r3, [pc, #400]	; (1ef4 <_malloc_r+0x3ac>)
    1d64:	9a00      	ldr	r2, [sp, #0]
    1d66:	469a      	mov	sl, r3
    1d68:	681b      	ldr	r3, [r3, #0]
    1d6a:	469c      	mov	ip, r3
    1d6c:	4653      	mov	r3, sl
    1d6e:	4462      	add	r2, ip
    1d70:	601a      	str	r2, [r3, #0]
    1d72:	9b01      	ldr	r3, [sp, #4]
    1d74:	0011      	movs	r1, r2
    1d76:	4283      	cmp	r3, r0
    1d78:	d100      	bne.n	1d7c <_malloc_r+0x234>
    1d7a:	e155      	b.n	2028 <_malloc_r+0x4e0>
    1d7c:	465b      	mov	r3, fp
    1d7e:	681b      	ldr	r3, [r3, #0]
    1d80:	3301      	adds	r3, #1
    1d82:	d100      	bne.n	1d86 <_malloc_r+0x23e>
    1d84:	e16c      	b.n	2060 <_malloc_r+0x518>
    1d86:	464b      	mov	r3, r9
    1d88:	9a01      	ldr	r2, [sp, #4]
    1d8a:	1a9b      	subs	r3, r3, r2
    1d8c:	1859      	adds	r1, r3, r1
    1d8e:	4653      	mov	r3, sl
    1d90:	6019      	str	r1, [r3, #0]
    1d92:	2307      	movs	r3, #7
    1d94:	464a      	mov	r2, r9
    1d96:	4013      	ands	r3, r2
    1d98:	d100      	bne.n	1d9c <_malloc_r+0x254>
    1d9a:	e124      	b.n	1fe6 <_malloc_r+0x49e>
    1d9c:	2108      	movs	r1, #8
    1d9e:	4689      	mov	r9, r1
    1da0:	4955      	ldr	r1, [pc, #340]	; (1ef8 <_malloc_r+0x3b0>)
    1da2:	1ad2      	subs	r2, r2, r3
    1da4:	4491      	add	r9, r2
    1da6:	1acb      	subs	r3, r1, r3
    1da8:	9a00      	ldr	r2, [sp, #0]
    1daa:	0038      	movs	r0, r7
    1dac:	444a      	add	r2, r9
    1dae:	0511      	lsls	r1, r2, #20
    1db0:	0d09      	lsrs	r1, r1, #20
    1db2:	1a5b      	subs	r3, r3, r1
    1db4:	0019      	movs	r1, r3
    1db6:	469b      	mov	fp, r3
    1db8:	f000 f9d4 	bl	2164 <_sbrk_r>
    1dbc:	1c43      	adds	r3, r0, #1
    1dbe:	d100      	bne.n	1dc2 <_malloc_r+0x27a>
    1dc0:	e142      	b.n	2048 <_malloc_r+0x500>
    1dc2:	464b      	mov	r3, r9
    1dc4:	1ac0      	subs	r0, r0, r3
    1dc6:	2301      	movs	r3, #1
    1dc8:	4458      	add	r0, fp
    1dca:	4318      	orrs	r0, r3
    1dcc:	4653      	mov	r3, sl
    1dce:	681b      	ldr	r3, [r3, #0]
    1dd0:	445b      	add	r3, fp
    1dd2:	0019      	movs	r1, r3
    1dd4:	4653      	mov	r3, sl
    1dd6:	6019      	str	r1, [r3, #0]
    1dd8:	464b      	mov	r3, r9
    1dda:	60b3      	str	r3, [r6, #8]
    1ddc:	6058      	str	r0, [r3, #4]
    1dde:	42b4      	cmp	r4, r6
    1de0:	d013      	beq.n	1e0a <_malloc_r+0x2c2>
    1de2:	4643      	mov	r3, r8
    1de4:	2b0f      	cmp	r3, #15
    1de6:	d800      	bhi.n	1dea <_malloc_r+0x2a2>
    1de8:	e0e8      	b.n	1fbc <_malloc_r+0x474>
    1dea:	4643      	mov	r3, r8
    1dec:	2207      	movs	r2, #7
    1dee:	6860      	ldr	r0, [r4, #4]
    1df0:	3b0c      	subs	r3, #12
    1df2:	4393      	bics	r3, r2
    1df4:	3a06      	subs	r2, #6
    1df6:	4002      	ands	r2, r0
    1df8:	2005      	movs	r0, #5
    1dfa:	431a      	orrs	r2, r3
    1dfc:	6062      	str	r2, [r4, #4]
    1dfe:	18e2      	adds	r2, r4, r3
    1e00:	6050      	str	r0, [r2, #4]
    1e02:	6090      	str	r0, [r2, #8]
    1e04:	2b0f      	cmp	r3, #15
    1e06:	d900      	bls.n	1e0a <_malloc_r+0x2c2>
    1e08:	e122      	b.n	2050 <_malloc_r+0x508>
    1e0a:	4b3c      	ldr	r3, [pc, #240]	; (1efc <_malloc_r+0x3b4>)
    1e0c:	681a      	ldr	r2, [r3, #0]
    1e0e:	4291      	cmp	r1, r2
    1e10:	d900      	bls.n	1e14 <_malloc_r+0x2cc>
    1e12:	6019      	str	r1, [r3, #0]
    1e14:	4b3a      	ldr	r3, [pc, #232]	; (1f00 <_malloc_r+0x3b8>)
    1e16:	681a      	ldr	r2, [r3, #0]
    1e18:	4291      	cmp	r1, r2
    1e1a:	d900      	bls.n	1e1e <_malloc_r+0x2d6>
    1e1c:	6019      	str	r1, [r3, #0]
    1e1e:	2303      	movs	r3, #3
    1e20:	68b4      	ldr	r4, [r6, #8]
    1e22:	6862      	ldr	r2, [r4, #4]
    1e24:	439a      	bics	r2, r3
    1e26:	1b53      	subs	r3, r2, r5
    1e28:	4295      	cmp	r5, r2
    1e2a:	d900      	bls.n	1e2e <_malloc_r+0x2e6>
    1e2c:	e0c9      	b.n	1fc2 <_malloc_r+0x47a>
    1e2e:	2b0f      	cmp	r3, #15
    1e30:	dc00      	bgt.n	1e34 <_malloc_r+0x2ec>
    1e32:	e0c6      	b.n	1fc2 <_malloc_r+0x47a>
    1e34:	2201      	movs	r2, #1
    1e36:	0029      	movs	r1, r5
    1e38:	4313      	orrs	r3, r2
    1e3a:	4311      	orrs	r1, r2
    1e3c:	1965      	adds	r5, r4, r5
    1e3e:	6061      	str	r1, [r4, #4]
    1e40:	0038      	movs	r0, r7
    1e42:	60b5      	str	r5, [r6, #8]
    1e44:	606b      	str	r3, [r5, #4]
    1e46:	f000 f985 	bl	2154 <__malloc_unlock>
    1e4a:	0020      	movs	r0, r4
    1e4c:	3008      	adds	r0, #8
    1e4e:	e74a      	b.n	1ce6 <_malloc_r+0x19e>
    1e50:	2814      	cmp	r0, #20
    1e52:	d97a      	bls.n	1f4a <_malloc_r+0x402>
    1e54:	2854      	cmp	r0, #84	; 0x54
    1e56:	d900      	bls.n	1e5a <_malloc_r+0x312>
    1e58:	e0ba      	b.n	1fd0 <_malloc_r+0x488>
    1e5a:	236e      	movs	r3, #110	; 0x6e
    1e5c:	4698      	mov	r8, r3
    1e5e:	0b28      	lsrs	r0, r5, #12
    1e60:	4480      	add	r8, r0
    1e62:	306f      	adds	r0, #111	; 0x6f
    1e64:	00c1      	lsls	r1, r0, #3
    1e66:	e696      	b.n	1b96 <_malloc_r+0x4e>
    1e68:	0a5a      	lsrs	r2, r3, #9
    1e6a:	2a04      	cmp	r2, #4
    1e6c:	d973      	bls.n	1f56 <_malloc_r+0x40e>
    1e6e:	2a14      	cmp	r2, #20
    1e70:	d900      	bls.n	1e74 <_malloc_r+0x32c>
    1e72:	e0d0      	b.n	2016 <_malloc_r+0x4ce>
    1e74:	0011      	movs	r1, r2
    1e76:	325c      	adds	r2, #92	; 0x5c
    1e78:	315b      	adds	r1, #91	; 0x5b
    1e7a:	00d2      	lsls	r2, r2, #3
    1e7c:	2308      	movs	r3, #8
    1e7e:	425b      	negs	r3, r3
    1e80:	469c      	mov	ip, r3
    1e82:	18b2      	adds	r2, r6, r2
    1e84:	4494      	add	ip, r2
    1e86:	4663      	mov	r3, ip
    1e88:	689a      	ldr	r2, [r3, #8]
    1e8a:	2303      	movs	r3, #3
    1e8c:	4698      	mov	r8, r3
    1e8e:	4594      	cmp	ip, r2
    1e90:	d100      	bne.n	1e94 <_malloc_r+0x34c>
    1e92:	e0ab      	b.n	1fec <_malloc_r+0x4a4>
    1e94:	4643      	mov	r3, r8
    1e96:	6851      	ldr	r1, [r2, #4]
    1e98:	4399      	bics	r1, r3
    1e9a:	4589      	cmp	r9, r1
    1e9c:	d300      	bcc.n	1ea0 <_malloc_r+0x358>
    1e9e:	e095      	b.n	1fcc <_malloc_r+0x484>
    1ea0:	6892      	ldr	r2, [r2, #8]
    1ea2:	4594      	cmp	ip, r2
    1ea4:	d1f6      	bne.n	1e94 <_malloc_r+0x34c>
    1ea6:	4663      	mov	r3, ip
    1ea8:	68da      	ldr	r2, [r3, #12]
    1eaa:	6873      	ldr	r3, [r6, #4]
    1eac:	4661      	mov	r1, ip
    1eae:	60e2      	str	r2, [r4, #12]
    1eb0:	60a1      	str	r1, [r4, #8]
    1eb2:	6094      	str	r4, [r2, #8]
    1eb4:	60cc      	str	r4, [r1, #12]
    1eb6:	e6b6      	b.n	1c26 <_malloc_r+0xde>
    1eb8:	2301      	movs	r3, #1
    1eba:	1960      	adds	r0, r4, r5
    1ebc:	431d      	orrs	r5, r3
    1ebe:	6065      	str	r5, [r4, #4]
    1ec0:	6170      	str	r0, [r6, #20]
    1ec2:	6130      	str	r0, [r6, #16]
    1ec4:	60c2      	str	r2, [r0, #12]
    1ec6:	6082      	str	r2, [r0, #8]
    1ec8:	001a      	movs	r2, r3
    1eca:	464b      	mov	r3, r9
    1ecc:	430a      	orrs	r2, r1
    1ece:	6042      	str	r2, [r0, #4]
    1ed0:	0038      	movs	r0, r7
    1ed2:	50e1      	str	r1, [r4, r3]
    1ed4:	f000 f93e 	bl	2154 <__malloc_unlock>
    1ed8:	0020      	movs	r0, r4
    1eda:	3008      	adds	r0, #8
    1edc:	e703      	b.n	1ce6 <_malloc_r+0x19e>
    1ede:	46c0      	nop			; (mov r8, r8)
    1ee0:	20000440 	.word	0x20000440
    1ee4:	000001ff 	.word	0x000001ff
    1ee8:	20000848 	.word	0x20000848
    1eec:	20000970 	.word	0x20000970
    1ef0:	0000100f 	.word	0x0000100f
    1ef4:	20000940 	.word	0x20000940
    1ef8:	00001008 	.word	0x00001008
    1efc:	20000968 	.word	0x20000968
    1f00:	2000096c 	.word	0x2000096c
    1f04:	6873      	ldr	r3, [r6, #4]
    1f06:	e68e      	b.n	1c26 <_malloc_r+0xde>
    1f08:	2308      	movs	r3, #8
    1f0a:	469b      	mov	fp, r3
    1f0c:	3b07      	subs	r3, #7
    1f0e:	44dc      	add	ip, fp
    1f10:	469b      	mov	fp, r3
    1f12:	44da      	add	sl, fp
    1f14:	4643      	mov	r3, r8
    1f16:	4652      	mov	r2, sl
    1f18:	4213      	tst	r3, r2
    1f1a:	d000      	beq.n	1f1e <_malloc_r+0x3d6>
    1f1c:	e697      	b.n	1c4e <_malloc_r+0x106>
    1f1e:	e037      	b.n	1f90 <_malloc_r+0x448>
    1f20:	68dc      	ldr	r4, [r3, #12]
    1f22:	3002      	adds	r0, #2
    1f24:	42a3      	cmp	r3, r4
    1f26:	d100      	bne.n	1f2a <_malloc_r+0x3e2>
    1f28:	e655      	b.n	1bd6 <_malloc_r+0x8e>
    1f2a:	e6ca      	b.n	1cc2 <_malloc_r+0x17a>
    1f2c:	2201      	movs	r2, #1
    1f2e:	18e3      	adds	r3, r4, r3
    1f30:	6859      	ldr	r1, [r3, #4]
    1f32:	0038      	movs	r0, r7
    1f34:	430a      	orrs	r2, r1
    1f36:	605a      	str	r2, [r3, #4]
    1f38:	68e3      	ldr	r3, [r4, #12]
    1f3a:	68a2      	ldr	r2, [r4, #8]
    1f3c:	60d3      	str	r3, [r2, #12]
    1f3e:	609a      	str	r2, [r3, #8]
    1f40:	f000 f908 	bl	2154 <__malloc_unlock>
    1f44:	0020      	movs	r0, r4
    1f46:	3008      	adds	r0, #8
    1f48:	e6cd      	b.n	1ce6 <_malloc_r+0x19e>
    1f4a:	235b      	movs	r3, #91	; 0x5b
    1f4c:	4698      	mov	r8, r3
    1f4e:	4480      	add	r8, r0
    1f50:	305c      	adds	r0, #92	; 0x5c
    1f52:	00c1      	lsls	r1, r0, #3
    1f54:	e61f      	b.n	1b96 <_malloc_r+0x4e>
    1f56:	099a      	lsrs	r2, r3, #6
    1f58:	0011      	movs	r1, r2
    1f5a:	3239      	adds	r2, #57	; 0x39
    1f5c:	3138      	adds	r1, #56	; 0x38
    1f5e:	00d2      	lsls	r2, r2, #3
    1f60:	e78c      	b.n	1e7c <_malloc_r+0x334>
    1f62:	42b4      	cmp	r4, r6
    1f64:	d000      	beq.n	1f68 <_malloc_r+0x420>
    1f66:	e75a      	b.n	1e1e <_malloc_r+0x2d6>
    1f68:	4b4f      	ldr	r3, [pc, #316]	; (20a8 <_malloc_r+0x560>)
    1f6a:	9a00      	ldr	r2, [sp, #0]
    1f6c:	469a      	mov	sl, r3
    1f6e:	681b      	ldr	r3, [r3, #0]
    1f70:	469c      	mov	ip, r3
    1f72:	4653      	mov	r3, sl
    1f74:	4462      	add	r2, ip
    1f76:	0011      	movs	r1, r2
    1f78:	601a      	str	r2, [r3, #0]
    1f7a:	e6ff      	b.n	1d7c <_malloc_r+0x234>
    1f7c:	2308      	movs	r3, #8
    1f7e:	425b      	negs	r3, r3
    1f80:	469c      	mov	ip, r3
    1f82:	44e1      	add	r9, ip
    1f84:	464b      	mov	r3, r9
    1f86:	689b      	ldr	r3, [r3, #8]
    1f88:	3801      	subs	r0, #1
    1f8a:	4599      	cmp	r9, r3
    1f8c:	d000      	beq.n	1f90 <_malloc_r+0x448>
    1f8e:	e084      	b.n	209a <_malloc_r+0x552>
    1f90:	4643      	mov	r3, r8
    1f92:	4203      	tst	r3, r0
    1f94:	d1f2      	bne.n	1f7c <_malloc_r+0x434>
    1f96:	6873      	ldr	r3, [r6, #4]
    1f98:	438b      	bics	r3, r1
    1f9a:	6073      	str	r3, [r6, #4]
    1f9c:	0049      	lsls	r1, r1, #1
    1f9e:	4299      	cmp	r1, r3
    1fa0:	d900      	bls.n	1fa4 <_malloc_r+0x45c>
    1fa2:	e6b5      	b.n	1d10 <_malloc_r+0x1c8>
    1fa4:	2900      	cmp	r1, #0
    1fa6:	d100      	bne.n	1faa <_malloc_r+0x462>
    1fa8:	e6b2      	b.n	1d10 <_malloc_r+0x1c8>
    1faa:	4650      	mov	r0, sl
    1fac:	420b      	tst	r3, r1
    1fae:	d000      	beq.n	1fb2 <_malloc_r+0x46a>
    1fb0:	e648      	b.n	1c44 <_malloc_r+0xfc>
    1fb2:	0049      	lsls	r1, r1, #1
    1fb4:	3004      	adds	r0, #4
    1fb6:	420b      	tst	r3, r1
    1fb8:	d0fb      	beq.n	1fb2 <_malloc_r+0x46a>
    1fba:	e643      	b.n	1c44 <_malloc_r+0xfc>
    1fbc:	2301      	movs	r3, #1
    1fbe:	464a      	mov	r2, r9
    1fc0:	6053      	str	r3, [r2, #4]
    1fc2:	0038      	movs	r0, r7
    1fc4:	f000 f8c6 	bl	2154 <__malloc_unlock>
    1fc8:	2000      	movs	r0, #0
    1fca:	e68c      	b.n	1ce6 <_malloc_r+0x19e>
    1fcc:	4694      	mov	ip, r2
    1fce:	e76a      	b.n	1ea6 <_malloc_r+0x35e>
    1fd0:	23aa      	movs	r3, #170	; 0xaa
    1fd2:	005b      	lsls	r3, r3, #1
    1fd4:	4298      	cmp	r0, r3
    1fd6:	d811      	bhi.n	1ffc <_malloc_r+0x4b4>
    1fd8:	3bdd      	subs	r3, #221	; 0xdd
    1fda:	4698      	mov	r8, r3
    1fdc:	0be8      	lsrs	r0, r5, #15
    1fde:	4480      	add	r8, r0
    1fe0:	3078      	adds	r0, #120	; 0x78
    1fe2:	00c1      	lsls	r1, r0, #3
    1fe4:	e5d7      	b.n	1b96 <_malloc_r+0x4e>
    1fe6:	2380      	movs	r3, #128	; 0x80
    1fe8:	015b      	lsls	r3, r3, #5
    1fea:	e6dd      	b.n	1da8 <_malloc_r+0x260>
    1fec:	1089      	asrs	r1, r1, #2
    1fee:	3b02      	subs	r3, #2
    1ff0:	408b      	lsls	r3, r1
    1ff2:	6872      	ldr	r2, [r6, #4]
    1ff4:	4313      	orrs	r3, r2
    1ff6:	6073      	str	r3, [r6, #4]
    1ff8:	4662      	mov	r2, ip
    1ffa:	e757      	b.n	1eac <_malloc_r+0x364>
    1ffc:	4b2b      	ldr	r3, [pc, #172]	; (20ac <_malloc_r+0x564>)
    1ffe:	4298      	cmp	r0, r3
    2000:	d81c      	bhi.n	203c <_malloc_r+0x4f4>
    2002:	237c      	movs	r3, #124	; 0x7c
    2004:	4698      	mov	r8, r3
    2006:	0ca8      	lsrs	r0, r5, #18
    2008:	4480      	add	r8, r0
    200a:	307d      	adds	r0, #125	; 0x7d
    200c:	00c1      	lsls	r1, r0, #3
    200e:	e5c2      	b.n	1b96 <_malloc_r+0x4e>
    2010:	3310      	adds	r3, #16
    2012:	9300      	str	r3, [sp, #0]
    2014:	e699      	b.n	1d4a <_malloc_r+0x202>
    2016:	2a54      	cmp	r2, #84	; 0x54
    2018:	d826      	bhi.n	2068 <_malloc_r+0x520>
    201a:	464b      	mov	r3, r9
    201c:	0b1a      	lsrs	r2, r3, #12
    201e:	0011      	movs	r1, r2
    2020:	326f      	adds	r2, #111	; 0x6f
    2022:	316e      	adds	r1, #110	; 0x6e
    2024:	00d2      	lsls	r2, r2, #3
    2026:	e729      	b.n	1e7c <_malloc_r+0x334>
    2028:	051b      	lsls	r3, r3, #20
    202a:	d000      	beq.n	202e <_malloc_r+0x4e6>
    202c:	e6a6      	b.n	1d7c <_malloc_r+0x234>
    202e:	2001      	movs	r0, #1
    2030:	9b00      	ldr	r3, [sp, #0]
    2032:	68b2      	ldr	r2, [r6, #8]
    2034:	4443      	add	r3, r8
    2036:	4303      	orrs	r3, r0
    2038:	6053      	str	r3, [r2, #4]
    203a:	e6e6      	b.n	1e0a <_malloc_r+0x2c2>
    203c:	21fe      	movs	r1, #254	; 0xfe
    203e:	237e      	movs	r3, #126	; 0x7e
    2040:	207f      	movs	r0, #127	; 0x7f
    2042:	0089      	lsls	r1, r1, #2
    2044:	4698      	mov	r8, r3
    2046:	e5a6      	b.n	1b96 <_malloc_r+0x4e>
    2048:	2300      	movs	r3, #0
    204a:	2001      	movs	r0, #1
    204c:	469b      	mov	fp, r3
    204e:	e6bd      	b.n	1dcc <_malloc_r+0x284>
    2050:	0021      	movs	r1, r4
    2052:	0038      	movs	r0, r7
    2054:	3108      	adds	r1, #8
    2056:	f000 f98f 	bl	2378 <_free_r>
    205a:	4653      	mov	r3, sl
    205c:	6819      	ldr	r1, [r3, #0]
    205e:	e6d4      	b.n	1e0a <_malloc_r+0x2c2>
    2060:	465b      	mov	r3, fp
    2062:	464a      	mov	r2, r9
    2064:	601a      	str	r2, [r3, #0]
    2066:	e694      	b.n	1d92 <_malloc_r+0x24a>
    2068:	21aa      	movs	r1, #170	; 0xaa
    206a:	0049      	lsls	r1, r1, #1
    206c:	428a      	cmp	r2, r1
    206e:	d806      	bhi.n	207e <_malloc_r+0x536>
    2070:	464b      	mov	r3, r9
    2072:	0bda      	lsrs	r2, r3, #15
    2074:	0011      	movs	r1, r2
    2076:	3278      	adds	r2, #120	; 0x78
    2078:	3177      	adds	r1, #119	; 0x77
    207a:	00d2      	lsls	r2, r2, #3
    207c:	e6fe      	b.n	1e7c <_malloc_r+0x334>
    207e:	490b      	ldr	r1, [pc, #44]	; (20ac <_malloc_r+0x564>)
    2080:	428a      	cmp	r2, r1
    2082:	d806      	bhi.n	2092 <_malloc_r+0x54a>
    2084:	464b      	mov	r3, r9
    2086:	0c9a      	lsrs	r2, r3, #18
    2088:	0011      	movs	r1, r2
    208a:	327d      	adds	r2, #125	; 0x7d
    208c:	317c      	adds	r1, #124	; 0x7c
    208e:	00d2      	lsls	r2, r2, #3
    2090:	e6f4      	b.n	1e7c <_malloc_r+0x334>
    2092:	22fe      	movs	r2, #254	; 0xfe
    2094:	217e      	movs	r1, #126	; 0x7e
    2096:	0092      	lsls	r2, r2, #2
    2098:	e6f0      	b.n	1e7c <_malloc_r+0x334>
    209a:	6873      	ldr	r3, [r6, #4]
    209c:	e77e      	b.n	1f9c <_malloc_r+0x454>
    209e:	002b      	movs	r3, r5
    20a0:	08e8      	lsrs	r0, r5, #3
    20a2:	3308      	adds	r3, #8
    20a4:	e605      	b.n	1cb2 <_malloc_r+0x16a>
    20a6:	46c0      	nop			; (mov r8, r8)
    20a8:	20000940 	.word	0x20000940
    20ac:	00000554 	.word	0x00000554

000020b0 <memset>:
    20b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    20b2:	0783      	lsls	r3, r0, #30
    20b4:	d043      	beq.n	213e <memset+0x8e>
    20b6:	1e54      	subs	r4, r2, #1
    20b8:	2a00      	cmp	r2, #0
    20ba:	d03f      	beq.n	213c <memset+0x8c>
    20bc:	b2ce      	uxtb	r6, r1
    20be:	0002      	movs	r2, r0
    20c0:	2503      	movs	r5, #3
    20c2:	e002      	b.n	20ca <memset+0x1a>
    20c4:	001a      	movs	r2, r3
    20c6:	3c01      	subs	r4, #1
    20c8:	d338      	bcc.n	213c <memset+0x8c>
    20ca:	1c53      	adds	r3, r2, #1
    20cc:	7016      	strb	r6, [r2, #0]
    20ce:	422b      	tst	r3, r5
    20d0:	d1f8      	bne.n	20c4 <memset+0x14>
    20d2:	2c03      	cmp	r4, #3
    20d4:	d92a      	bls.n	212c <memset+0x7c>
    20d6:	22ff      	movs	r2, #255	; 0xff
    20d8:	400a      	ands	r2, r1
    20da:	0215      	lsls	r5, r2, #8
    20dc:	4315      	orrs	r5, r2
    20de:	042a      	lsls	r2, r5, #16
    20e0:	4315      	orrs	r5, r2
    20e2:	2c0f      	cmp	r4, #15
    20e4:	d914      	bls.n	2110 <memset+0x60>
    20e6:	0027      	movs	r7, r4
    20e8:	001a      	movs	r2, r3
    20ea:	3f10      	subs	r7, #16
    20ec:	093e      	lsrs	r6, r7, #4
    20ee:	3601      	adds	r6, #1
    20f0:	0136      	lsls	r6, r6, #4
    20f2:	199e      	adds	r6, r3, r6
    20f4:	6015      	str	r5, [r2, #0]
    20f6:	6055      	str	r5, [r2, #4]
    20f8:	6095      	str	r5, [r2, #8]
    20fa:	60d5      	str	r5, [r2, #12]
    20fc:	3210      	adds	r2, #16
    20fe:	4296      	cmp	r6, r2
    2100:	d1f8      	bne.n	20f4 <memset+0x44>
    2102:	220f      	movs	r2, #15
    2104:	4397      	bics	r7, r2
    2106:	3710      	adds	r7, #16
    2108:	19db      	adds	r3, r3, r7
    210a:	4014      	ands	r4, r2
    210c:	2c03      	cmp	r4, #3
    210e:	d90d      	bls.n	212c <memset+0x7c>
    2110:	001a      	movs	r2, r3
    2112:	1f27      	subs	r7, r4, #4
    2114:	08be      	lsrs	r6, r7, #2
    2116:	3601      	adds	r6, #1
    2118:	00b6      	lsls	r6, r6, #2
    211a:	199e      	adds	r6, r3, r6
    211c:	c220      	stmia	r2!, {r5}
    211e:	42b2      	cmp	r2, r6
    2120:	d1fc      	bne.n	211c <memset+0x6c>
    2122:	2203      	movs	r2, #3
    2124:	4397      	bics	r7, r2
    2126:	3704      	adds	r7, #4
    2128:	19db      	adds	r3, r3, r7
    212a:	4014      	ands	r4, r2
    212c:	2c00      	cmp	r4, #0
    212e:	d005      	beq.n	213c <memset+0x8c>
    2130:	b2c9      	uxtb	r1, r1
    2132:	191c      	adds	r4, r3, r4
    2134:	7019      	strb	r1, [r3, #0]
    2136:	3301      	adds	r3, #1
    2138:	429c      	cmp	r4, r3
    213a:	d1fb      	bne.n	2134 <memset+0x84>
    213c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    213e:	0014      	movs	r4, r2
    2140:	0003      	movs	r3, r0
    2142:	e7c6      	b.n	20d2 <memset+0x22>

00002144 <__malloc_lock>:
    2144:	b510      	push	{r4, lr}
    2146:	4802      	ldr	r0, [pc, #8]	; (2150 <__malloc_lock+0xc>)
    2148:	f000 f9f4 	bl	2534 <__retarget_lock_acquire_recursive>
    214c:	bd10      	pop	{r4, pc}
    214e:	46c0      	nop			; (mov r8, r8)
    2150:	200009dc 	.word	0x200009dc

00002154 <__malloc_unlock>:
    2154:	b510      	push	{r4, lr}
    2156:	4802      	ldr	r0, [pc, #8]	; (2160 <__malloc_unlock+0xc>)
    2158:	f000 f9ee 	bl	2538 <__retarget_lock_release_recursive>
    215c:	bd10      	pop	{r4, pc}
    215e:	46c0      	nop			; (mov r8, r8)
    2160:	200009dc 	.word	0x200009dc

00002164 <_sbrk_r>:
    2164:	2300      	movs	r3, #0
    2166:	b570      	push	{r4, r5, r6, lr}
    2168:	4c06      	ldr	r4, [pc, #24]	; (2184 <_sbrk_r+0x20>)
    216a:	0005      	movs	r5, r0
    216c:	0008      	movs	r0, r1
    216e:	6023      	str	r3, [r4, #0]
    2170:	f7ff fb24 	bl	17bc <_sbrk>
    2174:	1c43      	adds	r3, r0, #1
    2176:	d000      	beq.n	217a <_sbrk_r+0x16>
    2178:	bd70      	pop	{r4, r5, r6, pc}
    217a:	6823      	ldr	r3, [r4, #0]
    217c:	2b00      	cmp	r3, #0
    217e:	d0fb      	beq.n	2178 <_sbrk_r+0x14>
    2180:	602b      	str	r3, [r5, #0]
    2182:	e7f9      	b.n	2178 <_sbrk_r+0x14>
    2184:	200009f0 	.word	0x200009f0

00002188 <__register_exitproc>:
    2188:	b5f0      	push	{r4, r5, r6, r7, lr}
    218a:	464e      	mov	r6, r9
    218c:	4645      	mov	r5, r8
    218e:	46de      	mov	lr, fp
    2190:	4657      	mov	r7, sl
    2192:	b5e0      	push	{r5, r6, r7, lr}
    2194:	4d36      	ldr	r5, [pc, #216]	; (2270 <__register_exitproc+0xe8>)
    2196:	b083      	sub	sp, #12
    2198:	0006      	movs	r6, r0
    219a:	6828      	ldr	r0, [r5, #0]
    219c:	4698      	mov	r8, r3
    219e:	000f      	movs	r7, r1
    21a0:	4691      	mov	r9, r2
    21a2:	f000 f9c7 	bl	2534 <__retarget_lock_acquire_recursive>
    21a6:	4b33      	ldr	r3, [pc, #204]	; (2274 <__register_exitproc+0xec>)
    21a8:	681c      	ldr	r4, [r3, #0]
    21aa:	23a4      	movs	r3, #164	; 0xa4
    21ac:	005b      	lsls	r3, r3, #1
    21ae:	58e0      	ldr	r0, [r4, r3]
    21b0:	2800      	cmp	r0, #0
    21b2:	d052      	beq.n	225a <__register_exitproc+0xd2>
    21b4:	6843      	ldr	r3, [r0, #4]
    21b6:	2b1f      	cmp	r3, #31
    21b8:	dc13      	bgt.n	21e2 <__register_exitproc+0x5a>
    21ba:	1c5a      	adds	r2, r3, #1
    21bc:	9201      	str	r2, [sp, #4]
    21be:	2e00      	cmp	r6, #0
    21c0:	d128      	bne.n	2214 <__register_exitproc+0x8c>
    21c2:	9a01      	ldr	r2, [sp, #4]
    21c4:	3302      	adds	r3, #2
    21c6:	009b      	lsls	r3, r3, #2
    21c8:	6042      	str	r2, [r0, #4]
    21ca:	501f      	str	r7, [r3, r0]
    21cc:	6828      	ldr	r0, [r5, #0]
    21ce:	f000 f9b3 	bl	2538 <__retarget_lock_release_recursive>
    21d2:	2000      	movs	r0, #0
    21d4:	b003      	add	sp, #12
    21d6:	bc3c      	pop	{r2, r3, r4, r5}
    21d8:	4690      	mov	r8, r2
    21da:	4699      	mov	r9, r3
    21dc:	46a2      	mov	sl, r4
    21de:	46ab      	mov	fp, r5
    21e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    21e2:	4b25      	ldr	r3, [pc, #148]	; (2278 <__register_exitproc+0xf0>)
    21e4:	2b00      	cmp	r3, #0
    21e6:	d03d      	beq.n	2264 <__register_exitproc+0xdc>
    21e8:	20c8      	movs	r0, #200	; 0xc8
    21ea:	0040      	lsls	r0, r0, #1
    21ec:	f7ff fca2 	bl	1b34 <malloc>
    21f0:	2800      	cmp	r0, #0
    21f2:	d037      	beq.n	2264 <__register_exitproc+0xdc>
    21f4:	22a4      	movs	r2, #164	; 0xa4
    21f6:	2300      	movs	r3, #0
    21f8:	0052      	lsls	r2, r2, #1
    21fa:	58a1      	ldr	r1, [r4, r2]
    21fc:	6043      	str	r3, [r0, #4]
    21fe:	6001      	str	r1, [r0, #0]
    2200:	50a0      	str	r0, [r4, r2]
    2202:	3240      	adds	r2, #64	; 0x40
    2204:	5083      	str	r3, [r0, r2]
    2206:	3204      	adds	r2, #4
    2208:	5083      	str	r3, [r0, r2]
    220a:	3301      	adds	r3, #1
    220c:	9301      	str	r3, [sp, #4]
    220e:	2300      	movs	r3, #0
    2210:	2e00      	cmp	r6, #0
    2212:	d0d6      	beq.n	21c2 <__register_exitproc+0x3a>
    2214:	009a      	lsls	r2, r3, #2
    2216:	4692      	mov	sl, r2
    2218:	4482      	add	sl, r0
    221a:	464a      	mov	r2, r9
    221c:	2188      	movs	r1, #136	; 0x88
    221e:	4654      	mov	r4, sl
    2220:	5062      	str	r2, [r4, r1]
    2222:	22c4      	movs	r2, #196	; 0xc4
    2224:	0052      	lsls	r2, r2, #1
    2226:	4691      	mov	r9, r2
    2228:	4481      	add	r9, r0
    222a:	464a      	mov	r2, r9
    222c:	3987      	subs	r1, #135	; 0x87
    222e:	4099      	lsls	r1, r3
    2230:	6812      	ldr	r2, [r2, #0]
    2232:	468b      	mov	fp, r1
    2234:	430a      	orrs	r2, r1
    2236:	4694      	mov	ip, r2
    2238:	464a      	mov	r2, r9
    223a:	4661      	mov	r1, ip
    223c:	6011      	str	r1, [r2, #0]
    223e:	2284      	movs	r2, #132	; 0x84
    2240:	4641      	mov	r1, r8
    2242:	0052      	lsls	r2, r2, #1
    2244:	50a1      	str	r1, [r4, r2]
    2246:	2e02      	cmp	r6, #2
    2248:	d1bb      	bne.n	21c2 <__register_exitproc+0x3a>
    224a:	0002      	movs	r2, r0
    224c:	465c      	mov	r4, fp
    224e:	328d      	adds	r2, #141	; 0x8d
    2250:	32ff      	adds	r2, #255	; 0xff
    2252:	6811      	ldr	r1, [r2, #0]
    2254:	430c      	orrs	r4, r1
    2256:	6014      	str	r4, [r2, #0]
    2258:	e7b3      	b.n	21c2 <__register_exitproc+0x3a>
    225a:	0020      	movs	r0, r4
    225c:	304d      	adds	r0, #77	; 0x4d
    225e:	30ff      	adds	r0, #255	; 0xff
    2260:	50e0      	str	r0, [r4, r3]
    2262:	e7a7      	b.n	21b4 <__register_exitproc+0x2c>
    2264:	6828      	ldr	r0, [r5, #0]
    2266:	f000 f967 	bl	2538 <__retarget_lock_release_recursive>
    226a:	2001      	movs	r0, #1
    226c:	4240      	negs	r0, r0
    226e:	e7b1      	b.n	21d4 <__register_exitproc+0x4c>
    2270:	20000850 	.word	0x20000850
    2274:	00002584 	.word	0x00002584
    2278:	00001b35 	.word	0x00001b35

0000227c <register_fini>:
    227c:	4b03      	ldr	r3, [pc, #12]	; (228c <register_fini+0x10>)
    227e:	b510      	push	{r4, lr}
    2280:	2b00      	cmp	r3, #0
    2282:	d002      	beq.n	228a <register_fini+0xe>
    2284:	4802      	ldr	r0, [pc, #8]	; (2290 <register_fini+0x14>)
    2286:	f000 f805 	bl	2294 <atexit>
    228a:	bd10      	pop	{r4, pc}
    228c:	00000000 	.word	0x00000000
    2290:	000022a5 	.word	0x000022a5

00002294 <atexit>:
    2294:	b510      	push	{r4, lr}
    2296:	0001      	movs	r1, r0
    2298:	2300      	movs	r3, #0
    229a:	2200      	movs	r2, #0
    229c:	2000      	movs	r0, #0
    229e:	f7ff ff73 	bl	2188 <__register_exitproc>
    22a2:	bd10      	pop	{r4, pc}

000022a4 <__libc_fini_array>:
    22a4:	b570      	push	{r4, r5, r6, lr}
    22a6:	4b09      	ldr	r3, [pc, #36]	; (22cc <__libc_fini_array+0x28>)
    22a8:	4c09      	ldr	r4, [pc, #36]	; (22d0 <__libc_fini_array+0x2c>)
    22aa:	1ae4      	subs	r4, r4, r3
    22ac:	10a4      	asrs	r4, r4, #2
    22ae:	d009      	beq.n	22c4 <__libc_fini_array+0x20>
    22b0:	4a08      	ldr	r2, [pc, #32]	; (22d4 <__libc_fini_array+0x30>)
    22b2:	18a5      	adds	r5, r4, r2
    22b4:	00ad      	lsls	r5, r5, #2
    22b6:	18ed      	adds	r5, r5, r3
    22b8:	682b      	ldr	r3, [r5, #0]
    22ba:	3c01      	subs	r4, #1
    22bc:	4798      	blx	r3
    22be:	3d04      	subs	r5, #4
    22c0:	2c00      	cmp	r4, #0
    22c2:	d1f9      	bne.n	22b8 <__libc_fini_array+0x14>
    22c4:	f000 f96c 	bl	25a0 <_fini>
    22c8:	bd70      	pop	{r4, r5, r6, pc}
    22ca:	46c0      	nop			; (mov r8, r8)
    22cc:	000025ac 	.word	0x000025ac
    22d0:	000025b0 	.word	0x000025b0
    22d4:	3fffffff 	.word	0x3fffffff

000022d8 <_malloc_trim_r>:
    22d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    22da:	000c      	movs	r4, r1
    22dc:	0006      	movs	r6, r0
    22de:	f7ff ff31 	bl	2144 <__malloc_lock>
    22e2:	4f20      	ldr	r7, [pc, #128]	; (2364 <_malloc_trim_r+0x8c>)
    22e4:	68bb      	ldr	r3, [r7, #8]
    22e6:	685d      	ldr	r5, [r3, #4]
    22e8:	2303      	movs	r3, #3
    22ea:	439d      	bics	r5, r3
    22ec:	4b1e      	ldr	r3, [pc, #120]	; (2368 <_malloc_trim_r+0x90>)
    22ee:	1b2c      	subs	r4, r5, r4
    22f0:	469c      	mov	ip, r3
    22f2:	4464      	add	r4, ip
    22f4:	0b24      	lsrs	r4, r4, #12
    22f6:	4b1d      	ldr	r3, [pc, #116]	; (236c <_malloc_trim_r+0x94>)
    22f8:	3c01      	subs	r4, #1
    22fa:	0324      	lsls	r4, r4, #12
    22fc:	429c      	cmp	r4, r3
    22fe:	dd07      	ble.n	2310 <_malloc_trim_r+0x38>
    2300:	2100      	movs	r1, #0
    2302:	0030      	movs	r0, r6
    2304:	f7ff ff2e 	bl	2164 <_sbrk_r>
    2308:	68bb      	ldr	r3, [r7, #8]
    230a:	195b      	adds	r3, r3, r5
    230c:	4298      	cmp	r0, r3
    230e:	d004      	beq.n	231a <_malloc_trim_r+0x42>
    2310:	0030      	movs	r0, r6
    2312:	f7ff ff1f 	bl	2154 <__malloc_unlock>
    2316:	2000      	movs	r0, #0
    2318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    231a:	4261      	negs	r1, r4
    231c:	0030      	movs	r0, r6
    231e:	f7ff ff21 	bl	2164 <_sbrk_r>
    2322:	1c43      	adds	r3, r0, #1
    2324:	d00d      	beq.n	2342 <_malloc_trim_r+0x6a>
    2326:	2201      	movs	r2, #1
    2328:	68bb      	ldr	r3, [r7, #8]
    232a:	1b2d      	subs	r5, r5, r4
    232c:	4315      	orrs	r5, r2
    232e:	605d      	str	r5, [r3, #4]
    2330:	4b0f      	ldr	r3, [pc, #60]	; (2370 <_malloc_trim_r+0x98>)
    2332:	0030      	movs	r0, r6
    2334:	681a      	ldr	r2, [r3, #0]
    2336:	1b14      	subs	r4, r2, r4
    2338:	601c      	str	r4, [r3, #0]
    233a:	f7ff ff0b 	bl	2154 <__malloc_unlock>
    233e:	2001      	movs	r0, #1
    2340:	e7ea      	b.n	2318 <_malloc_trim_r+0x40>
    2342:	2100      	movs	r1, #0
    2344:	0030      	movs	r0, r6
    2346:	f7ff ff0d 	bl	2164 <_sbrk_r>
    234a:	68ba      	ldr	r2, [r7, #8]
    234c:	1a83      	subs	r3, r0, r2
    234e:	2b0f      	cmp	r3, #15
    2350:	ddde      	ble.n	2310 <_malloc_trim_r+0x38>
    2352:	4908      	ldr	r1, [pc, #32]	; (2374 <_malloc_trim_r+0x9c>)
    2354:	6809      	ldr	r1, [r1, #0]
    2356:	1a40      	subs	r0, r0, r1
    2358:	4905      	ldr	r1, [pc, #20]	; (2370 <_malloc_trim_r+0x98>)
    235a:	6008      	str	r0, [r1, #0]
    235c:	2101      	movs	r1, #1
    235e:	430b      	orrs	r3, r1
    2360:	6053      	str	r3, [r2, #4]
    2362:	e7d5      	b.n	2310 <_malloc_trim_r+0x38>
    2364:	20000440 	.word	0x20000440
    2368:	00000fef 	.word	0x00000fef
    236c:	00000fff 	.word	0x00000fff
    2370:	20000940 	.word	0x20000940
    2374:	20000848 	.word	0x20000848

00002378 <_free_r>:
    2378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    237a:	0004      	movs	r4, r0
    237c:	1e0d      	subs	r5, r1, #0
    237e:	d03c      	beq.n	23fa <_free_r+0x82>
    2380:	f7ff fee0 	bl	2144 <__malloc_lock>
    2384:	0029      	movs	r1, r5
    2386:	3908      	subs	r1, #8
    2388:	6848      	ldr	r0, [r1, #4]
    238a:	2301      	movs	r3, #1
    238c:	0005      	movs	r5, r0
    238e:	2603      	movs	r6, #3
    2390:	439d      	bics	r5, r3
    2392:	194a      	adds	r2, r1, r5
    2394:	469c      	mov	ip, r3
    2396:	4f61      	ldr	r7, [pc, #388]	; (251c <_free_r+0x1a4>)
    2398:	6853      	ldr	r3, [r2, #4]
    239a:	43b3      	bics	r3, r6
    239c:	68be      	ldr	r6, [r7, #8]
    239e:	42b2      	cmp	r2, r6
    23a0:	d056      	beq.n	2450 <_free_r+0xd8>
    23a2:	4666      	mov	r6, ip
    23a4:	6053      	str	r3, [r2, #4]
    23a6:	4206      	tst	r6, r0
    23a8:	d10a      	bne.n	23c0 <_free_r+0x48>
    23aa:	003e      	movs	r6, r7
    23ac:	6808      	ldr	r0, [r1, #0]
    23ae:	3608      	adds	r6, #8
    23b0:	1a09      	subs	r1, r1, r0
    23b2:	182d      	adds	r5, r5, r0
    23b4:	6888      	ldr	r0, [r1, #8]
    23b6:	42b0      	cmp	r0, r6
    23b8:	d065      	beq.n	2486 <_free_r+0x10e>
    23ba:	68ce      	ldr	r6, [r1, #12]
    23bc:	60c6      	str	r6, [r0, #12]
    23be:	60b0      	str	r0, [r6, #8]
    23c0:	2001      	movs	r0, #1
    23c2:	18d6      	adds	r6, r2, r3
    23c4:	6876      	ldr	r6, [r6, #4]
    23c6:	4206      	tst	r6, r0
    23c8:	d033      	beq.n	2432 <_free_r+0xba>
    23ca:	4b55      	ldr	r3, [pc, #340]	; (2520 <_free_r+0x1a8>)
    23cc:	4328      	orrs	r0, r5
    23ce:	6048      	str	r0, [r1, #4]
    23d0:	514d      	str	r5, [r1, r5]
    23d2:	429d      	cmp	r5, r3
    23d4:	d812      	bhi.n	23fc <_free_r+0x84>
    23d6:	08ed      	lsrs	r5, r5, #3
    23d8:	3bff      	subs	r3, #255	; 0xff
    23da:	10aa      	asrs	r2, r5, #2
    23dc:	3bff      	subs	r3, #255	; 0xff
    23de:	4093      	lsls	r3, r2
    23e0:	687a      	ldr	r2, [r7, #4]
    23e2:	00ed      	lsls	r5, r5, #3
    23e4:	4313      	orrs	r3, r2
    23e6:	607b      	str	r3, [r7, #4]
    23e8:	19ef      	adds	r7, r5, r7
    23ea:	68bb      	ldr	r3, [r7, #8]
    23ec:	60cf      	str	r7, [r1, #12]
    23ee:	608b      	str	r3, [r1, #8]
    23f0:	60b9      	str	r1, [r7, #8]
    23f2:	60d9      	str	r1, [r3, #12]
    23f4:	0020      	movs	r0, r4
    23f6:	f7ff fead 	bl	2154 <__malloc_unlock>
    23fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    23fc:	0a68      	lsrs	r0, r5, #9
    23fe:	2804      	cmp	r0, #4
    2400:	d850      	bhi.n	24a4 <_free_r+0x12c>
    2402:	09a8      	lsrs	r0, r5, #6
    2404:	0002      	movs	r2, r0
    2406:	3039      	adds	r0, #57	; 0x39
    2408:	3238      	adds	r2, #56	; 0x38
    240a:	00c0      	lsls	r0, r0, #3
    240c:	1838      	adds	r0, r7, r0
    240e:	3808      	subs	r0, #8
    2410:	6883      	ldr	r3, [r0, #8]
    2412:	2603      	movs	r6, #3
    2414:	4298      	cmp	r0, r3
    2416:	d04c      	beq.n	24b2 <_free_r+0x13a>
    2418:	685a      	ldr	r2, [r3, #4]
    241a:	43b2      	bics	r2, r6
    241c:	4295      	cmp	r5, r2
    241e:	d230      	bcs.n	2482 <_free_r+0x10a>
    2420:	689b      	ldr	r3, [r3, #8]
    2422:	4298      	cmp	r0, r3
    2424:	d1f8      	bne.n	2418 <_free_r+0xa0>
    2426:	68c3      	ldr	r3, [r0, #12]
    2428:	60cb      	str	r3, [r1, #12]
    242a:	6088      	str	r0, [r1, #8]
    242c:	6099      	str	r1, [r3, #8]
    242e:	60c1      	str	r1, [r0, #12]
    2430:	e7e0      	b.n	23f4 <_free_r+0x7c>
    2432:	18ed      	adds	r5, r5, r3
    2434:	4e3b      	ldr	r6, [pc, #236]	; (2524 <_free_r+0x1ac>)
    2436:	6893      	ldr	r3, [r2, #8]
    2438:	42b3      	cmp	r3, r6
    243a:	d042      	beq.n	24c2 <_free_r+0x14a>
    243c:	68d2      	ldr	r2, [r2, #12]
    243e:	4328      	orrs	r0, r5
    2440:	60da      	str	r2, [r3, #12]
    2442:	6093      	str	r3, [r2, #8]
    2444:	4b36      	ldr	r3, [pc, #216]	; (2520 <_free_r+0x1a8>)
    2446:	6048      	str	r0, [r1, #4]
    2448:	514d      	str	r5, [r1, r5]
    244a:	429d      	cmp	r5, r3
    244c:	d8d6      	bhi.n	23fc <_free_r+0x84>
    244e:	e7c2      	b.n	23d6 <_free_r+0x5e>
    2450:	4662      	mov	r2, ip
    2452:	18eb      	adds	r3, r5, r3
    2454:	4202      	tst	r2, r0
    2456:	d106      	bne.n	2466 <_free_r+0xee>
    2458:	680a      	ldr	r2, [r1, #0]
    245a:	1a89      	subs	r1, r1, r2
    245c:	6888      	ldr	r0, [r1, #8]
    245e:	189b      	adds	r3, r3, r2
    2460:	68ca      	ldr	r2, [r1, #12]
    2462:	60c2      	str	r2, [r0, #12]
    2464:	6090      	str	r0, [r2, #8]
    2466:	2201      	movs	r2, #1
    2468:	431a      	orrs	r2, r3
    246a:	604a      	str	r2, [r1, #4]
    246c:	4a2e      	ldr	r2, [pc, #184]	; (2528 <_free_r+0x1b0>)
    246e:	60b9      	str	r1, [r7, #8]
    2470:	6812      	ldr	r2, [r2, #0]
    2472:	4293      	cmp	r3, r2
    2474:	d3be      	bcc.n	23f4 <_free_r+0x7c>
    2476:	4b2d      	ldr	r3, [pc, #180]	; (252c <_free_r+0x1b4>)
    2478:	0020      	movs	r0, r4
    247a:	6819      	ldr	r1, [r3, #0]
    247c:	f7ff ff2c 	bl	22d8 <_malloc_trim_r>
    2480:	e7b8      	b.n	23f4 <_free_r+0x7c>
    2482:	0018      	movs	r0, r3
    2484:	e7cf      	b.n	2426 <_free_r+0xae>
    2486:	4666      	mov	r6, ip
    2488:	18d0      	adds	r0, r2, r3
    248a:	6840      	ldr	r0, [r0, #4]
    248c:	4230      	tst	r0, r6
    248e:	d13f      	bne.n	2510 <_free_r+0x198>
    2490:	6890      	ldr	r0, [r2, #8]
    2492:	195d      	adds	r5, r3, r5
    2494:	68d3      	ldr	r3, [r2, #12]
    2496:	60c3      	str	r3, [r0, #12]
    2498:	6098      	str	r0, [r3, #8]
    249a:	4663      	mov	r3, ip
    249c:	432b      	orrs	r3, r5
    249e:	604b      	str	r3, [r1, #4]
    24a0:	514d      	str	r5, [r1, r5]
    24a2:	e7a7      	b.n	23f4 <_free_r+0x7c>
    24a4:	2814      	cmp	r0, #20
    24a6:	d814      	bhi.n	24d2 <_free_r+0x15a>
    24a8:	0002      	movs	r2, r0
    24aa:	305c      	adds	r0, #92	; 0x5c
    24ac:	325b      	adds	r2, #91	; 0x5b
    24ae:	00c0      	lsls	r0, r0, #3
    24b0:	e7ac      	b.n	240c <_free_r+0x94>
    24b2:	2301      	movs	r3, #1
    24b4:	1092      	asrs	r2, r2, #2
    24b6:	4093      	lsls	r3, r2
    24b8:	687a      	ldr	r2, [r7, #4]
    24ba:	4313      	orrs	r3, r2
    24bc:	607b      	str	r3, [r7, #4]
    24be:	0003      	movs	r3, r0
    24c0:	e7b2      	b.n	2428 <_free_r+0xb0>
    24c2:	4328      	orrs	r0, r5
    24c4:	60d9      	str	r1, [r3, #12]
    24c6:	6099      	str	r1, [r3, #8]
    24c8:	60cb      	str	r3, [r1, #12]
    24ca:	608b      	str	r3, [r1, #8]
    24cc:	6048      	str	r0, [r1, #4]
    24ce:	514d      	str	r5, [r1, r5]
    24d0:	e790      	b.n	23f4 <_free_r+0x7c>
    24d2:	2854      	cmp	r0, #84	; 0x54
    24d4:	d805      	bhi.n	24e2 <_free_r+0x16a>
    24d6:	0b28      	lsrs	r0, r5, #12
    24d8:	0002      	movs	r2, r0
    24da:	306f      	adds	r0, #111	; 0x6f
    24dc:	326e      	adds	r2, #110	; 0x6e
    24de:	00c0      	lsls	r0, r0, #3
    24e0:	e794      	b.n	240c <_free_r+0x94>
    24e2:	22aa      	movs	r2, #170	; 0xaa
    24e4:	0052      	lsls	r2, r2, #1
    24e6:	4290      	cmp	r0, r2
    24e8:	d805      	bhi.n	24f6 <_free_r+0x17e>
    24ea:	0be8      	lsrs	r0, r5, #15
    24ec:	0002      	movs	r2, r0
    24ee:	3078      	adds	r0, #120	; 0x78
    24f0:	3277      	adds	r2, #119	; 0x77
    24f2:	00c0      	lsls	r0, r0, #3
    24f4:	e78a      	b.n	240c <_free_r+0x94>
    24f6:	4a0e      	ldr	r2, [pc, #56]	; (2530 <_free_r+0x1b8>)
    24f8:	4290      	cmp	r0, r2
    24fa:	d805      	bhi.n	2508 <_free_r+0x190>
    24fc:	0ca8      	lsrs	r0, r5, #18
    24fe:	0002      	movs	r2, r0
    2500:	307d      	adds	r0, #125	; 0x7d
    2502:	327c      	adds	r2, #124	; 0x7c
    2504:	00c0      	lsls	r0, r0, #3
    2506:	e781      	b.n	240c <_free_r+0x94>
    2508:	20fe      	movs	r0, #254	; 0xfe
    250a:	227e      	movs	r2, #126	; 0x7e
    250c:	0080      	lsls	r0, r0, #2
    250e:	e77d      	b.n	240c <_free_r+0x94>
    2510:	4663      	mov	r3, ip
    2512:	432b      	orrs	r3, r5
    2514:	604b      	str	r3, [r1, #4]
    2516:	6015      	str	r5, [r2, #0]
    2518:	e76c      	b.n	23f4 <_free_r+0x7c>
    251a:	46c0      	nop			; (mov r8, r8)
    251c:	20000440 	.word	0x20000440
    2520:	000001ff 	.word	0x000001ff
    2524:	20000448 	.word	0x20000448
    2528:	2000084c 	.word	0x2000084c
    252c:	20000970 	.word	0x20000970
    2530:	00000554 	.word	0x00000554

00002534 <__retarget_lock_acquire_recursive>:
    2534:	4770      	bx	lr
    2536:	46c0      	nop			; (mov r8, r8)

00002538 <__retarget_lock_release_recursive>:
    2538:	4770      	bx	lr
    253a:	46c0      	nop			; (mov r8, r8)
    253c:	00000fc2 	.word	0x00000fc2
    2540:	00000fbe 	.word	0x00000fbe
    2544:	00000fbe 	.word	0x00000fbe
    2548:	00001024 	.word	0x00001024
    254c:	00001024 	.word	0x00001024
    2550:	00000fd6 	.word	0x00000fd6
    2554:	00000fc8 	.word	0x00000fc8
    2558:	00000fdc 	.word	0x00000fdc
    255c:	00001012 	.word	0x00001012
    2560:	000011a8 	.word	0x000011a8
    2564:	00001188 	.word	0x00001188
    2568:	00001188 	.word	0x00001188
    256c:	00001214 	.word	0x00001214
    2570:	0000119a 	.word	0x0000119a
    2574:	000011b6 	.word	0x000011b6
    2578:	0000118c 	.word	0x0000118c
    257c:	000011c4 	.word	0x000011c4
    2580:	00001204 	.word	0x00001204

00002584 <_global_impure_ptr>:
    2584:	20000018                                ... 

00002588 <_init>:
    2588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    258a:	46c0      	nop			; (mov r8, r8)
    258c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    258e:	bc08      	pop	{r3}
    2590:	469e      	mov	lr, r3
    2592:	4770      	bx	lr

00002594 <__init_array_start>:
    2594:	0000227d 	.word	0x0000227d

00002598 <__frame_dummy_init_array_entry>:
    2598:	000000b5 000005d1                       ........

000025a0 <_fini>:
    25a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    25a2:	46c0      	nop			; (mov r8, r8)
    25a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    25a6:	bc08      	pop	{r3}
    25a8:	469e      	mov	lr, r3
    25aa:	4770      	bx	lr

000025ac <__fini_array_start>:
    25ac:	0000008d 	.word	0x0000008d
